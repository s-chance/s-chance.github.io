<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>树下集熵</title>
  
  <subtitle>the truth of life</subtitle>
  <link href="https://www.entropy-tree.top/atom.xml" rel="self"/>
  
  <link href="https://www.entropy-tree.top/"/>
  <updated>2023-09-05T16:12:45.679Z</updated>
  <id>https://www.entropy-tree.top/</id>
  
  <author>
    <name>Entropy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在linux上启用QEMU/KVM</title>
    <link href="https://www.entropy-tree.top/2023/09/05/qemu-kvm/"/>
    <id>https://www.entropy-tree.top/2023/09/05/qemu-kvm/</id>
    <published>2023-09-05T06:08:55.000Z</published>
    <updated>2023-09-05T16:12:45.679Z</updated>
    
    <content type="html"><![CDATA[<p>虚拟机的起源可追溯到1966年IBM的CP-40和CP-67虚拟机操作系统，虚拟化技术最初是为了解决大型系统中的资源利用率问题而开发的。<span id="more"></span>而发展到了现在，无论是在大型企业上还是在个人电脑上，都会以某种方式使用到虚拟机和虚拟化技术。</p><p>不过本文的目的是介绍linux平台上的虚拟机QEMU/KVM，学习QEMU/KVM的简单配置。</p><p>这里笔者的宿主系统是<code>Archlinux</code>、<code>x86_64</code>架构。</p><h3 id="qemukvm环境搭建"><a class="markdownIt-Anchor" href="#qemukvm环境搭建"></a> qemu/kvm环境搭建</h3><p>linux内核中有KVM内核模块，这使其在linux平台上拥有相对出色的性能。不过KVM能否使用还要看硬件是否支持。</p><p>执行以下命令查看系统架构是否为<strong>x86_64</strong></p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -m</span><br></pre></td></tr></table></figure></div><p>执行以下命令检测硬件虚拟化支持</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lscpu</span><br></pre></td></tr></table></figure></div><p>确认硬件环境没有问题之后，还需要下载相关的工具包。KVM并不能单独使用，通常配合QEMU使用。</p><p>安装QEMU等工具包，命令如下</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S qemu-base virt-manager libvirt virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat ebtables libguestfs</span><br><span class="line"><span class="comment"># 关于qemu还可以选择qemu-full包，支持更多的架构</span></span><br></pre></td></tr></table></figure></div><p>以上只是列举了所有可能用到的包，这些包并不需要全部安装，下面进一步说明</p><ul><li><p>qemu：开源的机器模拟器和虚拟机。安装这个包之后，其实已经可以用命令行启动虚拟机了，但是所有的操作都得通过命令行实现。</p></li><li><p>libvirt：用于控制KVM、QEMU等虚拟化引擎的一组软件的汇集。</p><ul><li><p>virt-manager：libvirt的图形化管理工具，是一个全功能的虚拟机管理程序。</p></li><li><p>virt-viewer：更轻量的libvirt的图形化工具，主要用于查看虚拟机的图形控制台，功能没有virt-manager全面。也就说虚拟机的创建还是在命令行完成。</p><blockquote><p>可以根据需求在virt-manager和virt-viewer中选择一个安装。virt-manager包含了virt-viewer的功能。</p></blockquote></li><li><p>dnsmasq：用于虚拟机的NAT/DHCP网络。</p></li><li><p>bridge-utils：用于虚拟机桥接网络。</p></li><li><p>openbsd-netcat：用于多虚拟机之间建立TCP/IP连接。</p></li><li><p>vde2：以太网虚拟化，用于模拟复杂网络环境。</p></li><li><p>ebtables：桥接防火墙，用于控制多虚拟机之间的流量。</p></li></ul></li><li><p>libguestfs：虚拟机磁盘镜像处理工具，用于查看和修改虚拟机镜像、转换镜像格式等。具体使用参考这篇<a href="">文章</a></p></li></ul><p>如果只是需要简单地使用qemu创建单一虚拟机，那么安装以下包即可。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S qemu-base libvirt virt-manager dnsmasq bridge-utils</span><br></pre></td></tr></table></figure></div><h3 id="启用嵌套虚拟化可选"><a class="markdownIt-Anchor" href="#启用嵌套虚拟化可选"></a> 启用嵌套虚拟化(可选)</h3><p>嵌套虚拟化，即在虚拟机里嵌套虚拟机，这个可根据实际需求选择是否启用。相关命令如下</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用嵌套虚拟化</span></span><br><span class="line">sudo modprobe -r kvm_intel</span><br><span class="line">sudo modprobe kvm_intel nested=1</span><br><span class="line"><span class="comment"># 验证嵌套虚拟化，输出类似Y或1的字符则表示成功</span></span><br><span class="line"><span class="built_in">cat</span> /sys/module/kvm_intel/parameters/nested</span><br></pre></td></tr></table></figure></div><h3 id="非root用户使用qemukvm虚拟化"><a class="markdownIt-Anchor" href="#非root用户使用qemukvm虚拟化"></a> 非root用户使用qemu/kvm虚拟化</h3><p>qemu/kvm默认需要root权限才能使用。为了方便使用，可以编辑配置文件，配置文件位于<code>/etc/libvirt/libvirtd.conf</code>(另外还有一个<code>libvirt.conf</code>文件，注意不要混淆)。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/libvirt/libvirtd.conf</span><br></pre></td></tr></table></figure></div><ol><li><p>找到<code>unix_sock_group = &quot;libvirt&quot;</code>，取消这一行的注释，允许<code>libvirt</code>组的用户使用unix套接字。</p></li><li><p>找到<code>unix_sock_rw_perms = &quot;0770&quot;</code>，取消这一行的注释，允许用户读写unix套接字。</p></li></ol><p>将当前普通用户添加到libvirt组，<code>$USER</code>会获取当前用户的名称。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG libvirt <span class="variable">$USER</span></span><br></pre></td></tr></table></figure></div><p>启动libvirtd服务</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now libvirtd</span><br></pre></td></tr></table></figure></div><p>启动virt-manager图形界面</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-manager</span><br></pre></td></tr></table></figure></div><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><h4 id="kvm和qemu的关系"><a class="markdownIt-Anchor" href="#kvm和qemu的关系"></a> kvm和qemu的关系</h4><ul><li>qemu本身是跨平台的，它并不依赖于kvm内核模块，可以自行选择单独工作或者是启用kvm模块辅助工作，kvm相当于qemu的性能优化插件。只是kvm是linux内核模块，因此qemu在linux上的体验可能是最好的。</li><li>kvm依赖于硬件是否支持虚拟化以及需要使用qemu这样的工具与其交互。</li><li>kvm是为x86架构量身定做的，启用了kvm的虚拟机，意味着qemu的跨平台虚拟化会受到限制，但是性能会得到明显提升。</li><li>不使用kvm虚拟化的qemu虚拟机能够凭借其完整的系统仿真实现最佳的跨平台虚拟化支持，但是系统开销会更高。</li></ul><h4 id="virtualbox-vmware-or-qemukvm"><a class="markdownIt-Anchor" href="#virtualbox-vmware-or-qemukvm"></a> virtualbox、vmware or qemu/kvm?</h4><ul><li>virtualbox和vmware已经能够满足大部分的非重度使用用户了，它们本身的使用易于上手，相关的学习资料也很多。</li><li>qemu/kvm主要是在linux平台上使用，目的是为了在linux上获得更高的性能和效率。在virt-manager的辅助下，使用也很方便。</li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://linux.cn/article-16153-1.html" >什么是虚拟机？| linux中国 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://cn.linux-console.net/?p=3102#gsc.tab=0" >如何在 Manjaro/Archlinux 上安装 KVM/QEMU <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://wiki.archlinuxcn.org/wiki/QEMU" >QEMU | archwiki <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://thiscute.world/posts/qemu-kvm-usage/" >QEMU/KVM 虚拟化环境的搭建与使用 | This Cute World <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://cn.linux-console.net/?p=12047#gsc.tab=0" >QEMU 与 KVM：您应该使用哪一个进行虚拟化？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;虚拟机的起源可追溯到1966年IBM的CP-40和CP-67虚拟机操作系统，虚拟化技术最初是为了解决大型系统中的资源利用率问题而开发的。</summary>
    
    
    
    <category term="linux" scheme="https://www.entropy-tree.top/categories/linux/"/>
    
    
    <category term="qemu" scheme="https://www.entropy-tree.top/tags/qemu/"/>
    
    <category term="kvm" scheme="https://www.entropy-tree.top/tags/kvm/"/>
    
  </entry>
  
  <entry>
    <title>linux中的特殊权限与隐藏属性</title>
    <link href="https://www.entropy-tree.top/2023/08/10/linux-special-permissions/"/>
    <id>https://www.entropy-tree.top/2023/08/10/linux-special-permissions/</id>
    <published>2023-08-10T05:27:28.000Z</published>
    <updated>2023-08-11T03:23:29.702Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录一些关于linux系统中特殊权限与隐藏属性的内容<span id="more"></span></p><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>在linux系统中，有文件属性和文件权限两个不同的概念。文件权限指的是用户对文件或目录的操作权限，包括读取、写入和执行。而文件属性则指的是文件的一些特征，例如是否可以被修改或移动。文件属性能够针对所有用户，包括root用户。</p><p>但除了以上三个常见的文件权限以外还有另外三个特殊文件权限，以及文件的隐藏属性。</p><h3 id="文件的特殊权限"><a class="markdownIt-Anchor" href="#文件的特殊权限"></a> 文件的特殊权限</h3><p>linux文件的三种特殊权限：suid、sgid、sticky。这些权限都可以通过<code>chmod</code>命令设置，可以使用对应的符号设置也可以使用对应的数字设置。suid和guid对应的符号都是s，ticky对应的符号是t，它们依次对应所有者、用户组、其他用户的权限。suid(u+s)表示所有者权限，其对应的数字是4；sgid(g+s)表示用户组权限，其对应的数字是2；sticky(o+t)表示其他用户权限，其对应的数字是1。通常情况下，使用<code>chmod</code>命令进行八进制数字语法设置权限时，特殊权限是位于第一个数字位，其余的三个数字位就是对应所有者、用户组、其他用户的读写执行权限。</p><h4 id="suid权限"><a class="markdownIt-Anchor" href="#suid权限"></a> suid权限</h4><p>SUID(Set User ID)：当设置了SUID位的可执行文件被运行时，任何用户在执行该文件时都会以文件所有者的身份执行，而不是以启动它的用户的身份执行。这意味着当可执行文件属主是root用户时，且该文件设置了suid权限，那么任何用户在执行这个文件时都会临时拥有root权限。<strong>这在普通用户执行需要root权限的命令时很有用。</strong></p><p>例如，普通用户正常情况下是无法在根目录直接创建文件。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810163953702.png"                      class="" title="image-20230810163953702"                ><p>但是可以通过suid权限让普通用户可以在执行<code>touch</code>命令时，以root的身份执行。</p><p>使用以下命令为<code>touch</code>命令设置suid权限，并在普通用户下在根目录创建文件</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># root用户</span></span><br><span class="line"><span class="built_in">chmod</span> u+s /bin/touch</span><br><span class="line"><span class="built_in">ls</span> -l /bin/touch</span><br><span class="line"></span><br><span class="line"><span class="comment"># test用户</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">touch</span> test.txt</span><br></pre></td></tr></table></figure></div><p>查看命令，可以看到在所有者的权限上出现了<strong>s</strong>的符号，代表了suid权限。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810165344173.png"                      class="" title="image-20230810165344173"                ><p>之后普通用户就可以直接执行具有suid权限的可执行文件或命令，直接在根目录下创建文件。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810165701363.png"                      class="" title="image-20230810165701363"                ><p>可通过以下命令查找所有具有suid权限的文件</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -perm -4000 <span class="comment"># 查找所有具有suid权限的可执行文件</span></span><br></pre></td></tr></table></figure></div><h4 id="suid权限和sudo命令的比较"><a class="markdownIt-Anchor" href="#suid权限和sudo命令的比较"></a> suid权限和sudo命令的比较</h4><p>从“以root身份执行”的角度来看，二者具有同样的效果，但实际使用与体验上可能大不一样。</p><p>首先，suid通过<code>chmod</code>命令来设置的一种特殊文件权限(如果要获取root权限，则还必须要求这个可执行文件的所有者是root)，而<code>sudo</code>是一种可以在一定时间内以root身份进行操作的权限命令。</p><p>suid是针对可执行文件，只需要使用<code>chmod</code>命令设置即可，但是获取的权限取决于这个文件的所有者，而并不一定是root。<code>sudo</code>是针对特定的用户，需要在/etc/sudoers文件中进行配置，便于这些用户使用root权限进行操作。</p><p>由此可见，suid可以使得某一个具有该权限的可执行文件能被任何用户执行，但是也仅限于被赋予了suid权限的可执行文件，例如上面的示例中，笔者虽然给<code>touch</code>命令设置了suid权限，但普通用户根本无法正常地对这个文件进行写入以及删除的操作等，除非把其他一系列相关的可执行文件都设置suid权限，但这样容易导致安全问题(suid提权)。而<code>sudo</code>命令可以给受信任的用户在一定时间内以root的身份进行操作。</p><p>因此在日常中，<code>sudo</code>可能是相对安全且方便的选择，而suid权限的设置需要用户具有一定的专业知识，<strong>实际上在大多数linux发行版中已经预置了一些具有suid权限的可执行文件</strong>，例如<code>passwd</code>命令，方便用户安全地修改自己的密码。这些是经过了专业的设计，内置了安全措施，所以suid权限对于普通用户来说，可能是不怎么被关注的，即使它已经存在于一些日常使用的命令中。大多数普通用户主要了解基础的三个权限即可。</p><h4 id="sgid权限"><a class="markdownIt-Anchor" href="#sgid权限"></a> sgid权限</h4><p>SGID(Set Group ID)：当一个目录被设置了sgid权限时，任何用户在该目录下创建的新文件都会继承该目录的属组。这意味着，如果一个目录的属组是test，则在该目录下创建的新文件都会属于test组。sgid权限通常用于设置目录权限，对文件设置sgid权限是没有什么实际意义的。这对<strong>团队在linux服务器开发项目时，成员之间共享文件和目录</strong>时很有用，<strong>每个新添加的文件和目录都会具有与父目录相同的属组</strong>。</p><h4 id="sgid使用案例"><a class="markdownIt-Anchor" href="#sgid使用案例"></a> sgid使用案例</h4><p>使用以下命令为webapp目录设置sgid权限，并用不同的用户在该目录下创建文件和子目录。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 准备测试用户、组和目录</span></span><br><span class="line">useradd -m <span class="built_in">test</span></span><br><span class="line">useradd -m webappdev</span><br><span class="line">groupadd webappgroup</span><br><span class="line">usermod -aG webappgroup <span class="built_in">test</span></span><br><span class="line">usermod -aG webappgroup webappdev</span><br><span class="line"><span class="built_in">mkdir</span> /webapp</span><br><span class="line"><span class="built_in">chmod</span> 775 /webapp <span class="comment"># 允组内所有用户写入执行，这是多用户共享目录的必要权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置webapp目录的所有者和组</span></span><br><span class="line"><span class="built_in">chown</span> webappdev:webappgroup /webapp</span><br><span class="line"><span class="comment"># 设置webapp目录的sgid权限</span></span><br><span class="line"><span class="built_in">chmod</span> g+s /webapp</span><br><span class="line"><span class="comment"># 查看权限</span></span><br><span class="line"><span class="built_in">ls</span> -ld /webapp</span><br><span class="line"></span><br><span class="line"><span class="comment"># test用户添加文件和目录</span></span><br><span class="line">su - <span class="built_in">test</span></span><br><span class="line"><span class="built_in">touch</span> test_file</span><br><span class="line"><span class="built_in">mkdir</span> test_dir</span><br><span class="line"><span class="comment"># webappdev用户添加文件和目录</span></span><br><span class="line">su - webappdev</span><br><span class="line"><span class="built_in">touch</span> dev_file</span><br><span class="line"><span class="built_in">mkdir</span> dev_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件和目录权限</span></span><br><span class="line"><span class="built_in">cd</span> /webapp</span><br><span class="line"><span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure></div><p>在没有设置sgid权限的情况下，不同用户创建的文件和目录属于各自的组</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810210143869.png"                      class="" title="image-20230810210143869"                ><p>在设置sgid权限的情况下，不同用户创建的文件和目录统一为父目录的属组</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810210327163.png"                      class="" title="image-20230810210327163"                ><p>sgid权限要求<strong>父目录组权限至少要有写入执行(g+wx)的权限</strong>，否则只能给目录所有者一个用户使用，那么也没有什么实际意义了。</p><p>但这样还不能够满足共享文件和目录的基本要求，因为<strong>用户可以直接删除其他用户的文件和目录</strong>，而sticky权限可以弥补这一个缺点。</p><h4 id="sticky权限"><a class="markdownIt-Anchor" href="#sticky权限"></a> sticky权限</h4><p>sticky(sticky bit)：当一个目录被设置了sticky权限时，即使其他用户对该目录具有写入权限，也只能删除自己拥有的文件，这意味着，如果一个目录具有sticky权限，那么任何用户都不能删除该目录中其他用户拥有的文件。sticky权限也是用于目录的权限设置，对文件设置sticky权限没有什么实际意义。这对<strong>共享文件和目录时，防止普通用户删除其他用户的文件</strong>很有用。</p><h4 id="sticky使用案例"><a class="markdownIt-Anchor" href="#sticky使用案例"></a> sticky使用案例</h4><p>使用以下命令，可以直接使用前面sgid案例的测试数据，为目录设置sticky权限，并用不同的用户去测试上传删除自己和其他用户的文件。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建共享目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /webapp</span><br><span class="line"><span class="comment"># 设置sticky权限</span></span><br><span class="line"><span class="built_in">chmod</span> o+t /webapp</span><br><span class="line"><span class="built_in">ls</span> -ld /webapp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置所有权，允许所有用户上传文件，但只允许root用户和文件对应的所有者删除对应的文件</span></span><br><span class="line"><span class="built_in">chown</span> root:webappgroup /webappgroup</span><br><span class="line"><span class="built_in">chmod</span> 3777 /webapp <span class="comment"># 这里如果使用777则会把前面设置的sticky权限覆盖掉</span></span><br><span class="line"><span class="built_in">ls</span> -ld /webapp</span><br><span class="line"></span><br><span class="line"><span class="comment"># test用户添加文件</span></span><br><span class="line">su - <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> /webapp &amp;&amp; <span class="built_in">touch</span> test_file</span><br><span class="line"></span><br><span class="line"><span class="comment"># webappdev用户添加文件</span></span><br><span class="line">su - webappdev</span><br><span class="line"><span class="built_in">cd</span> /webapp &amp;&amp; <span class="built_in">touch</span> dev_file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试用户删除其他用户的文件</span></span><br><span class="line">su - <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> /webapp &amp;&amp; <span class="built_in">rm</span> dev_file</span><br><span class="line">su - webappdev</span><br><span class="line"><span class="built_in">cd</span> /webapp &amp;&amp; <span class="built_in">rm</span> test_file</span><br></pre></td></tr></table></figure></div><p>设置了sticky权限之后，即使拥有父目录的所有权限，只要不是该文件的所有者，就无法删除文件，每个用户只能删除自己创建的文件。另外，<strong>root用户无视sticky权限的限制</strong>。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230810223346767.png"                      class="" title="image-20230810223346767"                ><p>linux系统中，创建、删除、重命名文件至少需要父目录的写入执行(wx)权限，因此sticky权限也要至少<strong>保证目录的所有者具有相应的权限</strong>，否则任何普通用户都无法在目录下创建自己的文件了，那么也没有什么实际意义了。如果考虑和sgid权限配合使用，则还要保证<strong>组具有相应的权限</strong>。</p><h3 id="文件的隐藏属性"><a class="markdownIt-Anchor" href="#文件的隐藏属性"></a> 文件的隐藏属性</h3><p>linux文件属性包括文件的许多特征，通常有文件类型、文件大小、文件所有者、文件所属组、文件最后修改时间等，而隐藏属性是属于文件的特殊性质。这些隐藏属性在linux中可以通过<code>chattr</code>命令进行设置，通过<code>lsattr</code>命令查看。</p><h4 id="chattr"><a class="markdownIt-Anchor" href="#chattr"></a> chattr</h4><p><code>chattr</code>是一个linux命令，用于设置文件的某些隐藏属性，以保护重要文件和文件夹免受意外删除或修改，而且是少有的能够直接限制root用户的命令。</p><p><code>chattr</code>的语法如下，</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr [选项] [操作符] [属性] 文件...</span><br></pre></td></tr></table></figure></div><p>其中操作符有以下几个符号：</p><ul><li><code>+</code>：将指定的属性添加到现有属性</li><li><code>-</code>：从现有属性中删除指定的属性</li><li><code>=</code>：将指定的属性设置为唯一属性，覆盖原来的属性</li></ul><p>操作符后可接多个属性，下面是一些常见属性：</p><ul><li><code>a</code>：文件只能以追加模式写入。</li><li><code>A</code>：文件的访问时间(atime)记录不会被修改，可以减少磁盘IO。</li><li><code>e</code>：文件使用extents映射磁盘上的块，这个属性无法被<code>chattr</code>修改，与文件系统有关，例如ext4文件系统。</li><li><code>i</code>：文件不可变，即文件不能被删除或修改。</li></ul><p>更多说明内容可以使用<code>man chattr</code>查询。</p><h4 id="lsattr"><a class="markdownIt-Anchor" href="#lsattr"></a> lsattr</h4><p><code>lsattr</code>命令主要用于查看文件对应的隐藏属性。</p><p>例如</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsattr /etc/passwd</span><br></pre></td></tr></table></figure></div><h4 id="chattr锁定文件"><a class="markdownIt-Anchor" href="#chattr锁定文件"></a> chattr锁定文件</h4><p>前面提到<code>chattr</code>是少有的能够直接限制root用户的命令，但同时它也需要谨慎使用。</p><p>可以通过以下命令创建并锁定文件，即使root用户也无法直接删除和修改。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/immutable.txt</span><br><span class="line">sudo chattr +i ~/immutable.txt</span><br><span class="line">lsattr ~/immutable.txt</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">rm</span> -rf ~/immutable.txt</span><br></pre></td></tr></table></figure></div><p>执行命令可以看到即使使用root权限也无法删除该文件</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/08/10/linux-special-permissions/image-20230811010112011.png"                      class="" title="image-20230811010112011"                ><p>要删除文件，只能使用<code>chattr</code>重新取消<code>i</code>属性。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chattr -i ~/immutable.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf ~/immutable.txt</span><br></pre></td></tr></table></figure></div><p><code>chattr</code>命令虽然可以阻止文件被意外删除或修改，但是它所针对的文件或目录对象，通常是一些内容不会去改动的系统配置文件、日志文件、备份文件等，而且这些文件和目录不应该对其他的文件和目录有依赖关系。例如，你对那些linux命令的可执行文件使用<code>chattr</code>锁定，那它们大概率会无法正常工作。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>以上，主要介绍了suid、sgid、sticky三个特殊权限和文件的隐藏属性。</p><p>说明了如何使用sgid权限创建一个能够自动继承父目录属组的共享目录，使用sticky权限来限制共享目录的多个用户对共享文件的删除权限，以及整合sgid和sticky权限来打造一个安全且便于协作的共享文件目录。</p><p>最后介绍了如何利用文件的隐藏属性来限制root用户及其他任何用户的误操作以保护重要文件。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://www.runoob.com/linux/linux-comm-chattr.html" >Linux chattr命令 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.cnblogs.com/poloyy/p/12586677.html" >Linux - 文件的三种时间之atime、ctime、mtime的区别和简单用法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要记录一些关于linux系统中特殊权限与隐藏属性的内容</summary>
    
    
    
    <category term="linux" scheme="https://www.entropy-tree.top/categories/linux/"/>
    
    
    <category term="特殊文件属性" scheme="https://www.entropy-tree.top/tags/%E7%89%B9%E6%AE%8A%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/"/>
    
    <category term="特殊文件权限" scheme="https://www.entropy-tree.top/tags/%E7%89%B9%E6%AE%8A%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>一些现代化的linux命令</title>
    <link href="https://www.entropy-tree.top/2023/07/24/modern-linux-commands/"/>
    <id>https://www.entropy-tree.top/2023/07/24/modern-linux-commands/</id>
    <published>2023-07-24T13:15:50.000Z</published>
    <updated>2023-07-24T19:01:35.198Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍一些现代化的linux基础命令。对比传统的命令，它们在实现了原有功能的基础上或多或少有一些不同于传统命令的特性。<span id="more"></span>不过，无论是传统命令还是现代化命令，或者是图形化操作，其最终目的都是为了更好地完成任务。请不要本末倒置。</p><h3 id="文件-文本相关"><a class="markdownIt-Anchor" href="#文件-文本相关"></a> 文件、文本相关</h3><h4 id="文件内容查看"><a class="markdownIt-Anchor" href="#文件内容查看"></a> 文件内容查看</h4><p><code>cat</code>命令的现代化实现<code>bat</code>命令。<code>bat</code>命令在<code>cat</code>命令的基础上加入了<strong>行号显示、代码高亮和Git集成</strong>。</p><h4 id="文件查找"><a class="markdownIt-Anchor" href="#文件查找"></a> 文件查找</h4><p><code>find</code>命令的现代化实现<code>fd</code>命令。<code>fd</code>命令并不是为了取代传统的<code>find</code>命令，<code>fd</code>命令主要是实现了<code>find</code>大多数常用的用法，并不具有<code>find</code>命令所有强大的功能，但是通常<code>fd</code>命令的速度要快于<code>find</code>命令。</p><h4 id="文本内容搜索"><a class="markdownIt-Anchor" href="#文本内容搜索"></a> 文本内容搜索</h4><p><code>grep</code>命令的现代化实现<code>ack</code>命令。<code>ack</code>命令的速度也通常快于<code>grep</code>命令，基于<code>ack</code>命令又派生了<code>ag</code>命令。<code>grep</code>命令和<code>ack</code>命令的搜索方式不同，<code>grep</code>只会在指定路径的所有文件上搜索内容，而<code>ack</code>则采取更加智能的搜索方式。<code>ripgrep</code>的<code>rg</code>命令则结合了<code>grep</code>和<code>ack</code>，能够自动选择最佳搜索策略。目前从检索速度上来看，<code>ripegrep</code>的性能最强，其次是<code>silversearcher-ag</code>，最后是<code>grep</code>。</p><p>具体可以参考<a class="link"   href="https://www.ubuntukylin.com/news/1740-cn.html" >巧用这几种文本检索工具，节省80%的时间 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><h4 id="目录内容列举"><a class="markdownIt-Anchor" href="#目录内容列举"></a> 目录内容列举</h4><p><code>ls</code>命令的现代化实现<code>exa</code>命令。<code>exa</code>命令的默认设置可能看上去比<code>ls</code>命令更加美观，但是在编写脚本时，还是应该使用更加通用的<code>ls</code>命令，以避免不必要的麻烦。具体参考<a class="link"   href="https://linux.cn/article-13972-1.html" >exa：一个 ls 命令的现代替代品 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><h3 id="系统管理-维护相关"><a class="markdownIt-Anchor" href="#系统管理-维护相关"></a> 系统管理、维护相关</h3><h4 id="进程管理监控"><a class="markdownIt-Anchor" href="#进程管理监控"></a> 进程管理监控</h4><p><code>top</code>命令的现代化实现有很多，这里主要介绍<code>htop</code>命令，更多内容可以参考<a class="link"   href="https://zhuanlan.zhihu.com/p/51911977" >关于 top 工具的 6 个替代方案 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p><code>htop</code>命令通常相对<code>top</code>命令更易于使用，可以很方便地对进程进行过滤和排序，在必要的时候杀死对应的进程。</p><h4 id="磁盘空间管理"><a class="markdownIt-Anchor" href="#磁盘空间管理"></a> 磁盘空间管理</h4><p><code>df</code>命令的现代化实现<code>duf</code>命令。<code>duf</code>命令提供了一个所有挂载设备的概览。</p><h4 id="目录空间管理"><a class="markdownIt-Anchor" href="#目录空间管理"></a> 目录空间管理</h4><p><code>du</code>命令的现代化实现<code>ncdu</code>命令。<code>ncdu</code>命令相比<code>du</code>命令更加直观易用，<code>du</code>命令实际上不是一个很直观的命令，通常<code>du</code>命令需要配合多个参数使用才能得到直观的信息。此外，<code>ncdu</code>命令提供的是一个可交互的界面，可以进行排序以及交互式地删除目录。</p><h3 id="网络工具相关"><a class="markdownIt-Anchor" href="#网络工具相关"></a> 网络工具相关</h3><h4 id="网络管理工具"><a class="markdownIt-Anchor" href="#网络管理工具"></a> 网络管理工具</h4><p><code>net-tools</code>工具的现代化替代<code>iproute2</code>工具。<code>net-tools</code>工具中有几个很知名的命令，例如<code>ifconfig</code>命令。</p><p>实际上，自2001年起，linux社区已经停止了对<code>net-tools</code>的维护，而<code>iproute2</code>旨在取代<code>net-tools</code>，并提供了一些新功能。一些linux发行版已经停止支持<code>net-tools</code>，只支持<code>iproute2</code>，例如<code>Archlinux</code>的livecd中就默认使用<code>iproute2</code>而不是<code>net-tools</code>。</p><p>虽然<code>net-tools</code>是一个比较古老的命令，但是<code>net-tools</code>目前仍在广泛使用，因此<code>net-tools</code>还是值得linux系统管理员学习的。</p><h4 id="远程文件传输工具"><a class="markdownIt-Anchor" href="#远程文件传输工具"></a> 远程文件传输工具</h4><p><code>scp</code>命令的现代化替代<code>sftp</code>命令或<code>rsync</code>命令。<code>scp</code>命令属于OpenSSH项目的一部分，它被认为已经过时，不灵活且不容易修复。推荐使用<code>sftp</code>命令或<code>rsync</code>命令进行文件传输。但是，有一定的用户群体习惯使用<code>scp</code>命令，这里提供了一篇过渡参考<a class="link"   href="https://linux.cn/article-12575-1.html" >scp 用户的 rsync 迁移指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/401429004" >25 个 Linux 下最炫酷又强大的命令行神器 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://linux.cn/article-14172-1.html" >一些经典 Linux 命令的现代替代品 | Linux 中国 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/439233295" >10 款你不知道的 Linux 环境下的替代工具！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要介绍一些现代化的linux基础命令。对比传统的命令，它们在实现了原有功能的基础上或多或少有一些不同于传统命令的特性。</summary>
    
    
    
    <category term="linux" scheme="https://www.entropy-tree.top/categories/linux/"/>
    
    
    <category term="modern" scheme="https://www.entropy-tree.top/tags/modern/"/>
    
    <category term="commands" scheme="https://www.entropy-tree.top/tags/commands/"/>
    
  </entry>
  
  <entry>
    <title>使用certbot自动化管理免费ssl证书</title>
    <link href="https://www.entropy-tree.top/2023/07/22/certbot-for-ssl/"/>
    <id>https://www.entropy-tree.top/2023/07/22/certbot-for-ssl/</id>
    <published>2023-07-22T03:08:28.000Z</published>
    <updated>2023-08-10T05:41:44.691Z</updated>
    
    <content type="html"><![CDATA[<p>ssl证书是用于验证身份和保护数据安全的一种数字证书。在缺少ssl证书的情况下，网络通信将不会被加密，所有数据将以明文传输，容易被拦截和窃听，这样的网站容易受到中间人攻击。<span id="more"></span>目前也推崇使用https代替传统的http，传统的http已经被证明存在了很多安全问题，且浏览器也会将此类传统http网站标记为不安全网站。但是ssl证书也并不都是免费的，一些企业级ssl证书价格非常昂贵，不是个人开发者所能够承担的，当然也没有必要去承担。在笔者之前文章中提到的证书网站如<a class="link"   href="https://zerossl.com/" >zerossl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中虽然有提供免费ssl证书但是目前有申请次数的限制(也正因为如此才有了这篇文章)。</p><p>以下，笔者将介绍使用<a class="link"   href="https://letsencrypt.org/zh-cn/" >Let’s Encrypt <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的<a class="link"   href="https://certbot.eff.org/" >certbot <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>客户端申请免费的ssl证书。certbot可与apache、nginx等服务配合使用，本文以在<strong>Ubuntu20.04上为nginx服务配置ssl证书</strong>为例。</p><h3 id="lets-encrypt"><a class="markdownIt-Anchor" href="#lets-encrypt"></a> Let’s Encrypt</h3><p>Let’s Encrypt是一家全球性的证书颁发机构（CA），为世界各地的个人和团体提供获取、续期、管理SSL/TLS证书的服务。网站可以使用其证书来启用安全的HTTPS连接。Let’s Encrypt属于非营利组织，旨在推广HTTPS技术的应用，从而构建更加安全且尊重隐私的互联网环境。</p><h3 id="certbot"><a class="markdownIt-Anchor" href="#certbot"></a> certbot</h3><p>在早期，申请并配置Let’s Encrypt签发的安全证书比较麻烦，只能手动进行配置以及部署，需要一定的技术水平。直到后来推出了一些自动化工具才使得ssl证书的配置及部署变得非常方便。certbot就是其中的一款官方的客户端工具。</p><p>certbot是ISRG (Internet Security Research Group，互联网安全研究小组) 组织的发起者EFF(电子前哨基金会)为Let’s Encrypt项目所发布的一个官方的客户端，实现了完全自动化的获取、部署和更新安全证书。</p><h4 id="具体使用"><a class="markdownIt-Anchor" href="#具体使用"></a> 具体使用</h4><p>前提：Ubuntu20.04环境、使用nginx服务。</p><h5 id="1安装certbot客户端及插件"><a class="markdownIt-Anchor" href="#1安装certbot客户端及插件"></a> 1.安装certbot客户端及插件</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure></div><h5 id="2生成证书"><a class="markdownIt-Anchor" href="#2生成证书"></a> 2.生成证书</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure></div><p>使用以上命令生成证书的过程中，会要求提供邮箱地址以及需要配置证书的域名信息，以及选择是否需要重定向等。生成的ssl证书位于**/etc/letsencrypt/live**目录下。</p><h5 id="3更新证书"><a class="markdownIt-Anchor" href="#3更新证书"></a> 3.更新证书</h5><p>在大数情况下，certbot在安装时会自动配置一个cron job或systemd定时器来定期检查并更新证书。这意味着大部分时间里开发者不需要手动更新证书，certbot会自动进行更新。自动更新功能可通过以下命令进行测试</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure></div><p><code>--dry-run</code>参数表示测试，而非真正执行更新。如果显示<code>&quot;Congratulations, all renewals succeeded.&quot;</code>的信息，则表示自动更新功能测试成功。</p><p>当然也可以通过以下命令手动更新证书</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew</span><br></pre></td></tr></table></figure></div><p>这将检查所有已安装的证书，并更新即将过期的证书。</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><p>除了Let’s Encrypt组织及其提供的certbot客户端以外，还有类似的<a class="link"   href="https://www.buypass.com/" >buypass <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>组织以及更轻量的自动化shell脚本<a class="link"   href="https://github.com/acmesh-official/acme.sh" >acme.sh <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>Let’s Encrypt和buypass所提供的证书有一些区别</p><ul><li>Let’s Encrypt的单次申请证书有效期为90天，而buypass的单次申请证书有效期则为180天。</li><li>Let’s Encrypt支持签发泛域名和多域名证书，buypass的证书不支持泛域名、支持多域名。</li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/25538921" >HTTPS 简介及使用官方工具 Certbot 配置 Let’s Encrypt SSL 安全证书详细教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ssl证书是用于验证身份和保护数据安全的一种数字证书。在缺少ssl证书的情况下，网络通信将不会被加密，所有数据将以明文传输，容易被拦截和窃听，这样的网站容易受到中间人攻击。</summary>
    
    
    
    <category term="网站运维" scheme="https://www.entropy-tree.top/categories/%E7%BD%91%E7%AB%99%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="ssl" scheme="https://www.entropy-tree.top/tags/ssl/"/>
    
    <category term="certbot" scheme="https://www.entropy-tree.top/tags/certbot/"/>
    
  </entry>
  
  <entry>
    <title>算法概念性知识</title>
    <link href="https://www.entropy-tree.top/2023/05/04/algorithm-concept/"/>
    <id>https://www.entropy-tree.top/2023/05/04/algorithm-concept/</id>
    <published>2023-05-04T10:05:51.000Z</published>
    <updated>2023-05-06T06:08:51.732Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍一些经典算法的概念性知识，以及对算法思想的一些理解，不涉及任何具体的代码实现。<span id="more"></span></p><h3 id="算法的相关概念"><a class="markdownIt-Anchor" href="#算法的相关概念"></a> 算法的相关概念</h3><p>算法的定义：它是若干指令的有穷序列。有以下性质</p><ul><li>输入：有外部提供的量作为算法的输入。</li><li>输出：算法至少产生一个量作为输出。</li><li>确定性：组成算法的每条指令是清晰的、无歧义的。</li><li>有限性：算法中的每条指令的执行次数是有限的，执行每条指令的时间也是有限的。</li></ul><p>程序的定义：它是算法用某种程序设计语言的具体实现，可以不用满足<strong>有限性</strong>的性质。</p><h3 id="算法复杂性"><a class="markdownIt-Anchor" href="#算法复杂性"></a> 算法复杂性</h3><p>5个渐进性分析记号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>，假设对所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n&gt;0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，都有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f(n)\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">g(n)\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p>渐进上界记号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></p><p>定义：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">O(g(n))=\{f(n)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>存在正常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>使得对所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n\geq n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>c</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">0 \leq f(n) \leq cg(n)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>，则称函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>充分大时有上界，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>是它的一个上界，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)=O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，又称为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的阶不高于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的阶。</p><p>渐进下界记号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span></p><p>定义：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\Omega (g(n))=\{f(n)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>存在正常数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>使得对所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n\geq n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>c</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">0 \leq cg(n) \leq f(n)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>，则称函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>充分大时有下界，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>是它的一个下界，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)=\Omega (g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，又称为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的阶不低于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的阶。</p><h3 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h3><p>递归算法是直接或间接调用自身的算法。</p><p>递归函数不一定能用非递归的方式实现。</p><p>斐波那契数列既可以用递归实现，也可以用非递归实现。</p><p>递归算法容易定义，结构清晰，但运行效率较低，一般情况下，耗费的计算时间和存储空间都要比非递归算法多。</p><h3 id="分治"><a class="markdownIt-Anchor" href="#分治"></a> 分治</h3><p>分治法的基本思想是将规模较大的问题划分为规模较小的子问题来求解。</p><p>二分搜索算法的前提是<strong>数据有序</strong>。</p><p>用分治法求解大整数乘法和Strassen矩阵乘法的基本思想是通过合理的变换运算来减少乘法的次数。</p><p>合并排序和快速排序的平均时间复杂性均为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h3 id="动态规划"><a class="markdownIt-Anchor" href="#动态规划"></a> 动态规划</h3><p>动态规划也是将规模较大的问题划分为规模较小的子问题来求解，但与分治法不同的是，动态规划所划分出来的子问题相互不独立。</p><p>动态规划算法适用于求解最优化问题，一般采用自底向上的方式来计算。</p><blockquote><p>自底向上和自顶向下的根本区别是：自底向上的分析，是从具体到抽象；自顶向下的分析，是从抽象到具体。</p><p>参考<a class="link"   href="https://www.cnblogs.com/Qsir/p/5838802.html" >https://www.cnblogs.com/Qsir/p/5838802.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>动态规划求解的问题也可以用递归算法求解，但是可能会造成重复计算和不必要的资源耗费。</p><p>动态规划求解的问题具有最优子结构和重叠子问题性质。</p><p>利用动态规划求解矩阵连乘问题时，其渐进时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>表示矩阵个数)。</p><p>使用动态规划求解最优二叉搜索树的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是序列元素数量。</p><p>动态规划求解0-1背包问题时，其时间复杂度是伪多项式。</p><blockquote><p>关于伪多项式时间算法可参考<a class="link"   href="https://stackoverflow.com/questions/19647658/what-is-pseudopolynomial-time-how-does-it-differ-from-polynomial-time" >algorithm - What is pseudopolynomial time? How does it differ from polynomial time? <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>使用动态规划算法求解2个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的序列的最长公共子序列的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><h3 id="贪心"><a class="markdownIt-Anchor" href="#贪心"></a> 贪心</h3><p>贪心算法可能存在多个贪心策略，具有最优子结构的性质，常常使用堆结构存储数据。</p><p>求解<a class="link"   href="https://blog.csdn.net/qq_40452317/article/details/88875384" >活动安排问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的贪心算法GreedySelector的时间复杂性为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，对活动进行结束时间的非减排序后，再使用GreedySelector求解的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><p>哈夫曼编码是一种最优前缀码，其时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其各字符的编码不一定唯一。</p><blockquote><p>当有多个权重相等的字符时，其在哈夫曼树中的位置不唯一，它可以是左子树也可以是右子树，即字符可能存在多种编码情况。</p><p>哈夫曼编码只是保证平均查找码长最小，但平均查找码长最小的编码组合不一定唯一。</p></blockquote><p>对于给定的一个带权有向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G=(V,E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，无法使用<code>Dijkstra</code>算法求解出其最短路径，因为<code>Dijkstra</code>无法处理带负权图。可以使用<code>Bellman-Ford</code>算法求解，不过<code>Bellman-Ford</code>是基于动态规划设计的。</p><blockquote><p><code>Dijkstra</code>算法无法处理有<strong>负边</strong>的问题，只适用于无负权图，参考<a class="link"   href="https://www.cnblogs.com/FengZeng666/p/11245243.html" >dijkstra算法为什么不能有负边？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>这种“负边问题”也是贪心算法本身的缺陷。</p><p><code>Dijkstra</code>是以点为单位进行操作，<code>Bellman-Ford</code>是以边为单位进行操作。</p><p>关于<code>Bellman-Ford</code>算法可以参考<a class="link"   href="https://www.cnblogs.com/lfri/p/9521271.htmls" >Bellman-Ford与SPFA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>0-1背包问题不一定能用贪心算法得到最优解 ，背包问题(可散装)的贪心算法也就不适用于0-1背包问题，可能导致背包无法装满。</p><h3 id="时间复杂性表达式分析"><a class="markdownIt-Anchor" href="#时间复杂性表达式分析"></a> 时间复杂性表达式分析</h3><p>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">T(n)=2T(n/2)+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T(0)=T(1)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，(这种表达式正好就是快速排序的时间复杂性表达式)</p><p>以下说法是正确的，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>θ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=\theta (nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>以下说法是错误的，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=\Omega (n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，应为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=\Omega(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><blockquote><p>关于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span>可以类比为高阶、同阶、低阶。</p></blockquote><h3 id="np完全理论"><a class="markdownIt-Anchor" href="#np完全理论"></a> NP完全理论</h3><p>P类问题：所有可以在多项式时间内求解的判定问题。例如，冒泡排序、快速排序、最短路径等。</p><p>NP问题：无法确定具体的多项式时间，但是对于它的解可以在多项式时间内验证。例如，超大规模的数字计算，可能无法在短时间内求解，但是可以假设一个解并在短时间得到验证。</p><p>NPC问题：也称NP完备问题，这类NP完备问题如果能在多项式时间内解决，那么NP中的每一个问题都可以在多项式时间内解决，即所有NP类问题都可以在多项式时间内规约到某个NPC问题。</p><p>但是目前尚未得到一个NP完备问题的多项式时间算法。</p><blockquote><p>P类问题和NP问题，都可在多项式时间内求解，不同的是NP问题是非确定性的。</p><p>第一个NPC问题是SAT布尔可满足性问题，又由Cook提出。</p></blockquote><h3 id="排序相关"><a class="markdownIt-Anchor" href="#排序相关"></a> 排序相关</h3><p>对于有序数组再排序，比较次数最少的是插入排序。</p><h3 id="图相关"><a class="markdownIt-Anchor" href="#图相关"></a> 图相关</h3><p>对于任意无向连通图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G=(V,E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span>采用邻接矩阵存储时，关于其最小生成树</p><ul><li>图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span>的最小生成树是<strong>不唯一</strong>的</li><li>对于图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span>可以采用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">Prim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span></span></span></span>算法或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mi>r</mi><mi>u</mi><mi>s</mi><mi>k</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Kruskal</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>算法来求解其最小生成树</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">Prim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span></span></span></span>算法的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>为图中顶点的数量</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mi>r</mi><mi>u</mi><mi>s</mi><mi>k</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Kruskal</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>算法的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>e</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(eloge)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>为图中边的数量</li></ul><h3 id="线性时间选择"><a class="markdownIt-Anchor" href="#线性时间选择"></a> 线性时间选择</h3><p>线性时间查找最小的元素或者第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>小的元素最少也要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的时间复杂度，即遍历整个元素集合的时间复杂度。</p><p>使用线性时间选择Select算法求解，只有在元素已经有序的前提下，其时间复杂度才为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≤</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">k\leq nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≥</mo><mi>n</mi><mo>−</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">k\geq n-nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>时，使用堆排序可能在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的时间复杂度内求解。</p><h3 id="最优装载问题"><a class="markdownIt-Anchor" href="#最优装载问题"></a> 最优装载问题</h3><p>最优装载问题就是0-1背包问题的一个变形。</p><p>对于最优装载问题，一定存在一组可行解。</p><p>最优装载问题，使用贪心算法来求解，自然有最优子结构的性质。</p><p>最优装载问题的贪心策略是选择重量最轻的集装箱先装。</p><h3 id="散装背包问题"><a class="markdownIt-Anchor" href="#散装背包问题"></a> 散装背包问题</h3><p>散装背包问题使用贪心算法求解，其时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h3 id="硬币称重问题"><a class="markdownIt-Anchor" href="#硬币称重问题"></a> 硬币称重问题</h3><p>8个硬币中，已知其中一个硬币很重，使用最少的次数找出这枚硬币。</p><p>常见的错误思路：4,4 —&gt; 2,2—&gt;1,1</p><p>每次对半称，找重的一边，以此类推，共需要3次。</p><p>一种更好的思路：3,3…2 —&gt; 1,1…1 或 1,1</p><p>先取6枚硬币对半称，余下2枚硬币。分情况讨论</p><ul><li><p>3,3对称不平衡，硬币在重的一边的3枚硬币中。</p><p>在3枚硬币中，再取2枚硬币对称就可以直接求解。</p><ul><li>若不平衡，则硬币就是重的一边的硬币</li><li>若平衡，则硬币就是未称量的那一枚硬币</li></ul></li><li><p>3,3对称平衡，硬币在余下的2枚硬币中。</p><p>直接称量余下的2枚硬币，即可求解。</p></li></ul><p>以上两种情况所需的次数均为2次。</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h3><p><a class="link"   href="https://www.bilibili.com/video/BV1Ga4y1G7Q8" >https://www.bilibili.com/video/BV1Ga4y1G7Q8 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要介绍一些经典算法的概念性知识，以及对算法思想的一些理解，不涉及任何具体的代码实现。</summary>
    
    
    
    <category term="杂乱的记录" scheme="https://www.entropy-tree.top/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="算法概念" scheme="https://www.entropy-tree.top/tags/%E7%AE%97%E6%B3%95%E6%A6%82%E5%BF%B5/"/>
    
    <category term="草稿笔记" scheme="https://www.entropy-tree.top/tags/%E8%8D%89%E7%A8%BF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>运算方法和运算器</title>
    <link href="https://www.entropy-tree.top/2023/04/25/computer-organization-1/"/>
    <id>https://www.entropy-tree.top/2023/04/25/computer-organization-1/</id>
    <published>2023-04-25T11:16:50.000Z</published>
    <updated>2023-07-22T06:24:51.177Z</updated>
    
    <content type="html"><![CDATA[<p>计算机组成原理——运算方法和运算器知识梳理<span id="more"></span></p><p>参考《计算机组成原理》第六版白中英、戴志涛主编，本文是对<strong>第二章运算方法和运算器</strong>的整理摘要。</p><h3 id="11-数据与文字的表示"><a class="markdownIt-Anchor" href="#11-数据与文字的表示"></a> 1.1 数据与文字的表示</h3><h4 id="111-数据格式"><a class="markdownIt-Anchor" href="#111-数据格式"></a> 1.1.1 数据格式</h4><p>一是定点格式，二是浮点格式。</p><ol><li><p>定点数的表示方法</p><p>假设使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位字来表示，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示符号，并用0表示正号，用1表示负号。</p><p>对于<strong>纯小数</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">0\leq|x|\leq1-2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于<strong>纯整数</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq|x|\leq2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p>浮点数的表示方法</p><p>计算时使数值部分的绝对值小于1，小数点的位置随比例因子的不同而在一定范围内可以自由浮动。</p><p>任意一个十进制数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>可以写成</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mi>E</mi></msup><mi mathvariant="normal">.</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N=10^E.M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p><p>任意一个二进制数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>可以写成</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mn>2</mn><mi>e</mi></msup><mi mathvariant="normal">.</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N=2^e.M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>称为浮点数的<strong>尾数</strong>，是一个纯小数。e是比例因子的指数，称为浮点数的<strong>指数</strong>，是一个整数。指数也称为<strong>阶码</strong></p><table><thead><tr><th style="text-align:center">阶符</th><th style="text-align:center">阶码</th><th style="text-align:center">数符</th><th style="text-align:center">尾数</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">E_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>E</mi><mn>1</mn></msub><msub><mi>E</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">E_{m-1}...E_1E_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">M_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>M</mi><mn>1</mn></msub><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M_{n-1}...M_1M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td></tr></tbody></table></li><li><p>十进制数串的表示方法</p><p>（1）字符串形式，即1字节存放一个十进制的数位或符号位。</p><p>（2）压缩的十进制数串形式，即1字节存放两个十进制的数位。</p></li></ol><h4 id="112-数的机器码表示"><a class="markdownIt-Anchor" href="#112-数的机器码表示"></a> 1.1.2 数的机器码表示</h4><blockquote><p>正整数的原码、补码、反码是一致的，符号位固定是0</p><p>负整数的原码、补码、反码是不同的，符号位固定是1</p></blockquote><ol><li><p>原码表示法</p><p>例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>+</mo><mn>1001</mn></mrow><annotation encoding="application/x-tex">x=+1001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>原</mtext></msub><mo>=</mo><mn>01001</mn></mrow><annotation encoding="application/x-tex">[x]_原=01001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>1001</mn></mrow><annotation encoding="application/x-tex">x=-1001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>原</mtext></msub><mo>=</mo><mn>11001</mn></mrow><annotation encoding="application/x-tex">[x]_原=11001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span></p><blockquote><p>实际上就是在真值的基础上增加了符号位</p></blockquote></li><li><p>补码表示法</p><p>正整数的补码和原码一致。</p><p>负整数先把符号位以外的位取反变为反码，再在反码的基础上加1得到补码。</p><p>例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>+</mo><mn>1001</mn></mrow><annotation encoding="application/x-tex">x=+1001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mn>01001</mn></mrow><annotation encoding="application/x-tex">[x]_补=01001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>1001</mn></mrow><annotation encoding="application/x-tex">x=-1001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mn>10111</mn></mrow><annotation encoding="application/x-tex">[x]_补=10111</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span></span></span></span></p><p>通过补码计算真值</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><msub><mi>x</mi><mi>n</mi></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msup><mn>2</mn><mi>i</mi></msup><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x=-2^nx_n+\sum_{i=0}^{n-1}2^ix_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8643919999999999em;vertical-align:-0.15em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>实际上就是将<strong>符号位以外</strong>的位按正常的二进制转十进制来计算累加，再计算符号位对应的十进制并取负号，相加得到结果。</p><p>因此，对于正整数来说，符号位为0，只需要正常计算即可。</p><p>对于负整数来说，符号位为1，需要将<strong>符号位以外部分</strong>的十进制结果<strong>减去</strong>符号位的十进制结果，得到真值。</p></blockquote><p>通过补码求原码，除<strong>符号位</strong>和<strong>最后一个1</strong>以外，将这个符号位和1<strong>中间的部分</strong>全部取反。</p></li><li><p>移码表示法</p><p>移码通常用于表示浮点数的阶码。阶码(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>位)的<strong>传统定义</strong>是</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>e</mi><msub><mo stretchy="false">]</mo><mtext>移</mtext></msub><mo>=</mo><msup><mn>2</mn><mi>k</mi></msup><mo>+</mo><mi>e</mi><mo separator="true">,</mo><msup><mn>2</mn><mi>k</mi></msup><mo>&gt;</mo><mi>e</mi><mo>≥</mo><mo>−</mo><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">[e]_移=2^k+e,2^k&gt;e\geq-2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">e</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">移</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9824379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9824379999999999em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>e</mi><msub><mo stretchy="false">]</mo><mtext>移</mtext></msub></mrow><annotation encoding="application/x-tex">[e]_移</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">e</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">移</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为机器数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>为真值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>是一个固定的偏移值常数。</p><p>移码中符号位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的表示的规律与原码、补码、反码相反，即正整数符号位移码表示为1，负整数符号位移码表示为0。</p></li><li><p>浮点数的机器表示</p><p>IEEE754标准</p><p>32位短浮点数</p><table><thead><tr><th style="text-align:center">S(31，符号位占1位)</th><th style="text-align:center">E(30-23，阶码占8位)</th><th style="text-align:center">M(22-0，尾数占23位)</th></tr></thead></table><p>S是符号位，0表示正数，1表示负数。小数点位置在尾数域最左有效位的右边。</p><p>阶符采用隐含方式，即采用移码方法来表示正负指数。采用这种方式时，将浮点数的指数真值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>变成阶码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>时，应将指数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>加上一个固定的偏置常数127，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mi>e</mi><mo>+</mo><mn>127</mn></mrow><annotation encoding="application/x-tex">E=e+127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span></span></span></span>。</p><p>为了提高数据的表示精度，当尾数的值不为0时，尾数域的最高有效位应为1，这称为<strong>浮点数的规格化表示</strong>。对于非规格化浮点数，一般 可以通过修改阶码同时右移动小数点位置的办法，使其变成规格化数的形式。</p><p>在IEEE754标准中，一个<strong>规格化的32位浮点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的真值表示为</strong></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mn>1.</mn><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>127</mn></mrow></msup><mo separator="true">,</mo><mi>e</mi><mo>=</mo><mi>E</mi><mo>−</mo><mn>127</mn></mrow><annotation encoding="application/x-tex">x=(-1)^S\times(1.M)\times2^{E-127},e=E-127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.085771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span></span></span></span></span></p><p>其中，尾数域所表示的值是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.</mn><mi>M</mi></mrow><annotation encoding="application/x-tex">1.M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>。由于规格化的浮点数的尾数域最左位(最高有效位)<strong>总是1</strong>，故这一位无需存储，而认为是隐藏在小数点的左边。因此，实际上可以<strong>将24位有效数用23位字段</strong>来存储。</p><p>对32位浮点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，IEEE754定义：</p><p>（1）若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">E=255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">M\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mi>N</mi><mi>a</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">N=NaN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>。</p><p>（2）若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">E=255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">M=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">N=(-1)^S\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mord">∞</span></span></span></span>。</p><p>（3）若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">M=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mn>0</mn></mrow><annotation encoding="application/x-tex">N=(-1)^S0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mord">0</span></span></span></span>。</p><p>（4）若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>E</mi><mo>&lt;</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">0&lt;E&lt;255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mn>1.</mn><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>127</mn></mrow></msup></mrow><annotation encoding="application/x-tex">N=(-1)^S\times(1.M)\times2^{E-127}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></span>(规格化数)。</p><p>（5）若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">M\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mn>0.</mn><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mo>−</mo></msup><mn>126</mn></mrow><annotation encoding="application/x-tex">N=(-1)^S\times(0.M)\times2^-126</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span></span></span></span>(非规格化数)。这是无法进行规格化表示的数据，可以用非规格化形式表示。</p><blockquote><p>对于64位长浮点数，64位浮点数中符号位1位，阶码域11位，尾数域52位，指数偏移值是1023。因此，规格化的64位浮点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的真值为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mn>1.</mn><mi>M</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>1023</mn></mrow></msup><mo separator="true">,</mo><mi>e</mi><mo>=</mo><mi>E</mi><mo>−</mo><mn>1023</mn></mrow><annotation encoding="application/x-tex">x=(-1)^S\times(1.M)\times2^{E-1023},e=E-1023</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.085771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span></span></span></span></span></p></blockquote></li></ol><h4 id="113-字符与字符串的表示方法"><a class="markdownIt-Anchor" href="#113-字符与字符串的表示方法"></a> 1.1.3 字符与字符串的表示方法</h4><p>符号数据：将字符信息用数据表示。</p><h4 id="114-汉字的表示方"><a class="markdownIt-Anchor" href="#114-汉字的表示方"></a> 1.1.4 汉字的表示方</h4><ol><li><p>汉字的输入编码</p><p>数字编码、拼音码、字形编码</p></li><li><p>汉字内码</p></li><li><p>汉字字模码</p></li></ol><h4 id="115-校验码"><a class="markdownIt-Anchor" href="#115-校验码"></a> 1.1.5 校验码</h4><p>最简单且应用广泛的检错码是采用一位校验位的<strong>奇校验</strong>或<strong>偶校验</strong>。</p><p>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X=(x_0x_1...x_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是一个n位字，则奇校验位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>定义为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>⊕</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⊕</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>⊕</mo><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\overline{C}=x_0\oplus x_1\oplus...\oplus x_{n-1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊕</span></span></span></span>代表按位相加，表明只有当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>中包含<strong>奇数个1</strong>时，才能使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\overline{C}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">C=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p>同理，偶校验位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>定义为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>⊕</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⊕</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>⊕</mo><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C=x_0\oplus x_1\oplus...\oplus x_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>中包含偶数个1时，才使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">C=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p>奇偶校验只能检测奇数个错误，无法检测偶数个错误，更无法识别错误信息的位置。</p><blockquote><p>在异或运算中，奇数个1计算出的结果为1，偶数个1计算出的结果为0。</p><p>从上面来看，当校验位结果为0时，表示信息正常，当校验位结果为1时，表示信息错误。</p><p>原始数据中有奇数个1，使用奇校验，当出现错误时，奇数个1变为偶数个1，检验位结果为0，由于奇校验位是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>C</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>的形式，则最终校验结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>为1，表示错误。</p><p>偶校验同理可得，当出现错误时，偶数个1变为奇数个，校验位结果直接为1，表示错误。</p></blockquote><p>其他校验码如海明检验码，可参考<a class="link"   href="https://www.cnblogs.com/godoforange/" >海明码一篇文章彻底搞懂 ｜🔥秃桔子的博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="12-定点加法-减法运算"><a class="markdownIt-Anchor" href="#12-定点加法-减法运算"></a> 1.2 定点加法、减法运算</h3><h4 id="121-补码加法"><a class="markdownIt-Anchor" href="#121-补码加法"></a> 1.2.1 补码加法</h4><p>基本公式</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mspace width="2em"/><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[x]_补+[y]_补=[x+y]_补\qquad(mod\ 2^{n+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>考虑4种情况</p><p>（1）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x\geq0,y\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x+y\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mspace width="2em"/><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[x]_补+[y]_补=[x+y]_补\qquad(mod\ 2^{n+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>（2）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x\geq0,y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x+y\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x+y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则由补码定义可得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">[x]_补=x,[y]_补=2^{n+1}+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>x</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mspace width="2em"/><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp; \quad[x]_补+[y]_补\\&amp; =x+2^{n+1}+y\\&amp; = 2^{n+1}+(x+y)\\&amp;=[x+y]_补\qquad(mod\ 2^{n+1}) \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.072324em;vertical-align:-2.7861620000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.31027em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-3.786161999999999em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-2.262053999999999em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-0.7379459999999995em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7861620000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.446162em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.9220539999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.3979459999999992em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-0.8738379999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7861620000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>（3）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x&lt;0,y\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，和情况（2）同理。</p><p>（4）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x&lt;0,y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x+y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则由补码定义可得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">[x]_补=2^{n+1}+x,[y]_补=2^{n+1}+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>x</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mspace width="2em"/><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\quad[x]_补+[y]_补\\&amp;=2^{n+1}+x+2^{n+1}+y\\&amp;=2^{n+1}+2^{n+1}+(x+y)\\&amp;=[x+y]_补\qquad(mod\ 2^{n+1})\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.072324em;vertical-align:-2.7861620000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.31027em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-3.786161999999999em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-2.262053999999999em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span><span style="top:-0.7379459999999995em;"><span class="pstrut" style="height:2.864108em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7861620000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.286162em;"><span style="top:-5.446162em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.9220539999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.3979459999999992em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-0.8738379999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7861620000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="122-补码减法"><a class="markdownIt-Anchor" href="#122-补码减法"></a> 1.2.2 补码减法</h4><p>基本公式</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mo>−</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>−</mo><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy="false">[</mo><mo>−</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[x-y]_补=[x]_补-[y]_补=[x]_补+[-y]_补</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[y]_补</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[-y]_补</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的法则是：对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[y]_补</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>包括符号位“求反且最末位加1”，即可得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mi>y</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub></mrow><annotation encoding="application/x-tex">[-y]_补</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><h4 id="123-溢出概念与检测方法"><a class="markdownIt-Anchor" href="#123-溢出概念与检测方法"></a> 1.2.3 溢出概念与检测方法</h4><p>两个正数相加，结果过大导致符号位改变，结果为负数，正溢。</p><p>两个负数相加，结果过小导致符号位改变，结果为正数，负溢。</p><p>为了检测溢出，可采用两种检测方法。第一种方法就是双符号位法，也称为“<strong>变形补码</strong>”，使模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{n+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>补码所能表示的数的范围扩大一倍。</p><p>数的变形补码用同余式表示时</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msup><mo>+</mo><mi>x</mi><mspace width="2em"/><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[x]_补=2^{n+2}+x \qquad(mod\ 2^{n+2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.947438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>采用变形补码，正数的符号位为00，负数的符号位为11。当发生溢出时，符号位会出现01和10的情况，但是最高符号位永远表示结果的正确符号。</p><blockquote><p>01表示正溢，10表是负溢。</p></blockquote><h3 id="13-定点乘法运算"><a class="markdownIt-Anchor" href="#13-定点乘法运算"></a> 1.3 定点乘法运算</h3><p>用<strong>原码</strong>阵列乘法器，输入数据用<strong>原码</strong>表示</p><p>用<strong>补码</strong>阵列乘法器，输入数据用<strong>补码</strong>表示</p><blockquote><p>从实际计算过程来看，都是用<strong>真值绝对值的二进制形式</strong>计算得到结果。</p><p>如果给出的条件是十进制数，则直接取绝对值，如果是原码或补码，则经过一定的计算转换到真值的绝对值。</p></blockquote><p>符号位都是单独计算，符号使用异或运算，最后结果加上符号位。</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>⊕</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\oplus1=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>⊕</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0\oplus0=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\oplus1=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p></blockquote><h3 id="14-定点除法运算"><a class="markdownIt-Anchor" href="#14-定点除法运算"></a> 1.4 定点除法运算</h3><p>由于机器计算无法提前判断结果，必须先计算出结果才能进行判断。那么关于除法运算中余数不够减的情况，提供了两种处理方法，<strong>恢复余数法</strong>和<strong>加减交替法</strong>。</p><p>恢复余数法，就是将当前的余数加上除数即可。但是由于恢复余数的步数不是固定的，难以控制，因此实际运算中更多使用不恢复的方法。</p><p>加减交替法，也就是不恢复余数法，能够在余数不够减的情况下，根据余数符号，继续往下运算，步数固定，控制简单。</p><blockquote><p>当i-1次求商的余数为正时，上商为1，余数左移1位并减去除数得到下一个余数，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>2</mn><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">R_{i+1}=2R_i-Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></p><p>当i-1次求商的余数为负时，上商为0，余数左移1位并加上除数得到下一个余数，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><msub><mi>R</mi><mi>i</mi></msub><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>Y</mi><mo>=</mo><mn>2</mn><msub><mi>R</mi><mi>i</mi></msub><mo>+</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">R_{i+1}=2(R_i+Y)-Y=2R_i+Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></p></blockquote><p><strong>虽然加减交替法被称为不恢复余数法，但是如果最后一次得到的余数为负数，那仍需要进行恢复余数。恢复余数只需要直接加上除数即可，不需要进行任何的移位，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><msub><mi>R</mi><mi>i</mi></msub><mo>+</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">R=R_i+Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>。</strong></p><blockquote><p>另外，在计算过程中，通过左移计算的一般是手工实现版，通过右移计算的一般是算法实现版。</p></blockquote><h3 id="15-定点运算器的组成"><a class="markdownIt-Anchor" href="#15-定点运算器的组成"></a> 1.5 定点运算器的组成</h3><h4 id="151-逻辑运算"><a class="markdownIt-Anchor" href="#151-逻辑运算"></a> 1.5.1 逻辑运算</h4><p>四种基本逻辑运算：逻辑非(求反)、逻辑加(或)、逻辑乘(与)、逻辑异(按位加)。</p><h4 id="152-多功能算术逻辑运算单元"><a class="markdownIt-Anchor" href="#152-多功能算术逻辑运算单元"></a> 1.5.2 多功能算术/逻辑运算单元</h4><p>半加器</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H_i=A_i\oplus B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，不考虑进位，很少使用。</p><p>全加器</p><p>考虑低位进位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>和向高位的进位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其逻辑表达式为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>C</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><msub><mi>B</mi><mi>i</mi></msub><msub><mi>C</mi><mi>i</mi></msub><mo>+</mo><msub><mi>C</mi><mi>i</mi></msub><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i=A_i\oplus B_i\oplus C_i \\C_{i+1}=A_iB_i+B_iC_i+C_iA_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">F_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>位的和数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>位的被加数和加数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>位的进位输入，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>为第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>位的进位输出。</p><p>对全加器的功能进行拓展，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>先组合成由控制参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">S_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">S_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>控制的组合函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后再将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和下一位进位数通过全加器进行全加。</p><blockquote><p>其中</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><mover accent="true"><mrow><msub><mi>S</mi><mn>3</mn></msub><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><msub><mi>S</mi><mn>2</mn></msub><msub><mi>A</mi><mi>i</mi></msub><mover accent="true"><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="true">‾</mo></mover></mrow><mo stretchy="true">‾</mo></mover><mspace linebreak="newline"></mspace><msub><mi>Y</mi><mi>i</mi></msub><mo>=</mo><mover accent="true"><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>+</mo><msub><mi>S</mi><mn>0</mn></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><msub><mi>S</mi><mn>1</mn></msub><mover accent="true"><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="true">‾</mo></mover></mrow><mo stretchy="true">‾</mo></mover><mspace linebreak="newline"></mspace><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>X</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>i</mi></mrow></msub><mspace linebreak="newline"></mspace><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>+</mo><msub><mi>X</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_i=\overline{S_3A_iB_i+S_2A_i\overline{B_i}}\\Y_i=\overline{A_i+S_0B_i+S_1\overline{B_i}}\\F_i=Y_i\oplus X_i \oplus C_{n+i}\\C_{n+i+1}=Y_i+X_iC_{n+i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-4.00333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23333em;vertical-align:-0.15em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-4.00333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>每一位的进位公式递推如下，</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>Y</mi><mn>0</mn></msub><mo>+</mo><msub><mi>X</mi><mn>0</mn></msub><msub><mi>C</mi><mi>n</mi></msub><mspace linebreak="newline"></mspace><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>=</mo><msub><mi>Y</mi><mn>1</mn></msub><mo>+</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mspace linebreak="newline"></mspace><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>=</mo><msub><mi>Y</mi><mn>2</mn></msub><mo>+</mo><msub><mi>X</mi><mn>2</mn></msub><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub><mspace linebreak="newline"></mspace><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>4</mn></mrow></msub><mo>=</mo><msub><mi>Y</mi><mn>3</mn></msub><mo>+</mo><msub><mi>X</mi><mn>3</mn></msub><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>3</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{n+1}=Y_0+X_0C_n\\C_{n+2}=Y_1+X_1C_{n+1}\\C_{n+3}=Y_2+X_2C_{n+2}\\C_{n+4}=Y_3+X_3C_{n+3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>设</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo>=</mo><msub><mi>Y</mi><mn>3</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mo>+</mo><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace><mo>+</mo><msub><mi>Y</mi><mn>0</mn></msub><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace><mi>P</mi><mo>=</mo><msub><mi>X</mi><mn>0</mn></msub><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">G=Y_3+Y_2X_3+Y_1X_2X_3\\+Y_0X_1X_2X_3\\P=X_0X_1X_2X_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">+</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>则</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mn>4</mn></mrow></msub><mo>=</mo><mi>G</mi><mo>+</mo><mi>P</mi><msub><mi>C</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">C_{n+4}=G+PC_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span>称为进位发生输出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>称为进位传送输出。</p></blockquote><p><strong>并行进位</strong></p><p><strong>组内并行，组间串行</strong></p><p><strong>组内并行，组件并行</strong></p><h3 id="16-浮点运算与浮点运算器"><a class="markdownIt-Anchor" href="#16-浮点运算与浮点运算器"></a> 1.6 浮点运算与浮点运算器</h3><h4 id="移位操作"><a class="markdownIt-Anchor" href="#移位操作"></a> 移位操作</h4><p>逻辑移位，不保留原符号位，直接补0。</p><p>循环移位，不保留原符号位，空位补位的值与原符号位的值相同。</p><p><strong>原码</strong>算术移位，保留符号位，补0。</p><p><strong>补码算术左移</strong>，单符号位保留不变，双符号位只保留第一位，空位补0</p><p><strong>补码算术右移</strong>，单符号位保留不变，双符号位只保留第一位，空位补位的值与原符号位的值相同</p><h4 id="浮点加法-减法运算"><a class="markdownIt-Anchor" href="#浮点加法-减法运算"></a> 浮点加法、减法运算</h4><p>设有两个浮点数</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><msup><mn>2</mn><msub><mi>E</mi><mi>x</mi></msub></msup><mo>⋅</mo><msub><mi>M</mi><mi>x</mi></msub><mspace linebreak="newline"></mspace><mi>y</mi><mo>=</mo><msup><mn>2</mn><msub><mi>E</mi><mi>y</mi></msub></msup><mo>⋅</mo><msub><mi>M</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">x=2^{E_x}\cdot M_x\\y=2^{E_y}\cdot M_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">E_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">E_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>分别为数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的阶码，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">M_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">M_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>分别为数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的尾数。</p><p>两浮点数进行加法和减法的运算规则是</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>z</mi><mo>=</mo><mi>x</mi><mo>±</mo><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>M</mi><mi>x</mi></msub><msup><mn>2</mn><mrow><msub><mi>E</mi><mi>x</mi></msub><mo>−</mo><msub><mi>E</mi><mi>y</mi></msub></mrow></msup><mo>±</mo><msub><mi>M</mi><mi>y</mi></msub><mo stretchy="false">)</mo><msup><mn>2</mn><msub><mi>E</mi><mi>y</mi></msub></msup><mspace linebreak="newline"></mspace><msub><mi>E</mi><mi>x</mi></msub><mo>≤</mo><msub><mi>E</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">z=x\pm y=(M_x2^{E_x-E_y}\pm M_y)2^{E_y}\\E_x\leq E_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.141331em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>运算步骤</p><ol><li><p>0操作数检查</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>中有一个数为0，直接得出结果。</p></li><li><p>比较阶码大小并完成对阶</p><p>两浮点数加减，首先要看两数的阶码是否相同，即小数点的位置是否对齐。如果不同，则需要进行移位操作，使其阶码相同，这一过程就称为<strong>对阶</strong>。</p><p>要对阶，首先要求出阶差，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>E</mi><mo>=</mo><msub><mi>E</mi><mi>x</mi></msub><mo>−</mo><msub><mi>E</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">\Delta E=E_x-E_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><blockquote><p>一般使用<strong>尾数右移</strong>的方式来对阶，因为尾数右移造成的误差要远远小于尾数左移造成的误差。</p><p>因此，在对阶时，总是使<strong>小阶向大阶看齐</strong>，即小阶的尾数向右移位(相当于小数点左移)，每右移一位，其阶码加1，直到两数的阶码相等为止，右移的位数等于阶差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\Delta E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>。</p><p>这里的移位都是指<strong>补码算术移位</strong>。</p></blockquote></li><li><p>尾数加减运算</p><p>注意浮点数都是用<strong>补码</strong>来计算的即可。</p></li><li><p>结果规格化</p><p>右规：尾数右移才能满足规格化条件。尾数右移1位，阶码加1。</p><p>左规：尾数左移才能满足规格化条件。尾数左移1位，阶码减1。</p><blockquote><p>形如00.0…01…和11.1…10这种结果，可以将其左规为00.1…和11.0…的形式。</p></blockquote></li><li><p>舍入处理</p><p>在尾数右移时需要对丢弃的低位部分进行舍入处理。</p><p>就近舍入：0舍1入，类似于4舍5入。丢弃的最高位为1则进1。</p><p>朝0舍入：就是简单的截尾。这种方法容易积累误差。</p><p>朝<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">+\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span>舍入：对于正数，只要多余位不全为0则进1；对于负数，就是截尾。</p><p>朝<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">-\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">∞</span></span></span></span>舍入：对于正数，就是截尾；对于负数，只要多余位不全为0则进1。</p></li><li><p>溢出判断和处理</p><p>分为对阶码的溢出处理和对尾数的溢出处理。</p><p>阶码上溢：一般将其认为是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">+\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">-\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">∞</span></span></span></span>。</p><p>阶码下溢：一般将其认为是0。</p><p>尾数上溢：由于最高位进位导致的溢出，进行尾数尾数右移，阶码加1，重新对齐。</p><p>尾数下溢：在尾数右移时，进行舍入处理。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;计算机组成原理——运算方法和运算器知识梳理</summary>
    
    
    
    <category term="杂乱的记录" scheme="https://www.entropy-tree.top/categories/%E6%9D%82%E4%B9%B1%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="计算机组成原理" scheme="https://www.entropy-tree.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="运算方法" scheme="https://www.entropy-tree.top/tags/%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>linux下的后台进程管理</title>
    <link href="https://www.entropy-tree.top/2023/04/20/managing-background-processes-in-linux/"/>
    <id>https://www.entropy-tree.top/2023/04/20/managing-background-processes-in-linux/</id>
    <published>2023-04-20T12:41:30.000Z</published>
    <updated>2023-04-21T07:10:07.786Z</updated>
    
    <content type="html"><![CDATA[<p>后台进程管理对于任何一个操作系统来说都是非常重要的，它们在维持操作系统的基本功能运作时，还能运行更多用户自定义的进程服务。<span id="more"></span></p><p>通过对后台进程管理的学习可以进一步了解操作系统的运作机制以及系统资源的分配调度。</p><p>本文主要介绍几种在<code>linux</code>系统下长时间运行后台进程的方法。即使断开<code>ssh</code>连接或者是关闭终端后，依然能够保持在后台运行。</p><h2 id="nohup"><a class="markdownIt-Anchor" href="#nohup"></a> nohup</h2><h3 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h3><p><code>nohup</code>命令是一个最简单的长时间运行后台进程的命令，通常它和</p><p><code>&amp;</code>符号一起使用。</p><p><code>nohup</code>命令能够忽略<code>SIGHUP</code>信号的影响，在退出终端之后也能保持进程运行。(但是可以用<code>Ctrl+C</code>终止，即不忽略<code>SIGINT</code>信号)</p><p><code>&amp;</code>符号能够忽略<code>SIGINT</code>信号，并让命令和进程在后台运行，不在终端显示进程的输出信息，输出被重定向到指定的文件里，默认是<code>nohup.out</code>文件。(但是需要保持终端打开，退出终端后会终止)</p><p>将<code>nohup</code>和<code>&amp;</code>结合使用就能可靠实现长时间在后台运行。</p><h3 id="基本使用"><a class="markdownIt-Anchor" href="#基本使用"></a> 基本使用</h3><h4 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> <span class="built_in">command</span> &gt; ./out.file 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></div><p><code>command</code>是具体要在后台运行的命令。</p><p><code>out.file</code>是指定的输出文件路径和文件名，如果缺省则默认输出到<code>nohup.out</code>文件中。</p><p><code>2&gt;&amp;1</code>表示将标准错误<code>2</code>重定向到标准输出<code>&amp;1</code>，标准输出<code>&amp;1</code>再被重定向输入到输出文件中。</p><p><code>&amp;</code>表示在后台运行。</p><h4 id="终止"><a class="markdownIt-Anchor" href="#终止"></a> 终止</h4><p><code>nohup</code>+<code>&amp;</code>的进程可以通过<code>ps</code>命令搜索关键词得到进程号<code>pid</code>，再用<code>kill</code>命令终止。(一般来说，成功执行<code>nohup</code>后会输出<code>pid</code>的信息)</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep [...]</span><br><span class="line"><span class="built_in">kill</span> -9 [pid]</span><br></pre></td></tr></table></figure></div><h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3><p><code>nohup</code>命令是<code>linux</code>自带的命令，它提供了最简单的长时间运行后台进程的方案，但是功能也相对较少，不足以应付一些复杂的<strong>交互性</strong>的任务，一般用于临时性地长时间运行某个命令。后面介绍的命令则提供了更多的功能。</p><h2 id="screen"><a class="markdownIt-Anchor" href="#screen"></a> screen</h2><h3 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h3><p><code>screen</code>命令(全称<code>GNU Screen</code>)用于多重视窗管理程序，可以在不同的终端连接到同一个<strong>会话</strong>，是一种<strong>终端多路复用器</strong>。<code>screen</code>的使用可以很方便地保留会话，并解决了<code>nohup</code>在交互性任务上的不足。</p><h3 id="基本使用-2"><a class="markdownIt-Anchor" href="#基本使用-2"></a> 基本使用</h3><h4 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h4><p><code>screen</code>命令可能需要先手动安装</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Debian/Ubuntu</span></span><br><span class="line">sudo apt install screen</span><br></pre></td></tr></table></figure></div><h4 id="创建"><a class="markdownIt-Anchor" href="#创建"></a> 创建</h4><p>创建一个名为<code>test</code>的虚拟终端(默认用<code>hostname</code>命名，推荐自定义名称)</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S <span class="built_in">test</span></span><br></pre></td></tr></table></figure></div><p>或者使用</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R <span class="built_in">test</span></span><br></pre></td></tr></table></figure></div><p><code>-R</code>参数会先试图恢复已经存在的名为<code>test</code>的虚拟终端，如果找不到则创建新的虚拟终端。</p><p>使用<code>-S</code>参数可能会有重名的问题(<code>pid</code>不会重复)，如下</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/04/20/managing-background-processes-in-linux/image-20230421000557507.png"                      class="" title="image-20230421000557507"                ><h4 id="水平分割"><a class="markdownIt-Anchor" href="#水平分割"></a> 水平分割</h4><p>在<code>screen</code>窗口中，先输入<code>Ctrl+a</code>，再输入<code>|</code>，将当前窗口左右划分。</p><h4 id="垂直分割"><a class="markdownIt-Anchor" href="#垂直分割"></a> 垂直分割</h4><p>在<code>screen</code>窗口中，先输入<code>Ctrl+a</code>，再输入<code>S</code>，将当前窗口上下划分。</p><blockquote><p>这里的<code>S</code>必须大写</p></blockquote><h4 id="窗口切换"><a class="markdownIt-Anchor" href="#窗口切换"></a> 窗口切换</h4><p>在<code>screen</code>窗口中，先输入<code>Ctrl+a</code>，再输入<code>Tab</code>，切换不同的窗口。</p><h4 id="重连会话"><a class="markdownIt-Anchor" href="#重连会话"></a> 重连会话</h4><p>重新进入虚拟终端，可以使用以下命令</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r [name/pid]</span><br></pre></td></tr></table></figure></div><h4 id="退出"><a class="markdownIt-Anchor" href="#退出"></a> 退出</h4><p>在<code>screen</code>中，先输入<code>Ctrl+a</code>，再输入<code>d</code>会保留并退出该<code>screen</code>。</p><blockquote><p>注意输入的顺序，否则会误删screen</p></blockquote><h4 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h4><p>列出所有<code>screen</code>创建的虚拟终端以及其状态</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure></div><p>或者在<code>screen</code>虚拟终端中，先输入<code>Ctrl+a</code>，再输入<code>&quot;</code>即可查询。</p><p>虚拟终端具有两种状态</p><ul><li>Attached：激活状态，表示该<code>screen</code>正在作为当前终端使用。</li><li>Detached：非激活状态，表示该<code>screen</code>正在作为后台进程运行。</li></ul><h4 id="终止-2"><a class="markdownIt-Anchor" href="#终止-2"></a> 终止</h4><p>在进程处理完毕后，已经不需要虚拟终端了，就可以释放资源。</p><p>在对应的虚拟终端下时，可以用<code>exit</code>命令退出并释放资源。(推荐使用这种方式，因为能够直接确认当前终端是否处理完进程)</p><blockquote><p>tips：在<code>screen</code>中，输入<code>Ctrl+d</code>也可以释放该<code>screen</code>。</p></blockquote><p>在主终端下，如果确定某个虚拟终端可以终止，也可以使用以下命令释放</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R/-r/-S [name/pid] -X quit</span><br></pre></td></tr></table></figure></div><p>更多信息参考<a href="https://www.mintimate.cn/2021/09/02/howToUseScreen/"> <strong>雨月空间站</strong> </a></p><h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3><p><code>screen</code>虽然解决了<code>nohup</code>存在的局限性，但是功能相对后面的<code>tmux</code>还是稍微欠缺，不过基本能够满足大部分日常使用。用户可以根据自身的需求和习惯来选择<code>GNU</code>的<code>screen</code>或者是更加现代化的<code>tmux</code>。</p><h2 id="tmux"><a class="markdownIt-Anchor" href="#tmux"></a> tmux</h2><h3 id="概述-3"><a class="markdownIt-Anchor" href="#概述-3"></a> 概述</h3><p><code>tmux</code>是一个类似于<code>screen</code>的终端复用器，总体功能上比<code>screen</code>更加丰富，且风格更加现代化。</p><p><code>tmux</code>具有会话(session)、窗口(window)、窗格(pane)的三层结构。会话是所有虚拟终端的集合，窗口是整个屏幕，窗格是各个虚拟终端。一个会话可以创建多个窗口，一个窗口可以创建多个窗格。</p><h3 id="基本使用-3"><a class="markdownIt-Anchor" href="#基本使用-3"></a> 基本使用</h3><h4 id="安装-2"><a class="markdownIt-Anchor" href="#安装-2"></a> 安装</h4><p><code>tmux</code>的安装</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install tmux</span><br></pre></td></tr></table></figure></div><h4 id="创建会话"><a class="markdownIt-Anchor" href="#创建会话"></a> 创建会话</h4><p>创建会话session</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure></div><p>在tmux创建的会话底部会有一条状态栏，表示了当前的<code>session name</code>，<code>session number</code>，shell的类型以及<code>hostname</code>等。</p><p>创建一个名为<code>test</code>的会话session</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tmux new-session -s <span class="built_in">test</span></span><br><span class="line">tmux new -s <span class="built_in">test</span> <span class="comment"># 简写格式</span></span><br></pre></td></tr></table></figure></div><p>会话管理：在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>s</code>，可以查看并管理所有会话。</p><h4 id="窗口分割"><a class="markdownIt-Anchor" href="#窗口分割"></a> 窗口分割</h4><p>在一个<code>tmux</code>的会话中可以分割出多个窗口</p><p><strong>水平分割</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>%</code>，将窗口左右划分。</p><p><strong>垂直分割</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>&quot;</code>，将窗口上下划分。</p><h4 id="多窗格管理"><a class="markdownIt-Anchor" href="#多窗格管理"></a> 多窗格管理</h4><p><strong>编号展示</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>q</code>，可以知道窗格创建的先后顺序。</p><p><strong>窗格切换</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>;</code>，切换到上一个窗格；</p><p>先输入<code>Ctrl+b</code>，再输入<code>o</code>，切换到下一个窗格。</p><p><strong>窗格关闭</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>x</code>，可以关闭当前选中的窗格。也可以使用<code>Ctrl+d</code>或者<code>exit</code>命令，直接退出窗格。</p><h4 id="多窗口管理"><a class="markdownIt-Anchor" href="#多窗口管理"></a> 多窗口管理</h4><p><strong>创建窗口</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>c</code>，可以创建新的窗口，新窗口会覆盖当前窗口，同时底部状态栏会多出一个shell的信息。</p><p><strong>切换窗口</strong></p><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>p</code>，切换到上一个窗口；</p><p>先输入<code>Ctrl+b</code>，再输入<code>n</code>，切换到下一个窗口；</p><p>先输入<code>Ctrl+b</code>，再输入<code>w</code>，可以在列表中选择窗口。</p><p>更多快捷键参考<a class="link"   href="https://zhuanlan.zhihu.com/p/137715607" >Tmux的常用快捷键 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="查询会话"><a class="markdownIt-Anchor" href="#查询会话"></a> 查询会话</h4><p>列出所有已创建的<code>tmux</code></p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></div><blockquote><p>tips：也可以用前面提到的方法，在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>s</code>，也可以查询已创建的<code>tmux</code></p></blockquote><h4 id="脱离会话"><a class="markdownIt-Anchor" href="#脱离会话"></a> 脱离会话</h4><p>在<code>tmux</code>窗口中，先输入<code>Ctrl+b</code>，再输入<code>d</code>，或者使用以下命令</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux detach</span><br></pre></td></tr></table></figure></div><p>就能保存会话并脱离。</p><blockquote><p>注意：如果输入的是<code>Ctrl+d</code>，则会直接删除会话。</p></blockquote><h4 id="重连会话-2"><a class="markdownIt-Anchor" href="#重连会话-2"></a> 重连会话</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tmux attach -t [session-name]</span><br><span class="line">tmux a -t [session-name] <span class="comment"># 简写格式</span></span><br></pre></td></tr></table></figure></div><h4 id="删除会话"><a class="markdownIt-Anchor" href="#删除会话"></a> 删除会话</h4><p>在主终端下，执行以下命令</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux kill-session -t [session-name]</span><br></pre></td></tr></table></figure></div><p>或者在tmux窗口中，输入<code>Ctrl+d</code>，即可将会话删除。</p><h3 id="小结-3"><a class="markdownIt-Anchor" href="#小结-3"></a> 小结</h3><p><code>tmux</code>拥有比<code>screen</code>更加友好的信息提示，交互体验更加好。<code>tmux</code>也基本满足了日常使用需求，是适合广大用户的选择。</p><blockquote><p>不过，如果习惯了<code>screen</code>的快捷键操作等，也可以使用<code>screen</code>，同样可以很好地满足需求，而不必在多个工具间切换。</p><p>另外，不建议同时使用<code>screen</code>和<code>tmux</code>管理后台进程，一方面，它们的操作方式不同，另一方面，它们在管理后台进程时可能会冲突。</p></blockquote><p>关于<code>tmux</code>更多的技巧操作可以参考<a class="link"   href="https://zhuanlan.zhihu.com/p/414295937" >你需要知道的tmux使用技巧 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>以及对<code>tmux</code>的美化配置可以参考<a class="link"   href="https://zhuanlan.zhihu.com/p/122277982" >推荐神器Tmux和巨好看的配置文件 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="byobu"><a class="markdownIt-Anchor" href="#byobu"></a> byobu</h2><h3 id="概述-4"><a class="markdownIt-Anchor" href="#概述-4"></a> 概述</h3><p><code>byobu</code>是基于<code>screen</code>和<code>tmux</code>的终端多路复用器包装器，它通常和<code>screen</code>或<code>tmux</code>组合使用，在<code>screen</code>或<code>tmux</code>的基础上提供更多的功能支持。它本身无法独立实现<code>screen</code>和<code>tmux</code>的功能。</p><blockquote><p><code>byobu</code>早期是为<code>screen</code>开发的前端包装器，默认使用<code>screen</code>作为后端，目的是降低配置和操作成本。</p><p>现在的<code>byobu</code>默认使用<code>tmux</code>后端，相当于<code>tmux</code>的增强版，习惯<code>screen</code>的用户也可以手动配置<code>byobu</code>使用<code>screen</code>后端。</p></blockquote><h3 id="基本使用-4"><a class="markdownIt-Anchor" href="#基本使用-4"></a> 基本使用</h3><p><code>byobu</code>可以直接套用其后端的命令格式，如果使用的是<code>tmux</code>后端，只需要在<code>tmux</code>命令的基础上把<code>tmux</code>换成<code>byobu</code>即可，<code>screen</code>同理。</p><blockquote><p>实际上，使用<code>byobu</code>的功能主要是通过各种快捷键。</p></blockquote><h4 id="安装-3"><a class="markdownIt-Anchor" href="#安装-3"></a> 安装</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install byobu</span><br></pre></td></tr></table></figure></div><h4 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h4><p><code>byobu</code>的命令可以直接套用其后端的命令，也可以直接使用其后端的快捷键操作。</p><p>以下是基于<code>tmux</code>后端的几个命令示例，直接套用<code>tmux</code>的命令格式即可</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建会话</span></span><br><span class="line">byobu new -s <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 查询会话</span></span><br><span class="line">byobu <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 脱离会话</span></span><br><span class="line">byobu detach</span><br><span class="line"><span class="comment"># 重连会话</span></span><br><span class="line">byobu a -t <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 删除会话</span></span><br><span class="line">byobu kill-session -t <span class="built_in">test</span></span><br></pre></td></tr></table></figure></div><blockquote><p>快捷键操作可参考<a class="link"   href="https://zhuanlan.zhihu.com/p/113680062" >byobu常用快捷键 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，里面是以<code>screen</code>为后端的例子</p><p>注意：<code>screen</code>的前置快捷键是<code>Ctrl+a</code>，<code>tmux</code>的前置快捷键是<code>Ctrl+b</code></p></blockquote><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><p><code>byobu</code>的默认配置和<code>tmux</code>很相似，一开始看不出明显的区别，需要手动配置<code>byobu</code>。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>这部分方案适用于有特定需求的开发者。网站开发者，游戏服务器开发者或者是深度学习开发者等大型项目开发者，<code>screen</code>和<code>tmux</code>不适合管理这些大项目，因为它们不具有因程序崩溃或意外终止而<strong>自动重启</strong>的功能及其他的一些高级功能。</p><h3 id="systemd"><a class="markdownIt-Anchor" href="#systemd"></a> systemd</h3><p><code>systemd</code>是大部分主流<code>linux</code>系统的默认初始化系统，它通过<code>systemctl</code>这个命令来控制，具有<code>screen</code>和<code>tmux</code>所不具备的高级功能。</p><p>但是<code>systemd</code>与系统耦合度较高，而且其自定义配置<strong>需要具备一定的专业知识</strong>，通常一般的用户很少使用<code>systemd</code>来作为首选方案。</p><blockquote><p>这里指的是配置<code>systemd</code>管理用户自定义的程序，不是指使用<code>systemd</code>，<code>systemd</code>在日常生活就已经很频繁地在使用了。</p></blockquote><p>不过，有很多专业软件程序都有对<code>systemd</code>的支持，例如<code>mysql</code>、<code>nginx</code>、<code>NetworkManager</code>等，对于特定的<code>linux</code>系统开发者来说。</p><h3 id="supervisor"><a class="markdownIt-Anchor" href="#supervisor"></a> supervisor</h3><p><code>supervisor</code>是一个专注后台进程管理的程序，它使用<code>supervisorctl</code>命令来控制，可以让开发人员方便地管理和监控进程，它基于<code>python</code>开发，是开发者快速管理项目的一套简单易用的方案，不需要考虑过高的系统耦合性问题。</p><blockquote><p>有一部分<code>linux</code>发行版并不是使用<code>systemd</code>作为初始化系统(尽管大多数发行版都在支持<code>systemd</code>)，这部分的系统就无法使用<code>systemd</code>的方案。因此，<code>supervisor</code>可能会是一种方案。</p></blockquote><p>相关使用和配置可以参考<a class="link"   href="https://zhuanlan.zhihu.com/p/147305277" >Linux进程管理工具 Supervisor详解 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><a class="link"   href="https://cloud.tencent.com/developer/article/1763384" >Linux：Nohup命令详解 ｜ 腾讯云开发者社区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.runoob.com/linux/linux-comm-nohup.html" >linux nohup命令 | 菜鸟教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a href="https://www.mintimate.cn/2021/09/02/howToUseScreen/">Linux终端命令神器–Screen命令详解 | <strong>雨月空间站</strong></a></p><p><a href="https://qianxu.run/2021/03/28/tmux-vs-screen/">tmux vs screen | <strong>qxdn 的乐园</strong></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/122277982" >推荐神器Tmux和巨好看的配置文件 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/414295937" >你需要知道的tmux使用技巧 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://cloud.tencent.com/developer/article/1526675" >可能是东半球最全面易懂的 Tmux 使用教程！( 强烈建议收藏 ) | 腾讯云开发者社区 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/147305277" >Linux进程管理工具 Supervisor详解 | 知乎 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;后台进程管理对于任何一个操作系统来说都是非常重要的，它们在维持操作系统的基本功能运作时，还能运行更多用户自定义的进程服务。</summary>
    
    
    
    <category term="linux" scheme="https://www.entropy-tree.top/categories/linux/"/>
    
    
    <category term="后台管理" scheme="https://www.entropy-tree.top/tags/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    
    <category term="screen" scheme="https://www.entropy-tree.top/tags/screen/"/>
    
    <category term="tmux" scheme="https://www.entropy-tree.top/tags/tmux/"/>
    
    <category term="byobu" scheme="https://www.entropy-tree.top/tags/byobu/"/>
    
  </entry>
  
  <entry>
    <title>基于clang打造高效的开发环境</title>
    <link href="https://www.entropy-tree.top/2023/04/01/clang-env-build/"/>
    <id>https://www.entropy-tree.top/2023/04/01/clang-env-build/</id>
    <published>2023-04-01T03:55:59.000Z</published>
    <updated>2023-04-01T13:15:42.469Z</updated>
    
    <content type="html"><![CDATA[<p>在使用<code>vscode</code>进行C/C++开发过程中，一般就是直接使用<code>gcc</code>编译器（在windows中，它通常被称为<code>MinGW-w64</code>，一个<code>gcc</code>的移植版）、<code>gdb</code>调试器配合<code>C/C++</code>的插件来进行开发，也就是传统的<code>gnu</code>工具链中的组件。</p><p>但是<code>vscode</code>的<code>C/C++</code>的插件功能虽然齐全，响应速度却不够理想，于是本文介绍了使用<code>LLVM</code>工具链组件中的<code>clang</code>编译器来进行C/C++开发。<span id="more"></span></p><p>本文是在<code>Archlinux</code>的基础上搭建以<code>clang</code>作为编译器、<code>lldb</code>作为调试器的开发环境，<code>windows</code>可以通过额外配置<code>WSL</code>来搭建开发环境。</p><h2 id="基础环境搭建"><a class="markdownIt-Anchor" href="#基础环境搭建"></a> 基础环境搭建</h2><p><code>LLVM</code>工具链包括<code>clang</code>编译器、<code>lldb</code>调试器、<code>lld</code>链接器等。</p><h3 id="1安装vscode"><a class="markdownIt-Anchor" href="#1安装vscode"></a> 1.安装vscode</h3><p>这里使用的是<a class="link"   href="https://aur.archlinux.org/packages/visual-studio-code-bin" >visual-studio-code-bin <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><sup>EULA / aur</sup>。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S visual-studio-code-bin</span><br></pre></td></tr></table></figure></div><h3 id="2安装基础包"><a class="markdownIt-Anchor" href="#2安装基础包"></a> 2.安装基础包</h3><p>通过以下命令安装即可</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S llvm clang lldb lld</span><br></pre></td></tr></table></figure></div><h3 id="3安装vscode相关插件"><a class="markdownIt-Anchor" href="#3安装vscode相关插件"></a> 3.安装vscode相关插件</h3><p>打开vscode插件市场，搜索<code>clangd</code>、<code>CodeLLDB</code>下载安装（如果因为网络问题下载失败，请尝试手动下载安装.vsix文件）。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/04/01/clang-env-build/image-20230401142306155.png"                      class="" title="image-20230401142306155"                ><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/04/01/clang-env-build/image-20230401142340526.png"                      class="" title="image-20230401142340526"                ><h2 id="运行-调试配置"><a class="markdownIt-Anchor" href="#运行-调试配置"></a> 运行、调试配置</h2><h3 id="1创建配置文件"><a class="markdownIt-Anchor" href="#1创建配置文件"></a> 1.创建配置文件</h3><p>打开侧边框上的运行调试选项，点击<code>create a launch.json file</code>并选择<code>LLDB</code>，创建好<code>.vscode</code>文件夹下的<code>launch.json</code>配置文件</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/04/01/clang-env-build/image-20230401142113704.png"                      class="" title="image-20230401142113704"                ><p><code>launch.json</code>的初始内容如下，相关参数变量配置说明可访问<a class="link"   href="https://code.visualstudio.com/docs/editor/variables-reference" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/&lt;executable file&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>这里笔者将所有编译好的二进制文件输出到提前手动创建好的<code>build</code>文件夹(与源文件是同级目录)，另外<code>launch.json</code>还需要配置<code>tasks.json</code>才能实现运行调试，<code>tasks.json</code>则是具体定义了编译的命令以及参数等。<code>tasks.json</code>可以手动在<code>.vscode</code>文件夹下创建。</p><p>最终配置如下</p><p><code>launch.json</code></p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 编译文件的输出目录</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;/build/$&#123;fileBasenameNoExtension&#125;.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug C++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;internalConsoleOptions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;neverOpen&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 使用内置终端</span></span><br><span class="line">            <span class="attr">&quot;console&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integratedTerminal&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p><code>tasks.json</code></p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug C++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;--std=c++20&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-Wall&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span> <span class="comment">// 生成调试信息</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/build/$&#123;fileBasenameNoExtension&#125;.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Task generated by Debugger.&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>使用快捷键<code>Ctrl</code>+<code>F5</code>运行代码，使用快捷键<code>F5</code>调试代码(需要先断点)。</p><p>到这里基本的运行、调试已经配置完成，但是这种方式需要提前在当前目录下手动创建好输出目录，否则无法成功执行任务。当然也可以直接选择将当前目录作为输出目录，但那样输出文件与源文件混杂在一起不方便处理。</p><p>基于这点，笔者这里提供了一种思路：使用<code>Code Runner</code>插件指定其编译命令，提供自动创建输出目录的功能(唯一的不便就是需要先执行<code>Code Runner</code>创建好目录之后，才能进行调试)。</p><p>因此下面介绍通过配置<code>Code Runner</code>插件，更改其默认的<code>g++</code>命令为<code>clang++</code>，并实现自动创建输出目录的功能。</p><h3 id="2code-runner配置"><a class="markdownIt-Anchor" href="#2code-runner配置"></a> 2.Code Runner配置</h3><p>首先下载安装好<code>Code Runner</code>的插件，在插件市场搜索<code>Code Runner</code>并安装</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/04/01/clang-env-build/image-20230401195536276.png"                      class="" title="image-20230401195536276"                ><p>打开<code>Code Runner</code>的扩展配置，在搜索框中搜索<code>code-runner.executorMap</code>，点击<code>Edit in settings.json</code>打开<code>settings.json</code>配置文件。</p><p>在<code>settings.json</code>文件中修改对应的配置项中的<code>g++</code>为<code>clang++</code>，配置如下</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;code-runner.executorMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; clang $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cpp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; clang++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>指定输出目录，例如输出到当前目录的<code>build</code>目录下(自动创建)，则修改为以下配置</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;code-runner.executorMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; mkdir -p build &amp;&amp; clang $fileName -o build/$fileNameWithoutExt &amp;&amp; build/$fileNameWithoutExt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cpp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; mkdir -p build &amp;&amp; clang++ $fileName -o build/$fileNameWithoutExt &amp;&amp; build/$fileNameWithoutExt&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>更多参数配置说明可以参考<a class="link"   href="https://github.com/formulahendry/vscode-code-runner" >官方仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>至此一个简单高效的、基于<code>LLVM</code>工具链中的<code>clang</code>编译器、<code>lldb</code>调试器的开发环境已经搭建完成。</p><p>补充：网上很多相关教程主要是通过<code>CMake</code>配合<code>clang</code>来构建项目，<code>CMake</code>的配置对于单文件编译运行调试来说相对繁琐，不太适合简单的小项目。在早期笔者参考相关教程配置时意识到了这个问题，另外鉴于<code>C/C++</code>插件在响应速度上实在不尽人意，于是有了这篇简易的文章。</p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><a class="link"   href="https://code.visualstudio.com/docs/editor/debugging" >Debugging | visual studio <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://code.visualstudio.com/docs/editor/variables-reference" >variables-reference | visual studio <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://github.com/formulahendry/vscode-code-runner" >Code Runner | github <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在使用&lt;code&gt;vscode&lt;/code&gt;进行C/C++开发过程中，一般就是直接使用&lt;code&gt;gcc&lt;/code&gt;编译器（在windows中，它通常被称为&lt;code&gt;MinGW-w64&lt;/code&gt;，一个&lt;code&gt;gcc&lt;/code&gt;的移植版）、&lt;code&gt;gdb&lt;/code&gt;调试器配合&lt;code&gt;C/C++&lt;/code&gt;的插件来进行开发，也就是传统的&lt;code&gt;gnu&lt;/code&gt;工具链中的组件。&lt;/p&gt;
&lt;p&gt;但是&lt;code&gt;vscode&lt;/code&gt;的&lt;code&gt;C/C++&lt;/code&gt;的插件功能虽然齐全，响应速度却不够理想，于是本文介绍了使用&lt;code&gt;LLVM&lt;/code&gt;工具链组件中的&lt;code&gt;clang&lt;/code&gt;编译器来进行C/C++开发。</summary>
    
    
    
    <category term="工具链" scheme="https://www.entropy-tree.top/categories/%E5%B7%A5%E5%85%B7%E9%93%BE/"/>
    
    
    <category term="vscode" scheme="https://www.entropy-tree.top/tags/vscode/"/>
    
    <category term="clang" scheme="https://www.entropy-tree.top/tags/clang/"/>
    
    <category term="lldb" scheme="https://www.entropy-tree.top/tags/lldb/"/>
    
    <category term="llvm" scheme="https://www.entropy-tree.top/tags/llvm/"/>
    
    <category term="gcc" scheme="https://www.entropy-tree.top/tags/gcc/"/>
    
    <category term="gdb" scheme="https://www.entropy-tree.top/tags/gdb/"/>
    
    <category term="gnu" scheme="https://www.entropy-tree.top/tags/gnu/"/>
    
  </entry>
  
  <entry>
    <title>分治法与大数乘法</title>
    <link href="https://www.entropy-tree.top/2023/03/21/partition-calculate-bigdata/"/>
    <id>https://www.entropy-tree.top/2023/03/21/partition-calculate-bigdata/</id>
    <published>2023-03-21T11:55:10.000Z</published>
    <updated>2023-04-01T00:43:21.170Z</updated>
    
    <content type="html"><![CDATA[<p>使用分治法解决大数乘法问题<span id="more"></span></p><h2 id="问题分析"><a class="markdownIt-Anchor" href="#问题分析"></a> 问题分析</h2><p>大数乘法问题，由于不限制数据的大小，使用基本数据类型无法直接计算超过其最大表示范围的数据。因此需要考虑对大数进行<strong>分解</strong>。</p><p>首先观察一下，乘法最基础的计算方法——列竖式。以<code>999*999</code>为例</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">十万</th><th style="text-align:center">万</th><th style="text-align:center">千</th><th style="text-align:center">百</th><th style="text-align:center">十</th><th style="text-align:center">个</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">9</td><td style="text-align:center">9</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">9</td><td style="text-align:center">9</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center">9*9</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">90*9</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">900*9</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">9*90</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">90*90</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">900*90</td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">9*900</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">90*900</td><td style="text-align:center"></td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">900*900</td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">9</td><td style="text-align:center">9</td><td style="text-align:center">8</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><p>可以看到大数乘法被分解为了<strong>多步简单的计算</strong>，且每步计算是<strong>相互独立的</strong>，最后只需要将多步计算的结果累加即可。</p><h2 id="方法引入"><a class="markdownIt-Anchor" href="#方法引入"></a> 方法引入</h2><h3 id="分治法"><a class="markdownIt-Anchor" href="#分治法"></a> 分治法</h3><h4 id="思想"><a class="markdownIt-Anchor" href="#思想"></a> 思想</h4><p>将一个难以直接解决的大问题，分割成一些规模较小的相同问题，以便各个击破，分而治之。</p><h4 id="适用情况"><a class="markdownIt-Anchor" href="#适用情况"></a> 适用情况</h4><p>分治法能够解决的问题具有以下特征</p><ol><li>该问题的规模缩小到一定的程度就可以很容易地解决。</li><li>问题可以分解为多个规模较小的相同问题，即该问题具有<a class="link"   href="https://zhuanlan.zhihu.com/p/107755780" >最优子结构 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</li><li>将该问题所分解出的子问题的解合并就可以得到该问题的解。</li><li>该问题所分解出的各个子问题是相互独立的，即子问题之间不存在公共性的问题。</li></ol><p>特征1是大多数问题都能满足的</p><p>特征2是使用分治法的<strong>前提</strong>，也是大部分问题能够满足的</p><p>特征3是<strong>最关键的</strong>，能否在该问题上使用分治法<strong>完全取决于特征3</strong></p><p>特征4涉及到分治法的<strong>效率问题</strong>，如果子问题之间不是相互独立的，则分治法需要重复地解决公共的问题，降低效率。针对这个效率问题，就设计出了<strong>动态规划法</strong>来应对具有重叠子问题的最优子结构问题。</p><h4 id="使用步骤"><a class="markdownIt-Anchor" href="#使用步骤"></a> 使用步骤</h4><ol><li>将原问题分解为多个规模较小、相互独立且和原问题形式相同的子问题。</li><li>若子问题规模足够小则直接解决，否则使用<strong>递归</strong>进一步分解子问题直到能够解决为止。</li><li>将多个子问题的解返回，通过递归合并为原问题的解。</li></ol><h2 id="方法实现"><a class="markdownIt-Anchor" href="#方法实现"></a> 方法实现</h2><p>假设有大数a（长度为n）和b（长度为m）。这里使用二分法将大数进行拆分，则大数a、b可拆分为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><mspace linebreak="newline"></mspace><mi>b</mi><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a=a_1*10^{n/2}+a_0\\b=b_1*10^{m/2}+b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>则</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mo>∗</mo><mi>b</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>+</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}a*b=(a_1*10^{n/2}+a_0)*(b_1*10^{m/2}+b_0)\\=a_1*b_1*10^{n/2+m/2}+a_1*b_0*10^{n/2}\\+a_0*b_1*10^{m/2}+a_0*b_0\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.7940000000000005em;vertical-align:-2.1470000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6470000000000002em;"><span style="top:-4.7090000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.111em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">m</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.513em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1470000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>可以发现大数乘法分解成了四个小数乘法，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1*b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a_1*b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_0*b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a_0*b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。如果分解出来的数字还是过大可以进一步分解。这里考虑将大数a、b分解到只有一位数字的规模进行求解。</p><h3 id="方法函数设计"><a class="markdownIt-Anchor" href="#方法函数设计"></a> 方法函数设计</h3><p>函数原型：以字符串类型传递两个大数</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">cal</span><span class="params">(string, string)</span></span>;</span><br></pre></td></tr></table></figure></div><p>先设计对较小规模的方法处理，判断两个字符串长度，将两个字符串转为<code>int</code>进行计算之后再转回字符串返回</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a.<span class="built_in">length</span>() &lt; <span class="number">2</span> &amp;&amp; b.<span class="built_in">length</span>() &lt; <span class="number">2</span>) &#123;</span><br><span class="line">  <span class="type">int</span> ai = <span class="built_in">stoi</span>(a);</span><br><span class="line">  <span class="type">int</span> bi = <span class="built_in">stoi</span>(b);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">to_string</span>(ai * bi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>再设计递归表达式，这里使用二分法分解大数。</p><p>二分法获取大数的前半部分和后半部分，主要通过<code>substr</code>函数实现。</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 长度对半分</span></span><br><span class="line"><span class="type">int</span> ahalflen = a.<span class="built_in">length</span>() / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> bhalflen = b.<span class="built_in">length</span>() / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 大整数分成前半部分和后半部分</span></span><br><span class="line">string ahead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">string atail = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a.<span class="built_in">length</span>() &gt; ahalflen &amp;&amp; ahalflen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="comment">// substr(pos, len) 截取一个字符串从pos位置开始，长度为len的部分</span></span><br><span class="line">  ahead = a.<span class="built_in">substr</span>(<span class="number">0</span>, ahalflen);</span><br><span class="line">  atail = a.<span class="built_in">substr</span>(ahalflen, a.<span class="built_in">length</span>() - ahalflen);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  ahead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  atail = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string bhead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">string btail = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (b.<span class="built_in">length</span>() &gt; bhalflen &amp;&amp; bhalflen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  bhead = b.<span class="built_in">substr</span>(<span class="number">0</span>, bhalflen);</span><br><span class="line">  btail = b.<span class="built_in">substr</span>(bhalflen, b.<span class="built_in">length</span>() - bhalflen);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  bhead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  btail = b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>递归表达式的设计，参考前面将大数a、b的乘法分解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1*b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a_1*b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_0*b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo>∗</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">a_0*b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>四个乘法，这里也设计四个递归表达式对应四个乘法。</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string ahbh = <span class="built_in">cal</span>(ahead, bhead);</span><br><span class="line">string atbt = <span class="built_in">cal</span>(atail, btail);</span><br><span class="line">string ahbt = <span class="built_in">cal</span>(ahead, btail);</span><br><span class="line">string atbh = <span class="built_in">cal</span>(atail, bhead);</span><br></pre></td></tr></table></figure></div><p>对乘法的解进行相应的补位。</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ahbh.<span class="built_in">append</span>((a.<span class="built_in">length</span>() - ahalflen) + (b.<span class="built_in">length</span>() - bhalflen), <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">ahbt.<span class="built_in">append</span>(a.<span class="built_in">length</span>() - ahalflen, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">atbh.<span class="built_in">append</span>(b.<span class="built_in">length</span>() - bhalflen, <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure></div><p>将四个乘法的解合并并返回，其中<code>add</code>函数是自定义设计的用于大数加法计算的函数</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">res = <span class="built_in">add</span>(ahbh, ahbt);</span><br><span class="line">res = <span class="built_in">add</span>(res, atbh);</span><br><span class="line">res = <span class="built_in">add</span>(res, atbt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res;</span><br></pre></td></tr></table></figure></div><p>关于<code>add</code>函数的设计思路：使用<code>int</code>数组从后往前依次存储大数的每一位数，同时最后的<code>int</code>数组根据实际情况额外存储一位因进位而产生的数字。</p><p>具体流程</p><p>获取两个大数中最大的长度，反转两个大数字符串从个位数开始计算。</p><p>每次计算取出对应位数上的数字转为<code>int</code>进行计算，判断其值是否需要做进位处理。</p><p>计算完成后，由于此时字符串是反转的状态，还需要对字符串进行一次反转。</p><p>这里的反转的循环从后往前，去除掉高位上不需要的0，同时使用<code>zeroStart</code>来处理需要保留的中间部分的0，将需要保留的数字从后往前拼接起来并返回计算结果。</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">add</span><span class="params">(string a, string b)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> maxlen = <span class="built_in">max</span>(a.<span class="built_in">length</span>(), b.<span class="built_in">length</span>());</span><br><span class="line">  <span class="type">int</span> *sum = <span class="keyword">new</span> <span class="type">int</span>[maxlen]();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">  <span class="built_in">reverse</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; maxlen; i++) &#123;</span><br><span class="line">    <span class="type">int</span> a_bit = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b_bit = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; a.<span class="built_in">length</span>()) &#123;</span><br><span class="line">      <span class="comment">// string(num, c) 生成一个字符串，包含num个c字符</span></span><br><span class="line">      a_bit = <span class="built_in">stoi</span>(<span class="built_in">string</span>(<span class="number">1</span>, a.<span class="built_in">at</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &lt; b.<span class="built_in">length</span>()) &#123;</span><br><span class="line">      b_bit = <span class="built_in">stoi</span>(<span class="built_in">string</span>(<span class="number">1</span>, b.<span class="built_in">at</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum[i] += (a_bit + b_bit);</span><br><span class="line">    <span class="keyword">if</span> (i &lt; maxlen - <span class="number">1</span> &amp;&amp; sum[i] &gt; <span class="number">9</span>) &#123;</span><br><span class="line">      sum[i + <span class="number">1</span>] = sum[i] / <span class="number">10</span>;</span><br><span class="line">      sum[i] %= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="type">bool</span> zeroStart = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = maxlen - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">if</span> (sum[i] == <span class="number">0</span> &amp;&amp; zeroStart) &#123;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    zeroStart = <span class="literal">false</span>;</span><br><span class="line">    res.<span class="built_in">append</span>(<span class="built_in">to_string</span>(sum[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>通过<code>add</code>函数和<code>cal</code>函数就能实现任意大数的乘法运算，解题的关键在于考虑将两个大数的乘法分解为多个小数的乘法。</p><h2 id="源代码"><a class="markdownIt-Anchor" href="#源代码"></a> 源代码</h2><p>完整源代码参考如下</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">add</span><span class="params">(string a, string b)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> maxlen = <span class="built_in">max</span>(a.<span class="built_in">length</span>(), b.<span class="built_in">length</span>());</span><br><span class="line">  <span class="type">int</span> *sum = <span class="keyword">new</span> <span class="type">int</span>[maxlen]();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">  <span class="built_in">reverse</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; maxlen; i++) &#123;</span><br><span class="line">    <span class="type">int</span> a_bit = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b_bit = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; a.<span class="built_in">length</span>()) &#123;</span><br><span class="line">      <span class="comment">// string(num, c) 生成一个字符串，包含num个c字符</span></span><br><span class="line">      a_bit = <span class="built_in">stoi</span>(<span class="built_in">string</span>(<span class="number">1</span>, a.<span class="built_in">at</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &lt; b.<span class="built_in">length</span>()) &#123;</span><br><span class="line">      b_bit = <span class="built_in">stoi</span>(<span class="built_in">string</span>(<span class="number">1</span>, b.<span class="built_in">at</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum[i] += (a_bit + b_bit);</span><br><span class="line">    <span class="keyword">if</span> (i &lt; maxlen - <span class="number">1</span> &amp;&amp; sum[i] &gt; <span class="number">9</span>) &#123;</span><br><span class="line">      sum[i + <span class="number">1</span>] = sum[i] / <span class="number">10</span>;</span><br><span class="line">      sum[i] %= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="type">bool</span> zeroStart = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = maxlen - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">if</span> (sum[i] == <span class="number">0</span> &amp;&amp; zeroStart) &#123;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    zeroStart = <span class="literal">false</span>;</span><br><span class="line">    res.<span class="built_in">append</span>(<span class="built_in">to_string</span>(sum[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">cal</span><span class="params">(string a, string b)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 规模足够小直接返回结果</span></span><br><span class="line">  <span class="keyword">if</span> (a.<span class="built_in">length</span>() &lt; <span class="number">2</span> &amp;&amp; b.<span class="built_in">length</span>() &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="type">int</span> ai = <span class="built_in">stoi</span>(a);</span><br><span class="line">    <span class="type">int</span> bi = <span class="built_in">stoi</span>(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">to_string</span>(ai * bi);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 长度对半分</span></span><br><span class="line">  <span class="type">int</span> ahalflen = a.<span class="built_in">length</span>() / <span class="number">2</span>;</span><br><span class="line">  <span class="type">int</span> bhalflen = b.<span class="built_in">length</span>() / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 大整数分成前半部分和后半部分</span></span><br><span class="line">  string ahead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  string atail = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (a.<span class="built_in">length</span>() &gt; ahalflen &amp;&amp; ahalflen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// substr(pos, len) 截取一个字符串从pos位置开始，长度为len的部分</span></span><br><span class="line">    ahead = a.<span class="built_in">substr</span>(<span class="number">0</span>, ahalflen);</span><br><span class="line">    atail = a.<span class="built_in">substr</span>(ahalflen, a.<span class="built_in">length</span>() - ahalflen);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ahead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    atail = a;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  string bhead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  string btail = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (b.<span class="built_in">length</span>() &gt; bhalflen &amp;&amp; bhalflen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    bhead = b.<span class="built_in">substr</span>(<span class="number">0</span>, bhalflen);</span><br><span class="line">    btail = b.<span class="built_in">substr</span>(bhalflen, b.<span class="built_in">length</span>() - bhalflen);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    bhead = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    btail = b;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  string ahbh = <span class="built_in">cal</span>(ahead, bhead);</span><br><span class="line">  string atbt = <span class="built_in">cal</span>(atail, btail);</span><br><span class="line">  string ahbt = <span class="built_in">cal</span>(ahead, btail);</span><br><span class="line">  string atbh = <span class="built_in">cal</span>(atail, bhead);</span><br><span class="line"></span><br><span class="line">  ahbh.<span class="built_in">append</span>((a.<span class="built_in">length</span>() - ahalflen) + (b.<span class="built_in">length</span>() - bhalflen), <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">  ahbt.<span class="built_in">append</span>(a.<span class="built_in">length</span>() - ahalflen, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">  atbh.<span class="built_in">append</span>(b.<span class="built_in">length</span>() - bhalflen, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  res = <span class="built_in">add</span>(ahbh, ahbt);</span><br><span class="line">  res = <span class="built_in">add</span>(res, atbh);</span><br><span class="line">  res = <span class="built_in">add</span>(res, atbt);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  string a, b;</span><br><span class="line">  cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">  cout &lt;&lt; <span class="built_in">cal</span>(a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><a class="link"   href="https://zhuanlan.zhihu.com/p/305669278" >看了就会的大整数乘法运算与分治算法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://blog.csdn.net/weixin_43872728/article/details/101082875" >分治算法详解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用分治法解决大数乘法问题</summary>
    
    
    
    <category term="算法" scheme="https://www.entropy-tree.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="分治" scheme="https://www.entropy-tree.top/tags/%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>多版本环境控制</title>
    <link href="https://www.entropy-tree.top/2023/03/12/more-env-control/"/>
    <id>https://www.entropy-tree.top/2023/03/12/more-env-control/</id>
    <published>2023-03-12T08:05:02.000Z</published>
    <updated>2023-04-01T00:54:38.429Z</updated>
    
    <content type="html"><![CDATA[<p>在搭建开发环境时，通常是选择一个<code>LTS(Long Term Support)</code>版本，但是有时候需要在新发布的版本或者是在某个历史版本上搭建环境进行测试，需要重新搭建新环境，带来诸多不便。<span id="more"></span></p><p>关于多版本环境的搭建，笔者这里提供了<code>多版本管理工具</code>的方案，实现多个不同版本之间快速切换和管理，省去环境变量的重复配置。</p><p>以下是一些常用的开发环境多版本管理工具，大部分工具支持多平台，这里笔者使用的是<code>Archlinux</code>，其他操作系统也可在官网寻找对应平台的安装教程。</p><h2 id="java-开发环境"><a class="markdownIt-Anchor" href="#java-开发环境"></a> Java 开发环境</h2><p>JDK 多版本管理工具有很多种，这里主要介绍<code>SDKMAN</code>、<code>JEnv</code>、<code>Jabba</code>三种工具。</p><h3 id="1sdkman"><a class="markdownIt-Anchor" href="#1sdkman"></a> 1.SDKMAN</h3><h4 id="11-安装"><a class="markdownIt-Anchor" href="#11-安装"></a> 1.1 安装</h4><p><a class="link"   href="https://sdkman.io/install" >SDKMAN 官网安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，<code>SDKMAN</code>支持类<code>UNIX</code>的平台，<code>windows</code>系统可以使用<code>WSL</code>。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/12/more-env-control/image-20230312151735030.png"                      class="" title="image-20230312151735030"                ><p>下载安装命令，如果使用<code>zsh</code>或者<code>fish</code>，则将下面的<code>bash</code>替换为你所使用的<code>shell</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s &quot;https://get.sdkman.io&quot; | bash</span><br></pre></td></tr></table></figure></div><p>这里安装可能会出现缺少<code>zip</code>的问题，参考这篇<a class="link"   href="http://leetschau.github.io/install-sdkman-on-windows-git-bash.html" >文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>解决。</p><p>在<code>Archlinux</code>下直接用包管理器安装</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S zip</span><br></pre></td></tr></table></figure></div><p>在<code>windows</code>操作系统下，访问<a class="link"   href="https://sourceforge.net/projects/gnuwin32/files/" >sourceforge <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>找到<code>zip</code>包文件列表，下载<a class="link"   href="https://sourceforge.net/projects/gnuwin32/files/zip/3.0/" >zip-3.0-bin.zip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，并将下载的包解压到<code>C:\Program Files\Git\usr\bin</code>目录下，再次执行下载安装命令。</p><p>通过上面的命令安装后，接着执行下面的命令手动使配置生效或者开启一个新的终端</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot;</span><br></pre></td></tr></table></figure></div><p>测试<code>SDKMAN</code>是否安装成功</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk version</span><br></pre></td></tr></table></figure></div><p>输出版本信息即表示安装成功。</p><h4 id="12-使用"><a class="markdownIt-Anchor" href="#12-使用"></a> 1.2 使用</h4><p>查看可用的<code>JDK</code>版本列表</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk list java</span><br></pre></td></tr></table></figure></div><p>使用<code>SDKMAN</code>安装<code>JDK</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk install java 17.0.6-tem</span><br></pre></td></tr></table></figure></div><p>临时使用指定版本的<code>JDK</code>，在当前<code>shell</code>生效</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk use java 17.0.6-tem</span><br></pre></td></tr></table></figure></div><p>指定全局<code>JDK</code>版本，在全局生效</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk default java 17.0.6-tem</span><br></pre></td></tr></table></figure></div><p>卸载<code>JDK</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk uninstall java 17.0.6-tem</span><br></pre></td></tr></table></figure></div><h4 id="13-卸载"><a class="markdownIt-Anchor" href="#13-卸载"></a> 1.3 卸载</h4><p><code>SDKMAN</code>没有自动化卸载的方法，需要手动进行卸载</p><p>备份源文件目录</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf ~/sdkman-backup_$(date +%F-%kh%M).tar.gz -C ~/ .sdkman</span><br></pre></td></tr></table></figure></div><p>删除源文件目录</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.sdkman</span><br></pre></td></tr></table></figure></div><p>删除<code>.bashrc</code>，<code>.bash_profile</code>，<code>.zshrc</code>，<code>profile</code>文件中安装<code>SDKMAN</code>时写入的初始化配置信息，如果这些文件存在的话，具体要删除的代码片段如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!</span><br><span class="line">[[ -s &quot;/home/dudette/.sdkman/bin/sdkman-init.sh&quot; ]] &amp;&amp; source &quot;/home/dudette/.sdkman/bin/sdkman-init.sh&quot;</span><br></pre></td></tr></table></figure></div><h4 id="14-补充说明"><a class="markdownIt-Anchor" href="#14-补充说明"></a> 1.4 补充说明</h4><ul><li><p><code>SDKMAN</code>在国内存在无法下载或下载很慢的问题，可访问国内镜像站<a class="link"   href="https://www.injdk.cn/%E4%B8%8B%E8%BD%BD" >https://www.injdk.cn/下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li><li><p><code>SDKMAN</code>不仅支持<code>JDK</code>的多版本管理，还支持其他的<code>SDK</code>，具体参考<a class="link"   href="https://sdkman.io/sdks" >https://sdkman.io/sdks <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li></ul><h3 id="2jenv"><a class="markdownIt-Anchor" href="#2jenv"></a> 2.jEnv</h3><p><code>JEnv</code>与<code>SDKMAN</code>不同，<code>JEnv</code>不能直接安装<code>JDK</code>，而是对不同版本<code>JDK</code>环境变量的配置进行管理。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/12/more-env-control/image-20230312123733364.png"                      class="" title="image-20230312123733364"                ><h4 id="21-安装"><a class="markdownIt-Anchor" href="#21-安装"></a> 2.1 安装</h4><p><a class="link"   href="https://www.jenv.be/" >jEnv 官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，支持大部分类<code>Unix</code>系统平台。</p><p><code>git</code>克隆下载</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/gcuisinier/jenv.git ~/.jenv</span><br></pre></td></tr></table></figure></div><p>在<code>Bash</code>中配置</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;$HOME/.jenv/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">echo &#x27;eval &quot;$(jenv init -)&quot;&#x27; &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure></div><p>在<code>Zsh</code>中配置</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;$HOME/.jenv/bin:$PATH&quot;&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">echo &#x27;eval &quot;$(jenv init -)&quot;&#x27; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure></div><h4 id="22-使用"><a class="markdownIt-Anchor" href="#22-使用"></a> 2.2 使用</h4><p>首先需要去官网下载好对应的<code>JDK</code>源文件<code>tar.gz</code>，并解压到一个合适的目录下。</p><p>将已经下载好的<code>JDK</code>添加到<code>jEnv</code>中，以下是参考命令，具体的目录根据实际情况配置。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jenv add /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</span><br><span class="line">jenv add /Library/Java/JavaVirtualMachines/jdk17011.jdk/Contents/Home</span><br></pre></td></tr></table></figure></div><p>使用指定版本的<code>JDK</code></p><p>查看管理的<code>JDK</code>版本，当前使用的<code>JDK</code>版本会在前面有一个<code>*</code>的标记</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv versions</span><br></pre></td></tr></table></figure></div><p>配置全局使用的<code>JDK</code>版本，版本根据实际情况选择，命令仅供参考</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv global oracle64-1.6.0.39</span><br></pre></td></tr></table></figure></div><p>配置本地使用的<code>JDK</code>版本（每个目录）</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv local oracle64-1.6.0.39</span><br></pre></td></tr></table></figure></div><p>配置<code>shell</code>使用的<code>JDK</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenv shell oracle64-1.6.0.39</span><br></pre></td></tr></table></figure></div><p>取消配置，默认会采用<code>system</code>的配置</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jenv global --unset</span><br><span class="line">jenv local --unset</span><br><span class="line">jenv shell --unset</span><br></pre></td></tr></table></figure></div><h4 id="23-卸载"><a class="markdownIt-Anchor" href="#23-卸载"></a> 2.3 卸载</h4><p>参考<code>SDKMAN</code>的卸载方法</p><p>删除源文件目录</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.jenv</span><br></pre></td></tr></table></figure></div><p>删除<code>.bashrc</code>，<code>.bash_profile</code>，<code>.zshrc</code>，<code>profile</code>文件中安装<code>SDKMAN</code>时写入的初始化配置信息，如果这些文件存在的话，具体要删除的代码片段如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;$HOME/.jenv/bin:$PATH&quot;</span><br><span class="line">eval &quot;$(jenv init -)&quot;</span><br></pre></td></tr></table></figure></div><h3 id="3jabba"><a class="markdownIt-Anchor" href="#3jabba"></a> 3.Jabba</h3><p><code>jabba</code>是跨平台的Java版本管理工具，它是受<code>Node.js</code>的<code>nvm</code>启发，并且采用<code>Go</code>语言开发</p><p><code>jabba</code>的官方仓库：<a class="link"   href="https://github.com/shyiko/jabba" >https://github.com/shyiko/jabba <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="31-安装"><a class="markdownIt-Anchor" href="#31-安装"></a> 3.1 安装</h4><p><code>jabba</code>的安装参考文档：<a class="link"   href="https://www.cjavapy.com/article/96/" >Java JDK 版本管理工具jabba的安装 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>安装最新版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JABBA_GET=&quot;curl -sLk&quot;</span><br><span class="line">curl -sLk https://github.com/shyiko/jabba/raw/master/install.sh | bash &amp;&amp; . ~/.jabba/jabba.sh</span><br></pre></td></tr></table></figure></div><p>特别地，如果在<code>fish</code>下安装，使用以下命令</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sLk https://github.com/shyiko/jabba/raw/master/install.sh | bash; and . ~/.jabba/jabba.fish</span><br></pre></td></tr></table></figure></div><p>测试安装是否成功</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba --version</span><br></pre></td></tr></table></figure></div><h4 id="32-使用"><a class="markdownIt-Anchor" href="#32-使用"></a> 3.2 使用</h4><p>安装指定版本的<code>JDK</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba install openjdk@1.14.0</span><br></pre></td></tr></table></figure></div><p>查看所有安装的<code>JDK</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba ls</span><br></pre></td></tr></table></figure></div><p>卸载指定版本的<code>JDK</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba uninstall openjdk@1.14.0</span><br></pre></td></tr></table></figure></div><p>查看可用的<code>JDK</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba ls-remote</span><br></pre></td></tr></table></figure></div><p>切换<code>JDK</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jabba use openjdk@1.11.0</span><br></pre></td></tr></table></figure></div><p>更多命令参考<a class="link"   href="https://www.cjavapy.com/article/97/" >jabba的常用命令 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="33-卸载"><a class="markdownIt-Anchor" href="#33-卸载"></a> 3.3 卸载</h4><p>删除源文件目录</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .jabba</span><br></pre></td></tr></table></figure></div><p>删除<code>.bashrc</code>，<code>.bash_profile</code>，<code>.zshrc</code>，<code>profile</code>文件中安装<code>SDKMAN</code>时写入的初始化配置信息，如果这些文件存在的话，具体要删除的代码片段如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ -s &quot;/home/entropy/.jabba/jabba.sh&quot; ] &amp;&amp; source &quot;/home/entropy/.jabba/jabba.sh&quot;</span><br></pre></td></tr></table></figure></div><h4 id="34-补充说明"><a class="markdownIt-Anchor" href="#34-补充说明"></a> 3.4 补充说明</h4><p><code>jabba</code>同样存在国内无法下载或者下载很慢的问题。</p><h3 id="4archlinux-java"><a class="markdownIt-Anchor" href="#4archlinux-java"></a> 4.Archlinux-java</h3><p>由<code>Archlinux</code>提供的<code>java</code>多版本管理方案，是<code>Archlinux</code>自带的一个脚本文件，具体可参考<a class="link"   href="https://wiki.archlinux.org/title/Java#:~:text=%7C%7C%20luytenAUR-,Switching%20between%20JVM,-The%20helper%20script" >Arch Wiki <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><h2 id="go-开发环境"><a class="markdownIt-Anchor" href="#go-开发环境"></a> Go 开发环境</h2><h3 id="gvm"><a class="markdownIt-Anchor" href="#gvm"></a> GVM</h3><p><a class="link"   href="https://github.com/moovweb/gvm" >GVM 官方仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，<code>GVM</code>是<code>Go</code>语言版本管理器，支持安装和管理多个<code>Go</code>版本</p><h4 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h4><p>如果使用<code>zsh</code>或者<code>fish</code>，则将下面的<code>bash</code>替换为你所使用的<code>shell</code></p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt; &lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)</span><br></pre></td></tr></table></figure></div><p>执行下面的命令手动使配置生效或者打开一个新的终端</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source $HOME/.gvm/scripts/gvm</span><br></pre></td></tr></table></figure></div><h4 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h4><p>先安装<code>Go1.4</code>的版本，之后再安装<code>Go1.5</code>及之后的版本，避免出现引导问题（由于<code>Go</code>在<code>1.5</code>版本实现了自举，因此安装高版本的<code>Go</code>还需要准备一个低版本的<code>Go</code>提供编译环境）</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gvm install go1.4 -B</span><br><span class="line">gvm use go1.4 [--default]</span><br><span class="line">export GOROOT_BOOTSTRAP=$GOROOT</span><br><span class="line">gvm install go1.5</span><br></pre></td></tr></table></figure></div><p>临时使用指定的<code>Go</code>版本，加上<code>--default</code>参数指定，就可以默认使用该版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gvm use go1.4</span><br><span class="line">gvm use go1.4 --default</span><br></pre></td></tr></table></figure></div><p>列出已安装的<code>Go</code>版本，在当前正在使用的版本前面会有<code>=&gt;</code>的前缀</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gvm list</span><br></pre></td></tr></table></figure></div><p>列出所有可供下载的<code>Go</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gvm listall</span><br></pre></td></tr></table></figure></div><p>卸载<code>Go1.5</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gvm uninstall go1.5</span><br></pre></td></tr></table></figure></div><h4 id="卸载"><a class="markdownIt-Anchor" href="#卸载"></a> 卸载</h4><p><code>GVM</code>提供了完全删除<code>GVM</code>自身和所有已安装的<code>Go</code>版本和软件包的命令</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gvm implode</span><br></pre></td></tr></table></figure></div><h2 id="nodejs-开发环境"><a class="markdownIt-Anchor" href="#nodejs-开发环境"></a> Node.js 开发环境</h2><h3 id="nvm"><a class="markdownIt-Anchor" href="#nvm"></a> NVM</h3><p><a class="link"   href="https://github.com/nvm-sh/nvm#installing-and-updating" >NVM 官方仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，<code>nvm</code>就是<code>node.js</code>的版本管理工具，在开发中可以通过它来安装和切换不同的<code>node.js</code>版本</p><h4 id="安装-2"><a class="markdownIt-Anchor" href="#安装-2"></a> 安装</h4><p>如果使用<code>zsh</code>或者<code>fish</code>，则将下面的<code>bash</code>替换为你所使用的<code>shell</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure></div><p>测试安装是否成功，关闭终端打开一个新的终端执行以下命令，输出<code>nvm</code>则表示安装成功</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command -v nvm</span><br></pre></td></tr></table></figure></div><h4 id="使用-2"><a class="markdownIt-Anchor" href="#使用-2"></a> 使用</h4><p>列出所以可下载安装的<code>Nodejs</code>版本</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure></div><p>列出已安装的<code>Nodejs</code>版本，在当前正在使用的版本前面会有<code>-&gt;</code>的前缀</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure></div><p>安装指定版本的<code>Nodejs</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v18.15.0</span><br></pre></td></tr></table></figure></div><p>临时使用指定版本的<code>Nodejs</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v18.15.0</span><br></pre></td></tr></table></figure></div><p>默认使用指定版本的<code>Nodejs</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm alias default v18.15.0</span><br></pre></td></tr></table></figure></div><p>卸载指定版本的<code>Nodejs</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm uninstall v18.15.0</span><br></pre></td></tr></table></figure></div><h4 id="卸载-2"><a class="markdownIt-Anchor" href="#卸载-2"></a> 卸载</h4><p>删除源文件目录</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .nvm</span><br></pre></td></tr></table></figure></div><p>删除<code>.bashrc</code>，<code>.bash_profile</code>，<code>.zshrc</code>，<code>profile</code>文件中安装<code>SDKMAN</code>时写入的初始化配置信息，如果这些文件存在的话，具体要删除的代码片段如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /usr/share/nvm/init-nvm.sh</span><br></pre></td></tr></table></figure></div><h4 id="补充说明"><a class="markdownIt-Anchor" href="#补充说明"></a> 补充说明</h4><p><code>NVM</code>在国内可能存在无法下载或者下载很慢的问题，可在<code>.bashrc</code>，<code>.bash_profile</code>，<code>.zshrc</code>中选择<code>bash</code>或<code>zsh</code>对应的配置文件里添加以下配置</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npmmirror.com/mirrors/node</span><br></pre></td></tr></table></figure></div><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p><a class="link"   href="https://juejin.cn/post/7044711294984781838" >SDK管理利器：SDKMAN！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/416897637" >Java 多版本管理工具（自由切换Java版本）Jenv使用（支持Linux Mac Windows） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.cjavapy.com/article/631/" >Java JDK使用SDKMAN、JEnv和Jabba安装配置及版本切换 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/83375992" >如何灵活地进行 Go 版本管理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/445799189" >Golang 多版本管理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/483015085" >nvm安装-linux篇 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在搭建开发环境时，通常是选择一个&lt;code&gt;LTS(Long Term Support)&lt;/code&gt;版本，但是有时候需要在新发布的版本或者是在某个历史版本上搭建环境进行测试，需要重新搭建新环境，带来诸多不便。</summary>
    
    
    
    
    <category term="多版本控制" scheme="https://www.entropy-tree.top/tags/%E5%A4%9A%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用docker运行openGauss</title>
    <link href="https://www.entropy-tree.top/2023/03/05/opengauss-env-build/"/>
    <id>https://www.entropy-tree.top/2023/03/05/opengauss-env-build/</id>
    <published>2023-03-05T15:52:06.000Z</published>
    <updated>2023-03-31T23:55:52.503Z</updated>
    
    <content type="html"><![CDATA[<p>在linux上通过docker的方式运行开源数据库openGauss<span id="more"></span></p><h3 id="基本环境"><a class="markdownIt-Anchor" href="#基本环境"></a> 基本环境</h3><p>笔者使用的是<code>Archlinux</code>发行版，通过<code>Docker</code>容器技术运行基于<code>PostgreSQL</code>的开源数据库<code>openGauss</code></p><p><a class="link"   href="https://opengauss.org/zh/" >openGauss 中文社区官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://docker.p2hp.com/" >docker 中文网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://hub.docker.com/" >dockerHub 远程仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="docker-环境搭建"><a class="markdownIt-Anchor" href="#docker-环境搭建"></a> Docker 环境搭建</h3><h4 id="1安装-docker"><a class="markdownIt-Anchor" href="#1安装-docker"></a> 1.安装 docker</h4><p>linux发行版可以很方便地通过命令行安装（在此之前请先确保网络状态良好）</p><p>以下是<code>Archlinux</code>的安装方式</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S docker <span class="comment"># 安装docker</span></span><br><span class="line">sudo docker version   <span class="comment"># 查看docker版本</span></span><br><span class="line">sudo docker info      <span class="comment"># 查看docker信息</span></span><br></pre></td></tr></table></figure></div><p>其他的安装方式可参考<a class="link"   href="https://www.modb.pro/db/611595" >使用虚拟机VMwarepro1623镜像文件导入部署openGauss3.1.1指导手册 | 墨天轮(modb.pro) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="2启动-docker"><a class="markdownIt-Anchor" href="#2启动-docker"></a> 2.启动 docker</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker   <span class="comment"># 启动docker</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker  <span class="comment"># 允许docker开机自启</span></span><br><span class="line">sudo systemctl status docker  <span class="comment"># 查看docker运行状态</span></span><br><span class="line">sudo systemctl restart docker <span class="comment"># 重启docker</span></span><br></pre></td></tr></table></figure></div><h4 id="3docker-常用命令"><a class="markdownIt-Anchor" href="#3docker-常用命令"></a> 3.docker 常用命令</h4><p>主要参考自<a class="link"   href="https://www.runoob.com/docker/docker-container-usage.html" >菜鸟教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，关于部分命令的具体示例可参考下面 openGauss 环境的搭建</p><h5 id="容器使用相关命令"><a class="markdownIt-Anchor" href="#容器使用相关命令"></a> 容器使用相关命令</h5><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">docker run</td><td style="text-align:center">创建并运行新的容器，使用<code>-it</code>参数指定命令行模式运行，使用<code>--name</code>参数指定容器名称，使用<code>-d</code>参数指定在后台运行容器，使用<code>-P</code>参数随机映射到主机端口或<code>-p</code>参数指定主机端口映射</td></tr><tr><td style="text-align:center">docker ps -a</td><td style="text-align:center">查找所有已存在的容器</td></tr><tr><td style="text-align:center">docker start</td><td style="text-align:center">启动一个已存在的容器，需要提供容器的ID</td></tr><tr><td style="text-align:center">docker stop</td><td style="text-align:center">停止一个已存在的容器，需要提供容器的ID</td></tr><tr><td style="text-align:center">docker restart</td><td style="text-align:center">重启一个已存在的容器，需要提供容器的ID</td></tr><tr><td style="text-align:center">docker attach</td><td style="text-align:center">进入一个已存在的容器，需要提供容器的ID。注意：该命令在退出容器之后会自动停止容器。退出容器使用<code>exit</code>命令</td></tr><tr><td style="text-align:center">docker exec</td><td style="text-align:center">进入一个已存在的容器，需要提供容器的ID，配合<code>-it</code>参数并指定终端<code>/bin/bash</code>进入容器命令行。该命令在退出容器之后，容器不会停止。退出容器使用<code>exit</code>命令。</td></tr><tr><td style="text-align:center">docker export</td><td style="text-align:center">导出一个已存在的容器，需要提供容器的ID，配合<code>&gt; xxx.tar</code>命令导出容器快照到本地文件<code>xxx.tar</code></td></tr><tr><td style="text-align:center">docker import</td><td style="text-align:center">导入容器快照文件，使用`cat ./xxx.tar</td></tr><tr><td style="text-align:center">docker rm</td><td style="text-align:center">删除一个已存在的容器，需要提供容器的ID，使用<code>-f</code>参数强制删除</td></tr><tr><td style="text-align:center">docker container</td><td style="text-align:center">批量处理容器，例如删除所有处于终止状态的容器<code>docker container prune</code></td></tr><tr><td style="text-align:center">docker port</td><td style="text-align:center">查看容器的端口映射，需要提供容器的ID</td></tr></tbody></table><h5 id="镜像使用相关命令"><a class="markdownIt-Anchor" href="#镜像使用相关命令"></a> 镜像使用相关命令</h5><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">docker images</td><td style="text-align:center">列出本地主机上已存在的镜像</td></tr><tr><td style="text-align:center">docker search</td><td style="text-align:center">搜索指定的docker镜像</td></tr><tr><td style="text-align:center">docker pull</td><td style="text-align:center">拉取指定的docker镜像</td></tr><tr><td style="text-align:center">docker rmi</td><td style="text-align:center">删除指定的docker镜像</td></tr><tr><td style="text-align:center">docker commit</td><td style="text-align:center">从已有镜像的基础上创建新镜像，<code>-m=&quot;xxx&quot;</code>参数表示提交的描述信息，<code>-a=&quot;xxx&quot;</code>参数指定镜像的作者，<code>test/xxx:v2</code>参数指定镜像的名称和标签</td></tr><tr><td style="text-align:center">docker build</td><td style="text-align:center">从零开始创建一个新的镜像，需要先创建一个包含特定指令组的<code>Dockerfile</code>文件</td></tr><tr><td style="text-align:center">docker tag</td><td style="text-align:center">为docker镜像添加标签</td></tr></tbody></table><h4 id="4配置-docker-组"><a class="markdownIt-Anchor" href="#4配置-docker-组"></a> 4.配置 docker 组</h4><p>在linux中使用docker必须以root权限<code>sudo</code>执行命令或者切换到root用户身份运行（不推荐），否则所有的docker命令前都需要添加<code>sudo</code>，表示以root权限执行命令。这里新创建了一个用户组，专门用于操作docker</p><p>由于通过<code>pacman</code>方式安装<code>docker</code>时自动创建好了docker组，这里直接将当前普通用户添加至docker组中即可。</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="variable">$USER</span> docker <span class="comment"># 添加当前用户至docker组</span></span><br><span class="line">newgrp docker                <span class="comment"># 切换到docker用户组（注意该命令需要在每次新开终端时执行）</span></span><br><span class="line">docker ps                    <span class="comment"># 测试docker命令，这时就不需要在命令前添加sudo</span></span><br></pre></td></tr></table></figure></div><h4 id="5配置-docker-国内加速"><a class="markdownIt-Anchor" href="#5配置-docker-国内加速"></a> 5.配置 docker 国内加速</h4><p><a class="link"   href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" >阿里云官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>获取用户专属的镜像加速地址</p><p>可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;这里填写专属加速器地址&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line">sudo docker info | grep <span class="string">&quot;专属加速器地址&quot;</span> <span class="comment"># 查看镜像是否配置成功，若有输出地址信息则表示配置成功</span></span><br></pre></td></tr></table></figure></div><p>参考<a class="link"   href="https://www.runoob.com/docker/docker-mirror-acceleration.html" >Docker 镜像加速 | 菜鸟教程(runoob.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="6docker-容器外部访问连接"><a class="markdownIt-Anchor" href="#6docker-容器外部访问连接"></a> 6.docker 容器外部访问连接</h4><p>默认启动的docker容器只能在容器内部访问，但有时需要在容器外部访问，比如后面使用数据库图形化管理工具远程连接 openGauss 数据库。</p><p>使用<code>docker run</code>配合<code>-p</code>或<code>-P</code>参数指定端口映射，这里指定端口映射方便后续查找</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name opengauss --privileged=<span class="literal">true</span> -d -e GS_PASSWORD=openGauss@123 -p 15432:5432 enmotech/opengauss:latest</span><br></pre></td></tr></table></figure></div><p>通过<code>-p</code>命令指定docker容器内的<code>5432端口</code>（openGauss的默认监听端口）映射到主机的<code>15432端口</code>上。之后就可以通过主机的<code>15432端口</code>访问容器数据库。</p><h3 id="opengauss-环境搭建"><a class="markdownIt-Anchor" href="#opengauss-环境搭建"></a> openGauss 环境搭建</h3><p>这里使用<code>openGauss</code>的docker镜像，可直接参考镜像作者提供的<a class="link"   href="https://hub.docker.com/r/enmotech/opengauss" >文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="1拉取-docker-镜像"><a class="markdownIt-Anchor" href="#1拉取-docker-镜像"></a> 1.拉取 docker 镜像</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search openGauss <span class="comment"># 搜索openGauss的docker镜像</span></span><br></pre></td></tr></table></figure></div><p>搜索结果如下，这里选择 stars 收藏量最高的镜像</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305160339079.png"                      class="" title="image-20230305160339079"                ><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull enmotech/opengauss <span class="comment"># 拉取镜像</span></span><br></pre></td></tr></table></figure></div><h4 id="2启动-opengauss-容器"><a class="markdownIt-Anchor" href="#2启动-opengauss-容器"></a> 2.启动 openGauss 容器</h4><p>只在容器内访问</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name opengauss --privileged=<span class="literal">true</span> -d -e GS_PASSWORD=openGauss@123 enmotech/opengauss:latest</span><br></pre></td></tr></table></figure></div><p>允许外部访问</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name opengauss --privileged=<span class="literal">true</span> -d -e GS_PASSWORD=openGauss@123 -p 15432:5432 enmotech/opengauss:latest</span><br></pre></td></tr></table></figure></div><p><strong>注意<code>GS_PASSWORD</code>设置为你的密码，密码长度8个字符及以上，必须同时包含英文字母大小写，数字，以及特殊符号，用于后续图形化数据库管理工具连接</strong></p><h4 id="3进入-opengauss-容器"><a class="markdownIt-Anchor" href="#3进入-opengauss-容器"></a> 3.进入 openGauss 容器</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps    <span class="comment"># 查看正在运行中的容器</span></span><br><span class="line">docker ps -a <span class="comment"># 查看所有已创建的容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it opengauss bash <span class="comment"># 进入容器，opengauss是前面创建容器时指定的名称</span></span><br></pre></td></tr></table></figure></div><h4 id="4使用-gsql-配置-opengauss"><a class="markdownIt-Anchor" href="#4使用-gsql-配置-opengauss"></a> 4.使用 gsql 配置 openGauss</h4><p>注意：openGauss的docker镜像版本是没有<code>gs_om</code>和<code>gs_guc</code>。另外，初次操作数据库时需要在omm用户下进行</p><h5 id="使用-gsql-连接到数据库"><a class="markdownIt-Anchor" href="#使用-gsql-连接到数据库"></a> 使用 gsql 连接到数据库</h5><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - omm <span class="comment"># 切换到omm用户</span></span><br><span class="line">gsql -d postgres -U gaussdb -W<span class="string">&#x27;openGauss@123&#x27;</span> -h 127.0.0.1 -p 5432 <span class="comment"># 在容器内部可以直接连接</span></span><br><span class="line"><span class="comment"># 注意用户名是gaussdb是默认存在的用户，密码是之前创建容器时自定义的，5432端口是默认的(根据实际情况调整)</span></span><br></pre></td></tr></table></figure></div><blockquote><p>在内部访问数据库时也可以只写<code>gsql</code>不带任何参数的命令来连接数据库</p><p>这是因为该openGauss镜像配置了本地信任机制，因此在容器内连接数据库无需密码，但是如果要从容器外部（其它主机或者其它容器）连接则必须要输入密码</p><p>对于通过其他方式安装openGauss的，请另行参考其他教程</p></blockquote><h5 id="创建新的数据库用户"><a class="markdownIt-Anchor" href="#创建新的数据库用户"></a> 创建新的数据库用户</h5><p>omm用户的权限过大，主要用于访问初始数据库进行初始配置，为避免omm用户误操作对数据库造成重大损失，这里新创建一个普通用户并授予基本权限。</p><p>注意：sql语句结尾带分号。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> stu <span class="keyword">with</span> password &quot;Bigdata@123&quot;; # 创建一个用户名为stu，密码为Bigdata<span class="variable">@123</span>的用户</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> stu sysadmin; # 授予系统管理员权限</span><br></pre></td></tr></table></figure></div><h5 id="创建新的数据库"><a class="markdownIt-Anchor" href="#创建新的数据库"></a> 创建新的数据库</h5><p>openGauss数据库，虽然被称为数据库，但实际上它是一个RDBMS（Relational Database Management System，关系型数据库管理系统）。因此它并不是一个具体的数据库，而是一个管理多个数据库的系统。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database stu_test owner stu; # 创建一个名为stu_test的数据库并指定所有者为stu</span><br></pre></td></tr></table></figure></div><h5 id="使用新用户连接"><a class="markdownIt-Anchor" href="#使用新用户连接"></a> 使用新用户连接</h5><p>先使用<code>\q</code>命令退出数据库，再使用新用户连接数据库</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsql -d stu_test -U stu -W<span class="string">&#x27;Bigdata@123&#x27;</span> -h 127.0.0.1 -p 5432</span><br></pre></td></tr></table></figure></div><h4 id="5opengauss-数据库的使用"><a class="markdownIt-Anchor" href="#5opengauss-数据库的使用"></a> 5.openGauss 数据库的使用</h4><h5 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h5><ul><li><p>使用<code>\c dbname</code>切换数据库（dbname为数据库名称）</p></li><li><p>使用<code>\l</code>查看数据库系统的数据库列表</p><p>也可以通过<code>SELECT datname FROM pg_database;</code>的方式通过系统表查询数据库列表</p></li><li><p>使用<code>\dt</code>列举数据表，如果当前数据库内还没有数据表，则输出<code>No relations found.</code></p><p>使用<code>\d+</code>列举所有数据表、视图和索引</p><p>使用<code>\d+ tablename</code>查看指定数据表的属性</p><p>使用<code>\dn</code>列举架构（schema）</p><p>使用<code>\di</code>查看索引</p></li><li><p>使用<code>\db</code>查询表空间，也可通过<code>SELECT spcname FROM pg_tablespace;</code>实现</p></li><li><p>查看数据库用户列表<code>SELECT * FROM pg_user;</code></p></li><li><p>查看用户属性<code>SELECT * FROM pg_authid;</code></p></li><li><p>查看所有角色<code>SELECT * FROM PG_ROLES;</code></p></li><li><p>使用<code>\c - username</code>切换到其他数据库用户</p></li><li><p>使用<code>\q</code>命令退出数据库</p></li></ul><h5 id="创建-schema"><a class="markdownIt-Anchor" href="#创建-schema"></a> 创建 schema</h5><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> schema stu <span class="keyword">authorization</span> stu;</span><br></pre></td></tr></table></figure></div><h5 id="创建数据表"><a class="markdownIt-Anchor" href="#创建数据表"></a> 创建数据表</h5><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu_table (id <span class="type">int</span>);</span><br></pre></td></tr></table></figure></div><h5 id="向表中添加数据"><a class="markdownIt-Anchor" href="#向表中添加数据"></a> 向表中添加数据</h5><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_table <span class="keyword">values</span> (<span class="number">100</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu_table; # 查看数据表内容</span><br></pre></td></tr></table></figure></div><p>sql语法在大部分数据库管理系统（RDBMS）之间是通用的，更多sql语法可参考笔者的另一篇文章<a class="link"   href="https://www.entropy-tree.top/2022/08/21/MySQL-Base/" >MySQL基础 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>注意：<code>Postgresql</code>对大小写不敏感，使用sql语句创建出来的数据库、数据表的名称以及数据内容等默认全转换为小写字母，如果需要严格匹配字母大小写，请在编写sql语句时用英文双引号<code>&quot;&quot;</code>包围需要指定大小写的数据库、数据表的名称以及数据内容等。</p><h4 id="6图形化数据库连接工具"><a class="markdownIt-Anchor" href="#6图形化数据库连接工具"></a> 6.图形化数据库连接工具</h4><p>这里笔者参考了<a class="link"   href="https://zhuanlan.zhihu.com/p/366765114" >三款linux上可用的数据库客户端软件 | 知乎(zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，找到了几款linux平台上开源的数据库连接工具。这里以 <a class="link"   href="https://github.com/dbgate/dbgate" >DbGate <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 为例，其他连接工具也是类似的配置流程。</p><p>更多数据库连接工具推荐</p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/160835224" >开源 5 款超好用的数据库 GUI 带你玩转 MongoDB、Redis、SQL 数据库 | 知乎(zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/532594566" >8个适用于 Linux 管理员的最佳MySQL/MariaDB GUI 工具 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="安装工具"><a class="markdownIt-Anchor" href="#安装工具"></a> 安装工具</h5><p>在<code>Archlinux</code>下可通过以下命令直接安装</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S dbgate-bin</span><br></pre></td></tr></table></figure></div><p>大致界面如下</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305214325422.png"                      class="" title="image-20230305214325422"                ><h5 id="连接配置"><a class="markdownIt-Anchor" href="#连接配置"></a> 连接配置</h5><p>File —&gt; Add connection 添加一个新的连接</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305215251057.png"                      class="" title="image-20230305215251057"                ><p>填写配置，其中<code>Connection type</code>设置为<code>PostgreSQL</code>，<code>Port</code>为docker映射的主机端口号，<code>User</code>和<code>Password</code>是前面新创建的数据库用户的名称和密码。最后用<code>Test</code>测试连接是否成功，用<code>Save</code>保存连接配置，用<code>Connect</code>连接数据库</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305215817927.png"                      class="" title="image-20230305215817927"                ><p>最终连接结果如下</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305220707871.png"                      class="" title="image-20230305220707871"                ><h5 id="编写-sql"><a class="markdownIt-Anchor" href="#编写-sql"></a> 编写 SQL</h5><p>File —&gt; New query 新建查询（.sql文件），在该文件中编写具体的sql语句。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305221246267.png"                      class="" title="image-20230305221246267"                ><p>或者选中对应的数据库新建查询，确保新建查询和具体的数据库对应</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305225943364.png"                      class="" title="image-20230305225943364"                ><p>编写并执行SQL语句</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/03/05/opengauss-env-build/image-20230305232407586.png"                      class="" title="image-20230305232407586"                ><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h4><p><a class="link"   href="https://www.modb.pro/db/27152" >opengauss docker安装 | 墨天轮(modb.pro) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://hub.docker.com/r/enmotech/opengauss" >enmotech/opengauss | dockerhub(hub.docker.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.modb.pro/doc/4656" >opengauss docker从环境搭建到运行 | 墨天轮(modb.pro) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://blog.csdn.net/zhuyue_shenfeng/article/details/116056437" >openGauss数据库基本操作 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在linux上通过docker的方式运行开源数据库openGauss</summary>
    
    
    
    <category term="linux" scheme="https://www.entropy-tree.top/categories/linux/"/>
    
    
    <category term="openGauss" scheme="https://www.entropy-tree.top/tags/openGauss/"/>
    
    <category term="docker" scheme="https://www.entropy-tree.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="https://www.entropy-tree.top/2023/02/22/golang-day17/"/>
    <id>https://www.entropy-tree.top/2023/02/22/golang-day17/</id>
    <published>2023-02-22T15:50:54.000Z</published>
    <updated>2023-03-31T23:55:52.502Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7202945024749092923" >Redis | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对 Redis 的学习<span id="more"></span></p><h2 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h2><h3 id="1redis-是什么"><a class="markdownIt-Anchor" href="#1redis-是什么"></a> 1.Redis 是什么</h3><h4 id="为什么需要-redis"><a class="markdownIt-Anchor" href="#为什么需要-redis"></a> 为什么需要 Redis</h4><ul><li>数据从单表，演进出了分库分表</li><li>MySQL 从单机演进出了集群<ul><li>数据量增长</li><li>读写数据压力的不断增加</li></ul></li><li>数据分冷热<ul><li>热数据：经常被访问到的数据</li></ul></li><li>将热数据存储到内存中</li></ul><h4 id="redis-基本工作原理"><a class="markdownIt-Anchor" href="#redis-基本工作原理"></a> Redis 基本工作原理</h4><ul><li>数据从内存中读写</li><li>数据保存到硬盘上防止重启数据丢失<ul><li>增量数据保存到 AOF 文件中</li><li>全量数据保存到 RDB 文件中</li></ul></li><li>单线程处理所有操作命令</li></ul><h3 id="2redis-应用案例"><a class="markdownIt-Anchor" href="#2redis-应用案例"></a> 2.Redis 应用案例</h3><h4 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h4><p><strong>1.连续签到</strong></p><p>app 每日签到，如果断签，连续签到计数将归 0。</p><p>连续签到的要求：每天必须在 23:59 前签到</p><ul><li>Key：uuid…</li><li>value：252</li><li>expireAt：24:00</li></ul><p><strong>String 数据结构</strong></p><ul><li>可以存储字符串、数字、二进制数据</li><li>通常和 expire 配合使用</li><li>场景：存储计数、Session</li></ul><p><strong>2.消息通知</strong></p><p>用 list 作为消息队列</p><ul><li><p>使用场景：消息通知</p><blockquote><p>例如当文章更新时，将更新后的文章推送到 ES，用户就能搜索到最新的文章数据。</p></blockquote></li></ul><p><strong>List 数据结构 Quicklist</strong></p><p>Quicklist 由一个双向链表和 listpack 实现</p><p><strong>3.计数</strong></p><p>一个用户有多项计数需求，可通过 hash 结构存储</p><p><strong>Hash 数据结构 dict</strong></p><ul><li>rehash：rehash 操作是将 ht[0] 中的数据，全部迁移到 ht[1] 中。数据量小的场景下，直接将数据从 ht[0] 拷贝到 ht[1] 速度是较快的。数据量大的场景，例如存有上百万的 KV 时，迁移过程将会明显阻塞用户请求。</li><li>渐进式 rehash：为避免出现这种情况，使用了 rehash 方案。基本原理就是，每次用户访问时都会迁移少量数据。将整个迁移过程，平摊到所有的访问请求过程中。</li></ul><p><strong>4.排行榜</strong></p><p>积分变化时，排名要实时变更</p><p><strong>zset 数据结构 zskiplist</strong></p><ul><li>结合 dict 后，可实现通过 key 操作跳表的功能</li></ul><p><strong>5.限流</strong></p><ul><li><p>要求1秒内放行的请求为 N，超过 N 则禁止访问</p></li><li><p>Key：comment_freq_limit_1671356046</p><p>对这个 Key 调用 incr，超过限制 N 则禁止访问</p><p>1671356046 是当前时间戳</p></li></ul><p><strong>6.分布式锁</strong></p><p>并发场景：要求一次只能有一个协程执行。执行完成后，其它等待中的协程才能执行。</p><p>可以使用 Redis 的 setnx 实现，利用了两个特性</p><ul><li>Redis 是单线程执行命令</li><li>setnx 只有未设置过才能执行成功</li></ul><h3 id="3redis-使用注意事项"><a class="markdownIt-Anchor" href="#3redis-使用注意事项"></a> 3.Redis 使用注意事项</h3><h4 id="31-大-key-热-key"><a class="markdownIt-Anchor" href="#31-大-key-热-key"></a> 3.1 大 Key、热 Key</h4><p><strong>大 Key 的定义</strong></p><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:center">大 Key 标准</th></tr></thead><tbody><tr><td style="text-align:center">String 类型</td><td style="text-align:center">value 的字节数大于 10KB 即为大Key</td></tr><tr><td style="text-align:center">Hash/Set/Zset/list 等复杂数据结构类型</td><td style="text-align:center">元素个数大于5000个或总 value 字节数大于 10MB 即为大Key</td></tr></tbody></table><p><strong>大 Key 的危害</strong></p><ul><li>读取成本高</li><li>容易导致慢查询（过期、删除）</li><li>主从复制异常，服务阻塞，无法正常响应请求</li></ul><p><strong>业务侧使用大 Key 的表现</strong></p><ul><li>请求 Redis 超时报错</li></ul><p><strong>消除大 Key 的方法</strong></p><ol><li><p>拆分</p><p>将大 Key 拆分成为小 Key。例如一个 String 拆分成多个 String</p></li><li><p>压缩</p><p>将 value 压缩后写入 redis，读取时解压后再使用。压缩算法可以是 gzip、snappy、lz4 等。通常情况下，一个压缩算法压缩率高，则解压耗时就长。需要对实际数据进行测试后，选择一个合适的算法。如果存储的是 JSON 字符串，可以考虑使用 MessagePack 进行序列化。</p></li><li><p>集合类结构 hash、list、set、zset</p><ol><li>拆分：可以用 hash 取余，位掩码的方式决定放在哪个 key 中。</li><li>区分冷热：如榜单列表场景使用zset，只缓存前10页数据，后续数据走db。</li></ol></li></ol><p><strong>热 Key 的定义</strong></p><p>用户访问一个 Key 的 QPS 特别高，导致 Server 实例出现 CPU 负载突增或者不均的情况。</p><p>热 Key 没有明确的标准，QPS 超过500就有可能被识别为热 Key。</p><p><strong>解决热 Key 的方法</strong></p><ol><li><p>设置 Localcache</p><p>在访问 Redis 之前，在业务服务侧设置 Localcache，降低访问 Redis 的QPS。LocalCache 中缓存过期或未命中，则从 Redis 中将数据更新到 LocalCache。Java 的 Guava、Golang 的 Bigcache 就是这类 LocalCache。</p></li><li><p>拆分</p><p>将 key: value 这一个热 Key 复制写入多份，例如 key1: value；key2: value，访问的时候访问多个 key，但 value 是同一个，以此将qps 分散到不同实例上，降低负载。代价是更新时需要更新多个 key，存在数据短暂不一致的风险。</p></li><li><p>使用 Redis 代理的热 Key 承载能力</p><p>字节跳动团队的 Redis 访问代理就具备热 Key 承载能力。本质上是结合了“热 Key 发现”、“LocalCache”两个功能</p></li></ol><h4 id="32-慢查询场景"><a class="markdownIt-Anchor" href="#32-慢查询场景"></a> 3.2 慢查询场景</h4><p><strong>容易导致 redis 慢查询的操作</strong></p><ol><li><p>批量操作一次性传入过多的 key/value，如 mset/hmset/sadd/zadd 等 O(n) 操作</p><blockquote><p>建议单批次不要超过100，超过100之后性能下降明显。</p></blockquote></li><li><p>zset 大部分命令都是  O(log(n)) ，当大小超过5k以上时，简单的 zadd/zrem 也可能导致慢查询</p></li><li><p>操作的单个 value 过大，超过 10KB，也就是说，要避免使用大 Key</p></li><li><p>对大 Key 的 delete/expire 操作也可能导致慢查询，Redis4.0之前不支持异步删除unlink，大 Key 删除会阻塞 Redis</p></li></ol><h4 id="33-缓存穿透-缓存雪崩"><a class="markdownIt-Anchor" href="#33-缓存穿透-缓存雪崩"></a> 3.3 缓存穿透、缓存雪崩</h4><p>缓存穿透：热点数据查询绕过缓存，直接查询数据库</p><p>缓存雪崩：大量缓存同时过期</p><p><strong>缓存穿透、雪崩的危害</strong></p><ol><li><p>查询一个一定不存在的数据</p><p>通常不会缓存不存在的数据，这类查询请求都会直接打到db，如果有系统bug或人为攻击，那么容易导致db响应慢甚至宕机。</p></li><li><p>缓存过期时</p><p>在高并发场景下，一个热 key 如果过期，会有大量请求同时击穿至db，容易影响db性能和稳定。</p><p>同一时间有大量key集中过期时，也会导致大量请求落到db上，导致查询变慢，甚至出现db无法响应新的查询。</p></li></ol><p><strong>如何减少缓存穿透</strong></p><ol><li><p>缓存空值</p><p>如一个不存在的userID，这个id在缓存和数据库中都不存在，则可以缓存一个空值，下次再查询缓存直接返回空值。</p></li><li><p>布隆过滤器</p><p>通过 bloom filter 算法来存储合法 Key，得益于该算法超高的压缩率，只需占有极小的空间就能存储大量 key 值。</p></li></ol><p><strong>如何避免缓存雪崩</strong></p><ol><li><p>缓存空值</p><p>将缓存失效时间分散开，比如在原有的失效时间基础上增加一个随机值，例如不同Key过期时间，可以设置为10分1秒过期，10分23秒过期，10分8秒过期。单位秒部分就是随机时间，这样过期时间就分散了。</p><p>对于热点数据，过期时间尽量设置得长一些，冷门的数据可以相对设置过期时间短一些。</p></li><li><p>使用缓存集群，避免单机宕机造成的缓存雪崩。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7202945024749092923&quot; &gt;Redis | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对 Redis 的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="redis" scheme="https://www.entropy-tree.top/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 RDBMS</title>
    <link href="https://www.entropy-tree.top/2023/02/22/golang-day16/"/>
    <id>https://www.entropy-tree.top/2023/02/22/golang-day16/</id>
    <published>2023-02-22T15:50:50.000Z</published>
    <updated>2023-03-31T23:55:52.502Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7202607329400291385" >深入理解 RDBMS | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对 RDBMS 的学习<span id="more"></span></p><h2 id="深入理解-rdbms"><a class="markdownIt-Anchor" href="#深入理解-rdbms"></a> 深入理解 RDBMS</h2><h3 id="1经典案例"><a class="markdownIt-Anchor" href="#1经典案例"></a> 1.经典案例</h3><h4 id="11-红包雨"><a class="markdownIt-Anchor" href="#11-红包雨"></a> 1.1 红包雨</h4><p>红包的发送与接收</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动主办方&#x27;</span>;</span><br><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动用户&#x27;</span>;</span><br></pre></td></tr></table></figure></div><h4 id="12-rdbms-事务-acid"><a class="markdownIt-Anchor" href="#12-rdbms-事务-acid"></a> 1.2 RDBMS 事务 ACID</h4><ul><li><p>事务（Transaction）：是由一组 SQL 语句组成的一个程序执行单元（Unit），它需要满足 ACID 特性。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动主办方&#x27;</span>;</span><br><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动用户&#x27;</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></div><blockquote><p>两条更新操作不再是独立的，而是形成了一个整体，这个整体称为一个事务。</p></blockquote></li></ul><h4 id="13-acid"><a class="markdownIt-Anchor" href="#13-acid"></a> 1.3 ACID</h4><ul><li>原子性（Atomicity）：事务是一个不可再分割的工作单元，事务中的操作要么都发生，要么都不发生。</li><li>一致性（Consistency）：数据库事务不能破坏关系数据的完整性以及业务逻辑上的一致性。</li><li>隔离性（Isolation）：多个事务并发访问时，事务之间是隔离的，一个事务不应该影响其它事务运行效果。</li><li>持久性（Durability）：在事务完成以后，该事务对数据库所作的更改便持久的保存在数据库之中，无法被回滚。</li></ul><h4 id="14-红包雨-与-acid"><a class="markdownIt-Anchor" href="#14-红包雨-与-acid"></a> 1.4 红包雨 与 ACID</h4><ul><li><p>Case 1：活动主办方扣款发送红包，但是服务器挂了，活动用户未能收到红包…</p><p>原子性 Atomicity：两个操作要么同时成功，要么同时失败，不存在中间状态。</p></li><li><p>Case 2：活动主办方账户只有 0.5 个亿，但是扣减 1 个亿的操作成功了…</p><p>一致性Consistency：每个操作都必须是合法的，账户信息应该从一个有效的状态变为另一个有效的状态。</p></li><li><p>Case 3：用户参加了多个红包活动各自获得了一个亿，两个转账同时进行，假设都是从零开始更新用户的账户余额，最终用户只得到了一个亿…</p><p>隔离性Isolation：两个操作在对同一个账户并发进行操作时，应该是相互不影响的，表现为串行操作。</p></li><li><p>Case 4：红包收发成功后，但是还没写到磁盘上，服务器就挂了…</p><p>持久性Durability：操作更新成功之后，更新的结果应该是永久性的保留下来，不会因为宕机等问题而丢失。</p></li></ul><h4 id="15-红包雨-与-高并发"><a class="markdownIt-Anchor" href="#15-红包雨-与-高并发"></a> 1.5 红包雨 与 高并发</h4><ul><li><p>Case 5：假设10亿人同时开始抢红包，每秒处理一个请求，可能需要几十年时间才能完成…</p><p>高并发 Concurrency：如果每秒能够处理1000万个请求，那么只需要几分钟。</p></li></ul><h4 id="16-红包雨-与-高可靠"><a class="markdownIt-Anchor" href="#16-红包雨-与-高可靠"></a> 1.6 红包雨 与 高可靠</h4><ul><li><p>Case 6：在用户群体最活跃的时间段，服务器挂了，花费了大量时间修复，等修复好了用户都走了，口碑变差…</p><p>高可靠、高可用 High Reliability/Availability</p></li></ul><h3 id="2发展历史"><a class="markdownIt-Anchor" href="#2发展历史"></a> 2.发展历史</h3><h4 id="21-前-dbms-时代-人工管理"><a class="markdownIt-Anchor" href="#21-前-dbms-时代-人工管理"></a> 2.1 前 DBMS 时代 — 人工管理</h4><p>在现代计算机发明出来以前，通过人工的方式进行数据记录和管理</p><ul><li>结绳记事、清代钱庄账本、1890年人口普查的霍列瑞斯式打孔机</li><li>效率太低</li></ul><h4 id="22-前-dbms-时代-文件系统"><a class="markdownIt-Anchor" href="#22-前-dbms-时代-文件系统"></a> 2.2 前 DBMS 时代 — 文件系统</h4><p>1950年，现代计算机的雏形基本出现。1956年 IBM 发布了第一个磁盘驱动器 —— Model 305 RAMAC，从此数据存储进入了磁盘时代。在这个阶段，数据管理直接通过文件系统来实现。</p><blockquote><p>从写到纸上变成了写到文件里，换了个马甲。</p></blockquote><h4 id="23-dbms-时代"><a class="markdownIt-Anchor" href="#23-dbms-时代"></a> 2.3 DBMS 时代</h4><p>1960年，传统的文件系统已经不能满足人们的需要，数据库管理系统（DBMS）应运而生。</p><p>DBMS：按照某种数据模型来组织、存储和管理数据的仓库。</p><p>通常按照数据模型的特点将传统数据库系统分为网状数据库、层次数据库和关系数据库三类。</p><blockquote><p>传统的文件系统难以应对数据增长的挑战,也无法满足多用户共享数据和快速检索数据的需求。</p><p>层次型、网状型和关系型数据库划分的原则是数据之间的联系方式。</p><p>层次数据库是按记录来存取数据的；</p><p>网状数据库是采用网状原理和方法来存储数据；</p><p>关系型数据库是以行和列的形式存储数据。</p></blockquote><h5 id="231-dbms-数据模型-网状模型"><a class="markdownIt-Anchor" href="#231-dbms-数据模型-网状模型"></a> 2.3.1 DBMS 数据模型 — 网状模型</h5><p>网状数据库所基于的网状数据模型建立的数据之间的联系，能反映现实世界中信息的关系，是许多空间对象的自然表达形式。</p><p>1964年，世界上第一个数据库系统——集成数据存储（Integrated Data Storage，IDS）诞生于通用电气公司。IDS是世界上第一个网状数据库，奠定了数据库发展的基础，在当时得到了广泛的应用。</p><p>在1970年，网状数据库系统十分流行，在数据库系统产品中占据主导地位。</p><blockquote><p>网状数据模型是以记录类型为结点的网络结构，即一个结点可以有一个或多个下级结点，也可以有一个或多个上级结点，两个结点之间甚至可以有多种联系，例如“教师”与“课程”两个记录类型，可以有“任课”和“辅导”两种联系，称之为复合链。</p><p>两个记录类型之间的值可以是多对多的联系，例如一门课程被多个学生修读，一个学生选修多门课程。</p></blockquote><h5 id="232-dbms-数据模型-层次模型"><a class="markdownIt-Anchor" href="#232-dbms-数据模型-层次模型"></a> 2.3.2 DBMS 数据模型 — 层次模型</h5><p>1968年，世界上第一个层次数据库——信息管理系统（Information Management System，IMS）诞生于 IBM 公司，这也是世界上第一个大型商用的数据库系统。层次数据模型，即使用树形结构来描述实体及其相互关系的数据模型。</p><blockquote><p>层次数据库就是树结构。每棵树都有且仅有一个根节点，其余的节点都是非根节点。每个节点表示一个记录类型对应与实体的概念，记录类型的各个字段对应实体的各个属性。各个记录类型及其字段都必须记录。</p></blockquote><h5 id="233-dbms-数据模型-关系模型"><a class="markdownIt-Anchor" href="#233-dbms-数据模型-关系模型"></a> 2.3.3 DBMS 数据模型 — 关系模型</h5><p>1970年，IBM 的研究员 E.F.Codd 博士发表了一篇名为 “<a class="link"   href="https://www.seas.upenn.edu/~zives/03f/cis550/codd.pdf" >A Relational Model of Data for  Large Shared Data Banks <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>” 的论文，提出了关系模型的概念，奠定了关系模型的理论基础。1970年 Oracle 首次将关系型数据库商业化，后续 DB2，SAP Sysbase ASE，and Informix 等知名数据库产品也纷纷面世。</p><blockquote><p>使用表格表示实体和实体之间关系的数据模型称之为关系数据模型。</p><p>关系数据模型中，无论是是实体、还是实体之间的联系都被映射成统一的关系，一张二维表。</p><p>在关系模型中，操作的对象和结果都是一张二维表，它由行和列组成； 关系型数据库可用于表示实体之间的多对多的关系，只是此时要借助第三个关系—表，来实现多对多的关系。</p></blockquote><h4 id="24-dbms-数据模型"><a class="markdownIt-Anchor" href="#24-dbms-数据模型"></a> 2.4 DBMS 数据模型</h4><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">网状模型</th><th style="text-align:center">层次模型</th><th style="text-align:center">关系模型</th></tr></thead><tbody><tr><td style="text-align:center">优势</td><td style="text-align:center">能直接描述现实世界，存取效率高</td><td style="text-align:center">结构简单，查询效率高，可以提供较好的完整性支持</td><td style="text-align:center">实体及实体间的联系都通过二维结构表示，可以很方便地表示 M:N 关系，数据访问路径对用户透明</td></tr><tr><td style="text-align:center">劣势</td><td style="text-align:center">结构复杂，用户不易使用，访问程序设计复杂</td><td style="text-align:center">无法表示 M:N 的关系，插入、删除限制多，遍历子节点必须经过父节点，访问程序设计复杂</td><td style="text-align:center">关联查询效率不够高，关系必须规范化</td></tr></tbody></table><blockquote><p>1974年ACM牵头组织了一次研讨会，会上开展了一场分别以Codd和Bachman为首的支持和反对关系数据库两派之间的辩论。这次著名的辩论推动了关系数据库的发展，使其最终成为现代数据库产品的主流。</p></blockquote><h4 id="25-sql-语言"><a class="markdownIt-Anchor" href="#25-sql-语言"></a> 2.5 SQL 语言</h4><p>1974年 IBM 的 Ray Boyce 和 Don Chamberlin 将 Codd 关系数据库的12条准则的数学定义以简单的关键字语法表现出来，里程碑式地提出了 SQL（Structured Query Language）语言。</p><ul><li>语法风格接近自然语言</li><li>高度非过程化</li><li>面向集合的操作方式</li><li>语言简洁，易学易用</li></ul><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动主办方&#x27;</span>;</span><br></pre></td></tr></table></figure></div><p>上面这条 SQL 语句执行的流程</p><ol><li>Find account_table</li><li>Search accunt_tabke and compare name to ‘活动主办方’</li><li>Calculate balance - ‘红包’</li><li>Write new balance to account_table</li></ol><blockquote><p>高度非过程化</p><p>非关系数据模型的数据操纵语言是面向过程的语言，用其完成用户请求时，必须指定存取路径。而用SQL进行数据操作，用户只需提出“做什么”，而不必指明“怎么做”，因此用户无须了解存取路径，存取路径的选择以及SQL语句的操作过程由系统自动完成。这不但大大减轻了用户负担，而且有利于提高数据独立性。</p><p>面向集合的操作方式</p><p>SQL采用集合操作方式，不仅查找结果可以是元组的集合，而且一次插入、删除、更新操作的对象也可以是元组的集合。</p><p>语言简洁，易学易用</p><p>SQL功能极强，但由于设计巧妙，语言十分简洁，完成数据定义、数据操纵、数据控制的核心功能只用了9个动词: CREATE、 ALTER、DROP、 SELECT、 INSERT、 UPDATE、 DELETE、GRANT、 REVOKE。且SQL语言语法简单，接近英语口语，因此容易学习，也容易使用。</p></blockquote><h3 id="3关键技术"><a class="markdownIt-Anchor" href="#3关键技术"></a> 3.关键技术</h3><h4 id="31-一条-sql-的一生"><a class="markdownIt-Anchor" href="#31-一条-sql-的一生"></a> 3.1 一条 SQL 的一生</h4><ul><li>SQL引擎<ul><li>查询解析：SQL 语言接近自然语言，入门容易。但是各种关键字、操作符组合起来，可以表达丰富的语意。因此想要处理SQL命令，首先将文本解析成结构化数据，也就是抽象语法树 （AST）。</li><li>查询优化：SQL 是一门表意的语言，只是说『要做什么』，而不说『怎么做』。所以需要一些复杂的逻辑选择『如何拿数据』，也就是选择一个好的查询计划。优化器的作用根据AST优化产生最优执行计划（Plan Tree）。</li><li>查询执行：根据查询计划，完成数据读取、处理、写入等操作。</li></ul></li><li>事务引擎：处理事务一致性、并发、读写隔离等</li><li>存储引擎：内存中的数据缓存区、数据文件、日志文件</li></ul><h4 id="32-sql-引擎"><a class="markdownIt-Anchor" href="#32-sql-引擎"></a> 3.2 SQL 引擎</h4><h5 id="解析器-parser"><a class="markdownIt-Anchor" href="#解析器-parser"></a> 解析器 Parser</h5><p>解析器（Parser）一般分为词法分析（Lexical analysis）、语法分析（Syntax analysis）、语义分析（Semantic analyzer）等步骤。</p><blockquote><p>所有的代码在执行之前，都存在一个解析编译的过程，差异点无非在于是静态解析编译还是动态的。</p><p>SQL语言也类似，在SQL查询执行前的第一步就是查询解析。</p><p>词法分析：将一条SQL语句对应的字符串分割为一个个token，这些token可以简单分类。</p><p>语法分析：把词法分析的结果转为语法树。根据tocken序列匹配不同的语法规则，比如这里匹配的是update语法规则，类似的还有insert、delete、select、create、drop等等语法规则。根据语法规则匹配SQL语句中的关键字，最终输出一个结构化的数据结构。</p><p>语义分析：对语法树中的信息进行合法性校验。</p></blockquote><h5 id="优化器-optimizer"><a class="markdownIt-Anchor" href="#优化器-optimizer"></a> 优化器 Optimizer</h5><p><strong>基于规则的优化（RBO Rule Optimizer）</strong></p><blockquote><p>比如导航地图哪条路线红绿灯最少就选择哪条。</p></blockquote><ul><li><p>条件化简</p><p>例如</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a<span class="operator">=</span><span class="number">5</span> <span class="keyword">and</span> b<span class="operator">&gt;</span>a</span><br><span class="line">a<span class="operator">&gt;</span><span class="number">5</span> <span class="keyword">and</span> a <span class="operator">&lt;</span> b <span class="keyword">and</span> b<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>可分别化简为</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a<span class="operator">=</span><span class="number">5</span> <span class="keyword">and</span> b<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure></div></li><li><p>表连接优化：总是小表先进行连接</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A,B,C <span class="keyword">where</span> A.a1 <span class="operator">=</span> B.b1 <span class="keyword">and</span> A.a1 <span class="operator">=</span> C.b1</span><br></pre></td></tr></table></figure></div></li><li><p>Scan 优化</p><ul><li>唯一索引</li><li>普通索引</li><li>全表扫描</li></ul></li></ul><p>数据库索引：是数据库中辅助数据结构，以协助快速查询、更新数据库表中数据。目前数据库中最常用的索引是通过 B+树 实现的。</p><p><strong>基于代价的优化（CBO Cost Base Optimizer）</strong></p><p>一个查询有多种执行方案，CBO 会选择其中代价最低的方案去真正的执行。</p><blockquote><p>什么是代价？</p><p>到达一个目的地，有不同的路线，选择不同的路线有不同的代价。这里的代价可能是时间，也可能是路程。比如赶时间的时候，就会选择时间最短的。如果时间没那么赶，那么我们可能选择路程最短的。</p><p>对于数据库也是这样，一个查询有不同的执行方案。</p><p>那对于数据库而言，什么是一条SQL执行的代价呢？</p><p>其实，对于用户只能感知到查询时间这个代价，底层用了多少资源他是不在乎的。但是在并发的情况下，就得考虑资源消耗了，这个用户的查询占用的资源多了，其他用户的资源就少了。所以资源也是必须考虑的一点。</p><p>对于 InnoDB 存储引擎来说，全表扫描的意思就是把聚簇索引中的记录都依次和给定的搜索条件做一下比较，把符合搜索条件的记录加入到结果集，所以需要将聚簇索引对应的页面加载到内存中，然后再检测记录是否符合搜索条件。</p><p>对于使用二级索引 + 回表方式的查询，涉及 MySQL 的大数计算这种查询的成本依赖两个方面的数据：范围区间数量，需要回表数据量</p></blockquote><h5 id="执行器-executor"><a class="markdownIt-Anchor" href="#执行器-executor"></a> 执行器 Executor</h5><p><strong>火山模型</strong></p><ul><li><p>每个 Operator 调用 Next 操作，访问下层 Operator，获得下层 Operator 返回的一行数据，经过计算之后，将这行数据返回给上层。</p></li><li><p>优点：每个算子之间独立抽象实现，相互之间没有耦合，逻辑结构简单。</p></li><li><p>缺点：每计算一条数据有多次函数调用开销，导致 CPU 效率不高。</p></li><li><p>以 Plan Tree 为基础，调用关系是由根到叶，数据流是从叶到根。</p></li></ul><p><strong>向量化</strong></p><ul><li>每个 Operator 每次操作计算的不再是一行数据，而是一批数据（Batch N行数据），计算完成后向上层算子返回一个 Batch。</li><li>优点<ul><li>函数调用次数降低为 1/N</li><li>CPU cache 命中率更高</li><li>可以利用 CPU 提供的 SIMD（Single Instruction Multi Data）机制</li></ul></li><li>向量化执行更适合于大批量数据处理，对于很多单行数据处理并没有优势。而且往往搭配列式存储使用。</li></ul><p><strong>编译执行</strong></p><ul><li><p>将所以的操作封装到一个函数里面，函数的调用的代价也能大幅度降低。</p></li><li><p>一个问题：用户编写的 SQL 各式各样，如何对每一条 SQL 语句封装？</p><p>使用 LLVM 动态编译执行技术</p><blockquote><p>代码生成之后数据库运行时仍然是一个 for 循环，只不过这个循环内部的代码从简单的一个虚函数调用plan.next()展开成了一系列具体的运算逻辑，这样数据就不用在各个 operator 之间进行传递，而且有些数据还可以直接被存放在寄存器中，进一步提升系统性能。整个操作有点像inline 函数，把所有的操作inline到一个函数中去。</p><p>LLVM动态编译执行技术，根据优化器产生的计划，动态的生成执行代码。</p></blockquote></li></ul><h4 id="33-存储引擎"><a class="markdownIt-Anchor" href="#33-存储引擎"></a> 3.3 存储引擎</h4><h5 id="innodb"><a class="markdownIt-Anchor" href="#innodb"></a> InnoDB</h5><p>In-Memory</p><ul><li>Buffer Pool</li><li>Change Buffer</li><li>Adaptive Hash Index</li><li>Log Buffer</li></ul><p>On-Disk</p><ul><li>System Tablespace(ibdata1)</li><li>General Tablespaces(xxx.ibd)</li><li>Undo Tablespaces(xxx.ibu)</li><li>Temporary Tablespaces(xxx.ibt)</li><li>Redo Log(ib_logfileN)</li></ul><p>更多信息参考<a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/innodb-architecture.html" >https://dev.mysql.com/doc/refman/8.0/en/innodb-architecture.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="buffer-pool"><a class="markdownIt-Anchor" href="#buffer-pool"></a> Buffer Pool</h5><p>Buffer Pool 中有多个 Instance，而每个 Instance 中有多个 chunk。</p><ul><li><p>MySQL中每个chunk的大小一般为128M，每个block对应一个page，一个chunk下面有8192个block。这样可以避免内存碎片化。</p></li><li><p>分成多个instance，可以有效避免并发冲突。</p></li><li><p>Page id % instance num得到它属于哪个instance。</p></li></ul><blockquote><p>当buffer pool里的页面都被使用之后，再需要换存其他页面怎么办？淘汰已有的页面。</p><p>基于什么规则淘汰？淘汰那个最近一段时间最少被访问过的缓存页，这种思想就是典型的 LRU 算法。</p><p>普通的LRU算法存在缺陷，考虑到需要扫描100GB的表，而buffer pool只有1GB，这样就会因为全表扫描的数据量大，需要淘汰的缓存页多，导致在淘汰的过程中，极有可能将需要频繁使用到的缓存页给淘汰了，而放进来的新数据却是使用频率很低的数据。</p><p>MySQL 没有直接使用 LRU 算法，而是在 LRU 算法上进行了优化。</p><p>MySQL 的优化思路就是：对数据进行冷热分离，将 LRU 链表分成两部分，一部分用来存放冷数据，也就是刚从磁盘读进来的数据，另一部分用来存放热点数据，也就是经常被访问到数据。</p><p>当从磁盘读取数据页后，会先将数据页存放到 LRU 链表冷数据区的头部，如果这些缓存页在 1 秒之后被访问，那么就将缓存页移动到热数据区的头部；如果是 1 秒之内被访问，则不会移动，缓存页仍然处于冷数据区中。</p><p>淘汰时，首先淘汰冷数据区。</p></blockquote><p>更多信息参考<a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html" >https://dev.mysql.com/doc/refman/8.0/en/innodb-buffer-pool.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="page"><a class="markdownIt-Anchor" href="#page"></a> Page</h5><table><thead><tr><th style="text-align:center">变长字段列表</th><th style="text-align:center">NULL 值标志位</th><th style="text-align:center">Header</th><th style="text-align:center">row_id</th><th style="text-align:center">trx_id</th><th style="text-align:center">roll_ptr</th><th style="text-align:center">Col1</th><th style="text-align:center">Col2</th><th>Col3</th><th style="text-align:center">…</th><th style="text-align:center">ColN</th></tr></thead></table><p>Header</p><ul><li>delete_mask：标识此条数据是否被删除。</li><li>next_record：下一条数据的位置。</li><li>record_type：表示当前记录的类型。</li></ul><table><thead><tr><th style="text-align:center">Page Header(120B)</th></tr></thead><tbody><tr><td style="text-align:center">User Records</td></tr><tr><td style="text-align:center">Free Space</td></tr><tr><td style="text-align:center">Page Directory</td></tr><tr><td style="text-align:center">FIL Trailer(8B)</td></tr></tbody></table><p>其中 User Records 在页面上实际是无序的，通过一个单向链表连接。</p><h5 id="b-tree"><a class="markdownIt-Anchor" href="#b-tree"></a> B+ Tree</h5><ul><li><p>页面内</p><p>页目录中使用二分法快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录。</p></li><li><p>从根到叶：中间节点存储</p></li><li><p>点查</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2000</span>;</span><br></pre></td></tr></table></figure></div></li><li><p>范围查询</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">2000</span>;</span><br></pre></td></tr></table></figure></div></li></ul><h4 id="34-事务引擎"><a class="markdownIt-Anchor" href="#34-事务引擎"></a> 3.4 事务引擎</h4><h5 id="atomicity-与-undo-log"><a class="markdownIt-Anchor" href="#atomicity-与-undo-log"></a> Atomicity 与 Undo Log</h5><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动主办方&#x27;</span>;</span><br><span class="line"><span class="keyword">update</span> account_table <span class="keyword">set</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="string">&#x27;红包&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;活动用户&#x27;</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></div><p>如何将数据库回退到修改之前的状态？</p><p>使用 Undo Log。</p><p>Undo Log 是逻辑日志，记录的是数据的增量变化。利用 Undo Log 可以进行事务回滚，从而保证事务的原子性。同时也实现了多版本并发控制（MVCC），解决读写冲突和一致性读的问题。</p><p>在执行以下 SQL 语句中，Undo 也会生成相反操作的 SQL 语句。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(id,name)<span class="keyword">value</span>(<span class="number">1</span>,cat);</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>; # undo</span><br><span class="line"><span class="keyword">update</span> users <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;dog&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">update</span> users <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;cat&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>; # undo</span><br></pre></td></tr></table></figure></div><blockquote><p>原子性：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被恢复（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。</p><p>需要记录数据修改前的状态，一边在事务失败时进行回滚。</p><p>undo log是逻辑日志，记录的是数据的增量变化，它的作用是保证事务的原子性和事务并发控制。可以用于事务回滚，以及提供多版本机制（MVCC），解决读写冲突和一致性读的问题。</p></blockquote><h5 id="isolation-与-锁"><a class="markdownIt-Anchor" href="#isolation-与-锁"></a> Isolation 与 锁</h5><p>Isolation（隔离性）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。</p><p>如果多个并发事务访问同一行记录，就需要锁机制来保证了。</p><p>读写是否冲突？读写互不阻塞，MVCC机制。</p><h5 id="isolation-与-mvcc"><a class="markdownIt-Anchor" href="#isolation-与-mvcc"></a> Isolation 与 MVCC</h5><p>MVCC 的意义</p><ul><li>读写互不阻塞</li><li>降低死锁概率</li><li>实现一致性读</li></ul><p>Undo Log 在 MVCC 中的作用</p><ul><li>每个事务都有一个单增的事务 ID</li><li>数据页的行记录中包含了 DB_ROW_ID，DB_TRX_ID，DB_ROLL_PTR</li><li>DB_ROLL_PTR 将数据行的所有快照记录都通过链表的结构串联了起来</li></ul><blockquote><p>脏读：事务还没提交之前，它对数据做的修改，不应该被其他人看到。</p></blockquote><h5 id="durability-与-redo-log"><a class="markdownIt-Anchor" href="#durability-与-redo-log"></a> Durability 与 Redo Log</h5><p>如何保证事务结束后，对数据的修改永久的保存？</p><p>方案一：事务提交前页面写盘，会导致随机 IO 写放大。</p><p>方案二：WAL（Write-ahead logging）</p><p>redo log 是物理日志，记录的是页面的变化，它的作用是保证事务持久化。如果数据写入磁盘前发生故障，重启 MySQL 后会根据 redo log 重做。</p><blockquote><p>持久化：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p><p>WAL：修改并不直接写入到数据库文件中，而是写入到另外一个称为 WAL 的文件中；如果事务失败，WAL 中的记录会被忽略，撤销修改；如果事务成功，它将在随后的某个时间被写回到数据库文件中，提交修改。 优点：</p><ul><li><p>只记录增量变化，没有写放大</p></li><li><p>Append only，没有随机IO</p></li></ul></blockquote><h3 id="4企业实践"><a class="markdownIt-Anchor" href="#4企业实践"></a> 4.企业实践</h3><h4 id="41-红包雨挑战"><a class="markdownIt-Anchor" href="#41-红包雨挑战"></a> 4.1 红包雨挑战</h4><p><strong>情景模拟</strong></p><p>活动统计</p><ul><li>共计发放红包20亿元</li><li>总计发放卡券24亿张</li><li>节日红包补贴12.9亿</li></ul><p>流量统计</p><ul><li>活动钱包：400w/s</li><li>发红包：300w/s</li><li>发奖券：400w/s</li></ul><p>流量大、流量突增、稳定性</p><h4 id="42-大流量-sharding"><a class="markdownIt-Anchor" href="#42-大流量-sharding"></a> 4.2 大流量 — Sharding</h4><p>问题背景</p><ul><li>单节点写容易成为瓶颈</li><li>单机数据容量上限不够</li></ul><p>解决方案</p><ul><li>业务数据进行水平拆分</li><li>代理层进行分片路由</li></ul><p>实施效果</p><ul><li>数据库写入性能线性扩展</li><li>数据库容量线性扩展</li></ul><p>当数据库中的数据量越来越大时，不论是读还是写，压力都会变得越来越大。虽然上面的方案可以扩展读节点，但是对于写流量增加，以及数据量的增加却没有办法。</p><h4 id="43-流量突增-扩容"><a class="markdownIt-Anchor" href="#43-流量突增-扩容"></a> 4.3 流量突增 — 扩容</h4><p>问题背景</p><ul><li>活动流量上涨</li><li>集群性能不满足要求</li></ul><p>解决方案</p><ul><li>扩容 DB 物理节点数量</li><li>利用影子表进行压测</li></ul><p>实施效果</p><ul><li>数据库集群提供更高的吞吐</li><li>保证集群可以承担预期流量</li></ul><h4 id="44-流量突增-代理连接池"><a class="markdownIt-Anchor" href="#44-流量突增-代理连接池"></a> 4.4 流量突增 — 代理连接池</h4><p>问题背景</p><ul><li>突增流量导致大量建联</li><li>大量建联导致负载变大，延时上升</li></ul><p>解决方案</p><ul><li>业务侧预热连接池</li><li>代理侧预热连接池</li><li>代理侧支持连接队列</li></ul><p>实施效果</p><ul><li>避免 DB 因突增流量挂掉</li><li>避免代理和 DB 因大量建联挂掉</li></ul><h4 id="45-稳定性和可靠性"><a class="markdownIt-Anchor" href="#45-稳定性和可靠性"></a> 4.5 稳定性和可靠性</h4><blockquote><p>为什么要高可用？</p><p>恶意事故：<s>程序员删库跑路</s></p><p>偶然事故：一个机房断电、断网， 某施工队施工的时候挖掘机把某游戏公司的光纤挖断了，一下午的时间，保守估计损失一个亿。</p></blockquote><h5 id="451-3az-高可用"><a class="markdownIt-Anchor" href="#451-3az-高可用"></a> 4.5.1 3AZ 高可用</h5><p><strong>三机房部署</strong></p><ul><li>机房级别容灾</li><li>机房级别流量调度</li></ul><p><strong>proxy</strong></p><ul><li>读写分离，分库分表</li><li>限流，流量调度</li></ul><p><strong>监控报警</strong></p><ul><li>实时监控集群运行状态</li><li>提前上报集群风险</li></ul><p><strong>HA</strong></p><ul><li>High</li><li>Avaliability</li><li>实时监控 DB 运行状态</li><li>宕机快速切换</li></ul><blockquote><p>BinLog：binlog是mysql用来记录数据库表结构变更以及表数据修改的的二进制日志，它只会记录表的变更操作，但不会记录select和show这种查询操作。</p><p>数据恢复：误删数据之后可以通过mysqlbinlog工具恢复数据</p><p>主从复制：主库将binlog传给从库，从库接收到之后读取内容写入从库，实现主库和从库数据一致性</p><p>审计：可以通过二进制日志中的信息进行审计，判断是否对数据库进行注入攻击</p></blockquote><h5 id="452-ha-管理"><a class="markdownIt-Anchor" href="#452-ha-管理"></a> 4.5.2 HA 管理</h5><p>问题背景</p><ul><li>DB 所在机器异常宕机</li><li>DB 节点异常宕机</li></ul><p>解决方案</p><ul><li>HA 服务监管、切换宕机节点</li><li>代理支持配置热加载</li><li>代理自动屏蔽宕机读节点</li></ul><p>实施效果</p><ul><li>读节点宕机秒级恢复</li><li>写节点宕机 30s 内恢复</li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/219516250" >SQL 优化之火山模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://dev.mysql.com/doc/refman/8.0/en/innodb-architecture.html" >Innodb 存储引擎 | MySQL 官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7202607329400291385&quot; &gt;深入理解 RDBMS | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对 RDBMS 的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="RDBMS" scheme="https://www.entropy-tree.top/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>存储的本质 - 状态</title>
    <link href="https://www.entropy-tree.top/2023/02/22/golang-day15/"/>
    <id>https://www.entropy-tree.top/2023/02/22/golang-day15/</id>
    <published>2023-02-22T14:19:04.000Z</published>
    <updated>2023-03-31T23:55:52.502Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7199279293755146297" >存储的本质 - 状态 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对存储的学习<span id="more"></span></p><h2 id="存储的本质-状态"><a class="markdownIt-Anchor" href="#存储的本质-状态"></a> 存储的本质 - 状态</h2><h3 id="1经典案例"><a class="markdownIt-Anchor" href="#1经典案例"></a> 1.经典案例</h3><ul><li>数据的产生：注册账号等</li><li>数据的流动：从客户端到后端服务器，后端服务器到数据库，再到其他系统</li><li>数据的持久化：校验数据的合法性，修改内存，写入存储介质</li><li>潜在的问题<ul><li>数据库如何保证数据不丢失</li><li>数据库如何支持多人同时修改</li><li>其他的存储系统</li><li>如何处理除结构化数据以外的数据</li><li>操作数据库的方式，使用什么编程语言</li></ul></li></ul><h3 id="2存储和数据库简介"><a class="markdownIt-Anchor" href="#2存储和数据库简介"></a> 2.存储和数据库简介</h3><h4 id="21-存储系统"><a class="markdownIt-Anchor" href="#21-存储系统"></a> 2.1 存储系统</h4><h5 id="系统概览"><a class="markdownIt-Anchor" href="#系统概览"></a> 系统概览</h5><p>什么是存储系统？</p><p>一个提供了读写、控制类接口，能够安全有效地把数据持久化的软件，就可以称为存储系统。</p><p>存储系统的特征</p><ul><li>作为后端软件的底座，性能敏感</li><li>存储系统软件架构，容易受硬件影响</li><li>存储系统代码，既“简单”又“复杂”</li></ul><h5 id="存储器层级结构"><a class="markdownIt-Anchor" href="#存储器层级结构"></a> 存储器层级结构</h5><p>参考<a class="link"   href="https://www.cnblogs.com/RadiumGalaxy/p/17122372.html" >https://www.cnblogs.com/RadiumGalaxy/p/17122372.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="数据从应用到存储介质"><a class="markdownIt-Anchor" href="#数据从应用到存储介质"></a> 数据从应用到存储介质</h5><ul><li>缓存：很重要，贯穿整个存储体系</li><li>拷贝：很昂贵，应该尽量减少</li><li>硬件设备多种多样，需要有抽象统一的接入层</li></ul><h5 id="raid-技术"><a class="markdownIt-Anchor" href="#raid-技术"></a> RAID 技术</h5><p>单机存储系统如何做到高性能、高性价比、高可靠性？</p><p><strong>R</strong>edundant <strong>A</strong>rray of <strong>I</strong>nexpensive <strong>D</strong>isks</p><p>RAID 出现的背景</p><ul><li>单块大容量磁盘的价格 &gt; 多块小容量磁盘</li><li>单块磁盘的写入性能 &lt; 多块磁盘的并发写入性能</li><li>单块磁盘的容错能力有限，不够安全</li></ul><p>RAID 0</p><ul><li>多块磁盘简单组合</li><li>数据条带化存储，提高磁盘带宽</li><li>没有额外的容错设计</li></ul><p>RAID 1</p><ul><li>一块磁盘对应一块额外镜像盘</li><li>真实空间利用率仅 50%</li><li>容错能力强</li></ul><p>RAID 0 + 1</p><ul><li>结合了 RAID 0 和 RAID 1</li><li>真实空间利用率仅 50%</li><li>容错能力强，写入带宽好</li></ul><h4 id="22-数据库"><a class="markdownIt-Anchor" href="#22-数据库"></a> 2.2 数据库</h4><p>关系型数据库和非关系型数据库</p><h5 id="概览"><a class="markdownIt-Anchor" href="#概览"></a> 概览</h5><p>关系（Relation）</p><ul><li>Edgar.F.Codd 于1970 年提出“关系模型”</li><li>关系 = 集合 = 任意元素组成的若干有序偶对，反映了事物之间的关系</li><li>关系代数 = 对关系作运算的抽象查询语言，如交、并、笛卡儿积等</li><li>SQL = 一种 DSL = 方便人类阅读的关系代数表达形式</li></ul><h5 id="关系型数据库特点"><a class="markdownIt-Anchor" href="#关系型数据库特点"></a> 关系型数据库特点</h5><p>关系型数据库是存储系统，但是在存储系统之外，又发展出其他功能</p><ul><li>结构化数据友好</li><li>支持事务（ACID）</li><li>支持复杂查询语句</li></ul><h5 id="非关系型数据库特点"><a class="markdownIt-Anchor" href="#非关系型数据库特点"></a> 非关系型数据库特点</h5><p>非关系型数据库也是存储系统，但是一般不要求严格的结构化</p><ul><li>半结构化数据友好</li><li>可能支持事务（ACID）</li><li>可能支持复杂查询语句</li></ul><h4 id="23-数据库-vs-经典存储"><a class="markdownIt-Anchor" href="#23-数据库-vs-经典存储"></a> 2.3 数据库 vs 经典存储</h4><h5 id="结构化数据管理"><a class="markdownIt-Anchor" href="#结构化数据管理"></a> 结构化数据管理</h5><ul><li>写入关系型数据库，以表形式管理</li><li>写入文件，自行定义管理结构</li></ul><h5 id="事务能力"><a class="markdownIt-Anchor" href="#事务能力"></a> 事务能力</h5><p>数据库具有支持事务的优越性，事务具有</p><ul><li>Atomicity： 事务内的操作要么全部执行，要么全部不执行</li><li>Consistency：事务执行前后，数据状态是一致的</li><li>Isolation：可以隔离多个并发事务，避免影响</li><li>Durability：事务一旦提交成功，数据保证持久性</li></ul><h5 id="复杂查询能力"><a class="markdownIt-Anchor" href="#复杂查询能力"></a> 复杂查询能力</h5><p>写入数据后进行很复杂的查询</p><ul><li>数据库查询灵活、简洁</li><li>文件查询僵化、复杂</li></ul><h4 id="24-数据库使用方式"><a class="markdownIt-Anchor" href="#24-数据库使用方式"></a> 2.4 数据库使用方式</h4><p>Everything is Domain Specific Language，maybe SQL</p><p>SQL 操作数据：Insert、Update、Select、Delete、Where子句、Group by、Order by</p><p>SQL 定义数据：Create、Alter …</p><h3 id="主流产品剖析"><a class="markdownIt-Anchor" href="#主流产品剖析"></a> 主流产品剖析</h3><h4 id="31-单机存储"><a class="markdownIt-Anchor" href="#31-单机存储"></a> 3.1 单机存储</h4><h5 id="概览-2"><a class="markdownIt-Anchor" href="#概览-2"></a> 概览</h5><p>单机存储 = 单个计算机节点上的存储软件系统，一般不涉及网络交互</p><p>有本地文件系统和 key-value 存储</p><h5 id="本地文件系统"><a class="markdownIt-Anchor" href="#本地文件系统"></a> 本地文件系统</h5><p>Linux 经典哲学：一切皆文件</p><p>文件系统的管理单元：文件</p><p>文件系统接口：文件系统繁多，如 ext2/3/4，sysfs，rootfs 等，但都遵循 VFS 的统一抽象接口</p><p>Linux 文件系统的两大数据结构：Index Node 和 Directory Entry</p><ul><li><p>Index Node</p><p>记录文件元数据，如 id、大小、权限、硬盘位置等。</p><p>inode 是文件的唯一标识，会被存储到磁盘上。</p><p>inode 的总数在格式化文件系统时就固定了。</p></li><li><p>Directory Entry</p><p>记录文件名、inode 指针、层级关系（parent）等。</p><p>dentry 是内存结构，与 inode 的关系是 N：1（hardlink 的实现）</p></li></ul><h5 id="key-value-存储"><a class="markdownIt-Anchor" href="#key-value-存储"></a> key-value 存储</h5><p>常见使用方式：put(k, v) 和 get(k)</p><p>常见数据结构：LSM-Tree，某种程度上牺牲读写性能，追求写入性能</p><p>典型产品：RocksDB ，更多信息参考<a class="link"   href="http://rocksdb.org.cn/" >RocksDB 中文官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="32-分布式存储"><a class="markdownIt-Anchor" href="#32-分布式存储"></a> 3.2 分布式存储</h4><h5 id="概览-3"><a class="markdownIt-Anchor" href="#概览-3"></a> 概览</h5><p>分布式存储 = 在单机存储基础上实现了分布式协议，涉及大量网络交互</p><p>有分布式文件系统和分布式对象存储</p><h5 id="hdfs"><a class="markdownIt-Anchor" href="#hdfs"></a> HDFS</h5><p>HDFS：大数据时代的基石</p><p>时代背景：专用的高级硬件很贵，同时数据存储量很大，要求超高吞吐</p><p>HDFS 核心特点</p><ul><li>支持海量数据存储</li><li>高容错性</li><li>弱 POSIX 语义</li><li>使用普通 x86 服务器，性价比高</li></ul><h5 id="ceph"><a class="markdownIt-Anchor" href="#ceph"></a> Ceph</h5><p>Ceph 核心特点</p><ul><li>一套系统支持对象接口、块接口、文件接口，但是一切皆对象</li><li>数据写入采用主备复制模型</li><li>数据分布模型采用 CRUSH 算法（HASH + 权重 + 随机抽签）</li></ul><h4 id="33-单机数据库"><a class="markdownIt-Anchor" href="#33-单机数据库"></a> 3.3 单机数据库</h4><h5 id="概览-4"><a class="markdownIt-Anchor" href="#概览-4"></a> 概览</h5><p>单机数据库 = 单个计算机节点上的数据库系统</p><p>事务在单机内执行，也可能通过网络交互实现分布式事务</p><p>有关系型数据库和非关系型数据库</p><h5 id="关系型数据库"><a class="markdownIt-Anchor" href="#关系型数据库"></a> 关系型数据库</h5><p>商业产品 Oracle 最为广泛使用，开源产品 MySQL 和 PostgreSQL 最受欢迎。</p><p>关系型数据库的通用组件</p><ul><li>Query Engine：负责解析 query，生成查询计划</li><li>Txn Manager：负责事务并发管理</li><li>Lock Manager：负责锁相关的策略</li><li>Storage Engine：负责组织内存/磁盘数据结构</li><li>Replication：负责主备同步</li></ul><p>关键内存数据结构：B-Tree、B±Tree、LRUList 等</p><p>关键磁盘数据结构：WriteAheadLog（RedoLog）、Page</p><h5 id="非关系型数据库"><a class="markdownIt-Anchor" href="#非关系型数据库"></a> 非关系型数据库</h5><p>最主流的是 MongoDB、Redis、Elasticsearch 这三个。</p><ul><li>关系型数据库一般直接使用 SQL 交互，而非关系型数据库交互方式各不相同。</li><li>非关系型数据库的数据结构多种多样，没有关系约束，schema 相对灵活。</li><li>无论是关系型数据库还是非关系型数据库，目前都在尝试支持 SQL(子集)和“事务”。</li></ul><h5 id="elasticsearch"><a class="markdownIt-Anchor" href="#elasticsearch"></a> Elasticsearch</h5><ul><li>面向文档存储</li><li>文档可序列化成 JSON，支持嵌套</li><li>存在 index，index = 文档的集合</li><li>存储和构建索引能力依赖 Lucene 引擎</li><li>实现了大量搜索数据结构和算法</li><li>支持 RESTFUL API，也支持弱 SQL 交互</li></ul><p>更多信息参考<a class="link"   href="https://elasticsearch.bookhub.tech/getting_started/" >Elasticsearch 中文文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="mongodb"><a class="markdownIt-Anchor" href="#mongodb"></a> MongoDB</h5><ul><li>面向文档存储</li><li>文档可序列化成 JSON/BSON，支持嵌套</li><li>存在 collection，collection = 文档的集合</li><li>存储和构建索引能力依赖 wiredTiger 引擎</li><li>4.0 后开始支持事务（多文档、跨分片多文档等）</li><li>常用 client/SDK 交互，可通过插件转译支持弱 SQL</li></ul><p>更多信息参考<a class="link"   href="https://docs.mongoing.com/" >MongoDB 中文文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h5><ul><li>数据结构丰富（hash 表、set、zset、list）</li><li>C 语言实现，超高性能</li><li>主要基于内存，但支持 AOF/RDB 持久化</li><li>常用 redies-cli/多语言 SDK 交互</li></ul><p>特别的，Elasticsearch 相比 RDBMS，ES 天然支持模糊搜索，还能自动算出关联程度。</p><h4 id="34-分布式数据库"><a class="markdownIt-Anchor" href="#34-分布式数据库"></a> 3.4 分布式数据库</h4><p>从单机数据库到分布式数据库，单机数据库所面对的问题和挑战，以及分布式架构的解决方案。</p><h5 id="解决容量问题"><a class="markdownIt-Anchor" href="#解决容量问题"></a> 解决容量问题</h5><ul><li>单点容量有限，受硬件条件限制</li><li>存储节点池化，动态扩缩容</li></ul><h5 id="解决弹性问题"><a class="markdownIt-Anchor" href="#解决弹性问题"></a> 解决弹性问题</h5><ul><li><p>单机扩容搬迁全量数据，耗时大，缩容 Disk 问题难以解决</p></li><li><p>通过分布式灵活扩缩容解决 CPU 资源紧张问题</p></li></ul><h5 id="解决性价比问题"><a class="markdownIt-Anchor" href="#解决性价比问题"></a> 解决性价比问题</h5><ul><li>单机写数据，容量不够，但 CPU 利用率低下</li><li>扩容到高规格单机，满足了容量需求，但 CPU 浪费更严重</li><li>通过分布式使用共享存储池，不需要扩容 CPU</li></ul><h5 id="more-to-do"><a class="markdownIt-Anchor" href="#more-to-do"></a> More to Do</h5><ul><li>单写 vs 多写</li><li>从磁盘弹性到内存弹性</li><li>分布式事务化</li></ul><h3 id="4新技术演进"><a class="markdownIt-Anchor" href="#4新技术演进"></a> 4.新技术演进</h3><h4 id="41-概览"><a class="markdownIt-Anchor" href="#41-概览"></a> 4.1 概览</h4><ul><li><p>软件架构变更</p><p>Bypass OS kernel</p></li><li><p>AI 增强</p><p>智能存储格式转换</p></li><li><p>新硬件革命</p><ul><li>存储介质变更</li><li>计算单元变更</li><li>网络硬件变更</li></ul></li></ul><h4 id="42-spdk"><a class="markdownIt-Anchor" href="#42-spdk"></a> 4.2 SPDK</h4><p>Bypass OS kernel 已经成为一种趋势</p><p>SPDK：Storage Performance Development Kit</p><p>Kernel Space —&gt; User Space</p><ul><li>避免 syscall 带来的性能损耗，直接从用户态访问磁盘</li></ul><p>中断 —&gt; 轮询</p><ul><li>磁盘性能提高后，中断次数随之上升，不利于 IO 性能</li><li>SPDK poller 可以绑定特定的 CPU 核不断轮询，减少 CS，提高性能</li></ul><p>无锁数据结构</p><ul><li>使用 Lock-free queue，降低并发时的同步开销</li></ul><h4 id="43-ai-和-storage"><a class="markdownIt-Anchor" href="#43-ai-和-storage"></a> 4.3 AI 和 Storage</h4><p>AI 领域相关技术，如 Machine Learning 在很多领域，如推荐、风控、视觉领域证明了有效性。</p><h4 id="44-高性能硬件"><a class="markdownIt-Anchor" href="#44-高性能硬件"></a> 4.4 高性能硬件</h4><h5 id="rdma-网络"><a class="markdownIt-Anchor" href="#rdma-网络"></a> RDMA 网络</h5><ul><li>传统的网络协议栈，需要基于多层网络协议处理数据包，存在用户态和内核态的切换，足够通用但性能不是最佳</li><li>RDMA 是 kernel bypass 的流派，不经过传统的网络协议栈，可以把用户态虚拟内存映射给网卡，减少拷贝开销，减少 CPU 开销</li></ul><h5 id="persistent-memory"><a class="markdownIt-Anchor" href="#persistent-memory"></a> Persistent Memory</h5><p>在 NVMe SSD 和 Main Memory 间有一种全新的存储产品：Persistent Memory</p><ul><li>IO 时延介于 SSD 和 Memory 之间，约百纳秒量级</li><li>可以用作易失性内存（memory mode），也可以用作持久化介质（app-direct）</li></ul><h5 id="可编程交换机"><a class="markdownIt-Anchor" href="#可编程交换机"></a> 可编程交换机</h5><p>P4 Switch，配有编译器、计算单元、DRAM，可以在交换机层对网络包做计算逻辑。在数据库场景下，可以实现缓存一致性协议等</p><h5 id="cpugpudpu"><a class="markdownIt-Anchor" href="#cpugpudpu"></a> CPU/GPU/DPU</h5><ul><li>CPU：从 multi-core 走向 many-core</li><li>GPU：强大的算力和越来越大的显存空间</li><li>DPU：异构计算，减轻 CPU 的workload</li></ul><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><h4 id="存储系统"><a class="markdownIt-Anchor" href="#存储系统"></a> 存储系统</h4><ul><li>块存储：存储软件栈里的底层系统，接口过于朴素</li><li>文件存储：日常使用最广泛的存储系统，接口十分友好，实现形式多种多样</li><li>对象存储：公有云上的主流产品，immutable 语义加持</li><li>key-value 存储：形式最灵活，存在大量的开源/黑盒产品</li></ul><h4 id="数据库系统"><a class="markdownIt-Anchor" href="#数据库系统"></a> 数据库系统</h4><ul><li>关系型数据库：基于关系和关系代数构建的，一般支持事务和 SQL 访问，使用体验友好的存储产品</li><li>非关系型数据库：结构灵活，访问方式灵活，针对不同场景有不同的针对性产品</li></ul><h4 id="分布式架构"><a class="markdownIt-Anchor" href="#分布式架构"></a> 分布式架构</h4><ul><li>数据分布策略：决定了数据如何分布到集群里的多个物理节点，是否均匀，是否能实现高性能</li><li>数据复制协议：影响 IO 路径的性能、机器故障场景的处理方式</li><li>分布式事务算法：多个数据库节点协同保障一个事务的 ACID 特性的算法，通常基于 2pc 的思想设计</li></ul><p>在存储和数据库领域，硬件反推软件变革十分常见</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://blog.51cto.com/quantfabric/2594168" >Kernel Bypass <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="http://rocksdb.org.cn/" >RocksDB 中文官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://elasticsearch.bookhub.tech/getting_started/" >Elasticsearch 中文文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://docs.mongoing.com/" >MongoDB 中文文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7199279293755146297&quot; &gt;存储的本质 - 状态 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对存储的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出 RPC 框架</title>
    <link href="https://www.entropy-tree.top/2023/02/10/golang-day14/"/>
    <id>https://www.entropy-tree.top/2023/02/10/golang-day14/</id>
    <published>2023-02-10T10:37:13.000Z</published>
    <updated>2023-03-31T23:55:52.497Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7198526201221660729" >深入浅出 RPC 框架 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对 RPC 框架的学习<span id="more"></span></p><h2 id="深入浅出-rpc-框架"><a class="markdownIt-Anchor" href="#深入浅出-rpc-框架"></a> 深入浅出 RPC 框架</h2><h3 id="1基本概念"><a class="markdownIt-Anchor" href="#1基本概念"></a> 1.基本概念</h3><h4 id="11-本地函数调用"><a class="markdownIt-Anchor" href="#11-本地函数调用"></a> 1.1 本地函数调用</h4><div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">2</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">3</span></span><br><span class="line">    result := calculate(a, b)</span><br><span class="line">    fmt.Println(result)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calculate</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    z := x * y</span><br><span class="line">    <span class="keyword">return</span> z</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ol><li>将 a 和 b 压栈</li><li>通过函数指针找到 calculate 函数，进入函数取出栈中的值 2 和 3，将其赋予 x 和 y</li><li>计算 x * y，并将结果存在 z 中</li><li>将 z 的值压栈，然后从 calculate 返回</li><li>从栈中取出 z 返回值，并赋值给 result</li></ol><p>以上步骤只是为了说明原理。事实上编译器经常会做优化，对于参数和返回值少的情况会直接将其存放在寄存器，而不需要压栈弹栈的过程，甚至都不需要调用call，而直接做inline操作。</p><h4 id="12-远程函数调用rpc-remote-procedure-calls"><a class="markdownIt-Anchor" href="#12-远程函数调用rpc-remote-procedure-calls"></a> 1.2 远程函数调用（RPC — Remote Procedure Calls）</h4><p>RPC 需要解决的问题</p><ol><li>函数映射</li><li>数据转换成字节流</li><li>网络传输</li></ol><p>在本地调用中，函数体是直接通过函数指针来指定的，我们调用哪个方法，编译器会自动帮我们调用它相应的函数指针。但是在远程调用中，函数指针是不行的，因为两个进程的地址空间是完全不一样的。所有函数都有自己的一个ID，在做 RPC 时需要附上这个 ID，还需要一个 ID 和函数的对照关系表，通过 ID 找到对应的函数并执行。</p><h4 id="13-rpc-概念模型"><a class="markdownIt-Anchor" href="#13-rpc-概念模型"></a> 1.3 RPC 概念模型</h4><p>1984 年 Nelson  发表的论文《Implementing Remote Procedure Calls》中提出了 RPC 的过程由 5 个模型组成，User、User-Stub、RPC-Runtime、Server-Stub、Server。</p><h4 id="14-一次rpc-的完整过程"><a class="markdownIt-Anchor" href="#14-一次rpc-的完整过程"></a> 1.4 一次RPC 的完整过程</h4><h5 id="idlinterface-description-language文件"><a class="markdownIt-Anchor" href="#idlinterface-description-language文件"></a> IDL（Interface description language）文件</h5><p>IDL 通过一种中立的方式来描述接口，使得在不同平台上运行的对象和用不同语言编写的程序可以相互通信。</p><h5 id="生成代码"><a class="markdownIt-Anchor" href="#生成代码"></a> 生成代码</h5><p>通过编译器工具把 IDL 文件转换成语言对应的静态库。</p><h5 id="编解码"><a class="markdownIt-Anchor" href="#编解码"></a> 编解码</h5><p>从内存中表示到字节序列的转换称为编码，反之称为解码，也常叫做序列化和反序列化。</p><h5 id="通信协议"><a class="markdownIt-Anchor" href="#通信协议"></a> 通信协议</h5><p>规范了数据在网络中的传输内容和格式。除必须的请求/响应数据外，通常还会包含额外的元数据</p><h5 id="网络传输"><a class="markdownIt-Anchor" href="#网络传输"></a> 网络传输</h5><p>通常是基于成熟的网络库走 TCP/UDP 传输。</p><h4 id="15-rpc-的优势"><a class="markdownIt-Anchor" href="#15-rpc-的优势"></a> 1.5 RPC 的优势</h4><ol><li>单一职责，有利于分工协作和运维开发。开发（采用不同的语言）、部署以及运维（上线独立）都是独立的。</li><li>可扩展性强，资源使用率更高。例如压力过大时可以独立扩充资源，底层基础服务可以复用，节省资源。</li><li>故障隔离，服务的整体可靠性更高。某个模块发生故障，不会影响整体的可靠性。</li></ol><h4 id="16-rpc-带来的问题"><a class="markdownIt-Anchor" href="#16-rpc-带来的问题"></a> 1.6 RPC 带来的问题</h4><ol><li>服务宕机，如何处理</li><li>在调用过程中发生网络异常，如何保证消息的可达性</li><li>请求量突增导致服务无法及时处理，有哪些应对措施</li></ol><h4 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h4><ol><li>本地函数调用和 RPC 调用的区别：函数映射、数据转换成字节流、网络传输</li><li>RPC 的概念模型：User、User-Stub、RPC-Runtime、Server-Stub、Server</li><li>一次 RPC 的完整过程，RPC 的基本概念定义</li><li>RPC 带来好处的同时也带来了不少新的问题，这些问题由 RPC 框架来解决</li></ol><h3 id="2分层设计以-apache-thrift-为例"><a class="markdownIt-Anchor" href="#2分层设计以-apache-thrift-为例"></a> 2.分层设计（以 Apache Thrift 为例）</h3><h4 id="21-apache-thrift"><a class="markdownIt-Anchor" href="#21-apache-thrift"></a> 2.1 Apache Thrift</h4><p>分为服务端 Server 和 客户端 Client</p><ul><li>Code：开发者自己编写的业务逻辑代码</li></ul><h4 id="22-编解码层"><a class="markdownIt-Anchor" href="#22-编解码层"></a> 2.2 编解码层</h4><ul><li>Service.Processor 和 read/write：通过代码生成工具把 IDL 文件 转换成不同语言对应的 lib 代码，里面封装了编解码逻辑</li><li>TProtocal：框架的编码层</li></ul><h4 id="23-编解码层-生成代码"><a class="markdownIt-Anchor" href="#23-编解码层-生成代码"></a> 2.3 编解码层 — 生成代码</h4><p>Client 和 Server 依赖同一份 IDL 文件，生成不同语言的 CodeGen。</p><h4 id="24-编解码层-数据格式"><a class="markdownIt-Anchor" href="#24-编解码层-数据格式"></a> 2.4 编解码层 — 数据格式</h4><ul><li><p>语言特定的编码格式</p><p>许多编程语言都内建了将内存对象编码为字节序列的支持，例如 Java 有 <code>java.io.Serializable</code>。</p><p>这种编码形式好处是非常方便，可以用很少的额外代码实现内存对象的保存与恢复，这类编码通常与特定的编程语言深度绑定，其他语言很难读取这种数据。如果以这类编码存储或传输数据，那就和这门语言绑定在一起。安全和兼容性也是问题。</p></li><li><p>文本格式</p><p>JSON、XML、CSV 等文本格式，具有人类可读性。</p><p>数字的编码多有歧义之处，比如 XML 和 CSV 不能区分数字和字符串。</p><p>JSON 虽然区分字符串和数字，但是不区分整数和浮点数，而且不能指定精度，处理大量数据时，这个问题更加严重；没有强制模型约束，实际操作中往往只能采用文档方式来进行约定，这可能会给调试带来一些不便。 由于JSON在一些语言中的序列化和反序列化需要采用反射机制，所以在性能方面比较差。</p></li><li><p>二进制编码</p><p>具备跨语言和高性能等优点，常见的有 Thrift 的 BinaryProtocol，Protobuf 等，实现可以有很多种，TLV 编码和 Varint 编码等。</p></li></ul><h4 id="25-编解码层-二进制编码"><a class="markdownIt-Anchor" href="#25-编解码层-二进制编码"></a> 2.5 编解码层 — 二进制编码</h4><p>TLV 编码</p><ul><li>Tag：标签，可以理解为类型</li><li>Length：长度</li><li>Value：值，Value 也可以是个 TLV 嵌套结构</li></ul><p>IDL 源代码</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">struct Person &#123;</span><br><span class="line">    1: required string userName,</span><br><span class="line">    2: optional i64         favoriteNumber,</span><br><span class="line">    3: optional list&lt;string&gt; interests </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>转换成编码，以 Thrift BinaryProtocol 为例，下面的二进制编码转换为十六进制表示，方便观察</p><p><strong>第一个字段 userName 对应的编码</strong></p><table><thead><tr><th style="text-align:center">type 11(string)</th><th style="text-align:center">field tag(1)</th><th style="text-align:center">length(6)</th><th style="text-align:center">value(Martin)</th></tr></thead><tbody><tr><td style="text-align:center">0b</td><td style="text-align:center">00 01</td><td style="text-align:center">00 00 00 06</td><td style="text-align:center">4d 61 72 69 6e</td></tr></tbody></table><p><strong>第二个字段 favoriteNumber 对应的编码</strong></p><table><thead><tr><th style="text-align:center">type 10(i64)</th><th style="text-align:center">field tag(2)</th><th style="text-align:center">value(1337)</th></tr></thead><tbody><tr><td style="text-align:center">0a</td><td style="text-align:center">00 02</td><td style="text-align:center">00 00 00 00 00 00 05 39</td></tr></tbody></table><p><strong>第三个字段 interests 对应的编码</strong></p><table><thead><tr><th style="text-align:center">type 15(list)</th><th style="text-align:center">field tag(3)</th><th style="text-align:center">item type11(string)</th><th style="text-align:center">list items(2)</th></tr></thead><tbody><tr><td style="text-align:center">0f</td><td style="text-align:center">00 03</td><td style="text-align:center">0b</td><td style="text-align:center">00 00 00 02</td></tr></tbody></table><p>假设其中有两个值 daydreaming 和 hacking，其对应的编码如下</p><table><thead><tr><th style="text-align:center">length</th><th style="text-align:center">value</th></tr></thead><tbody><tr><td style="text-align:center">00 00 00 0b</td><td style="text-align:center">64 61 79 64 72 65 61 6d 69 6e 67</td></tr><tr><td style="text-align:center">00 00 00 07</td><td style="text-align:center">68 61 63 6b 69 6e 67</td></tr></tbody></table><p>最后再用 <code>00</code> 编码作为结尾。这里打包后压缩共 59 个字节。</p><p>TLV 编码结构清晰简单，并且扩展性较好，但是由于增加了 Type 和 Length 两个冗余信息，有额外的内存开销，特别是在大部分字段都是基本类型的情况下有不小的空间浪费。</p><h4 id="26-编解码层-选型"><a class="markdownIt-Anchor" href="#26-编解码层-选型"></a> 2.6 编解码层 — 选型</h4><ul><li><p>兼容性：支持自动增加新的字段，而不会影响老的服务，这将提高系统的灵活度。</p><blockquote><p>兼容性：</p><p>移动互联时代，业务系统需求的更新周期变得更快，新的需求不断涌现，而老的系统还是需要继续维护。如果序列化协议具有良好的可扩展性，支持自动增加新的业务字段，而不影响老的服务，这将大大提供系统的灵活度。</p></blockquote></li><li><p>通用性：支持跨平台、跨语言。</p><blockquote><p>通用性有两个层面的意义：</p><p>第一、技术层面，序列化协议是否支持跨平台、跨语言。如果不支持，在技术层面上的通用性就大大降低了。</p><p>第二、流行程度，序列化和反序列化需要多方参与，很少人使用的协议往往意味着昂贵的学习成本；另一方面，流行度低的协议，往往缺乏稳定而成熟的跨语言、跨平台的公共包。</p></blockquote></li><li><p>性能：从空间和时间两个维度来考虑，即编码后数据大小和编码耗费时长。</p><blockquote><p>性能：</p><p>第一、空间开销（Verbosity）， 序列化需要在原有的数据上加上描述字段，以为反序列化解析之用。如果序列化过程引入的额外开销过高，可能会导致过大的网络，磁盘等各方面的压力。对于海量分布式存储系统，数据量往往以TB为单位，巨大的的额外空间开销意味着高昂的成本。</p><p>第二、时间开销（Complexity），复杂的序列化协议会导致较长的解析时间，这可能会使得序列化和反序列化阶段成为整个系统的瓶颈。</p></blockquote></li></ul><h4 id="27-协议层"><a class="markdownIt-Anchor" href="#27-协议层"></a> 2.7 协议层</h4><ul><li>TTransport：框架的协议层</li></ul><h4 id="28-协议层-概念"><a class="markdownIt-Anchor" href="#28-协议层-概念"></a> 2.8 协议层 — 概念</h4><p>协议是双方确定的交流语义。比如，设计一个字符串传输的协议，它允许客户端发送一个字符串，服务端接收到对应的字符串。这个协议很简单，首先发送一个4字节的消息总长度，然后再发送1字节的字符集 charset 长度，接下来就是消息的 payload，字符集名称和字符串正文。</p><ul><li><p>特殊结束符：一个特殊字符作为每个协议单元结束的标识。</p><blockquote><p>对于一个协议单元必须要全部读入才能够进行处理，除此之外必须要防止用户传输的数据不能同结束符相同，否则就会出现紊乱</p><p>HTTP 协议头就是以回车(CR)加换行(LF)符号序列结尾</p></blockquote></li><li><p>变长协议：以定长加不定长的部分组成，其中定长的部分需要描述不定长的内容长度。</p><blockquote><p>一般都是自定义协议，有 header 和 payload 组成，由定长加不定长的部分组成，其中定长的部分需要描述不定长的内容长度，使用比较广泛</p></blockquote></li></ul><h4 id="29-协议层-协议构造"><a class="markdownIt-Anchor" href="#29-协议层-协议构造"></a> 2.9 协议层 — 协议构造</h4><ul><li><p>Length：32bits，包括数据包剩余部分的字节大小，不包含自身长度数据包的大小</p></li><li><p>Header Magic：16bits，值为 0x1000，用于标识版本信息，协议解析时快速校验</p></li><li><p>Flags：16bits，为预留字段，暂未使用，默认值为 0x0000</p></li><li><p>Sequence Number：32bits，表示数据包的 seqID，可用于多路复用，最好确保单个连接内递增</p></li><li><p>Header Size：16bits，等于头部长度字节数/4，头部长度计算从第14个字节开始计算，一直到 PAYLOAD 前（备注：header 的最大长度为 64K）</p></li><li><p>Protocol ID：uint8 编码，编解码方式有 Binary 和 Compact 两种。</p><blockquote><p>uint8 编码，取值有：</p><p>Protocol ID Binary = 0</p><p>Protocol ID Compact = 2</p></blockquote></li><li><p>Number Transforms：uint8 编码，表示 Transform 个数。</p></li><li><p>Transform ID：uint8 编码，表示压缩方式，如 zlib 和 snappy</p></li><li><p>Info ID：uint8 编码，用于传递一些定制的 meta 信息</p></li><li><p>Payload：消息体</p></li></ul><h4 id="210-协议层-协议解析"><a class="markdownIt-Anchor" href="#210-协议层-协议解析"></a> 2.10 协议层 — 协议解析</h4><p>— Peek —&gt; Magic Number — Peek —&gt; Playload Codec — Decode —&gt; Payload</p><h4 id="211-网络通信层"><a class="markdownIt-Anchor" href="#211-网络通信层"></a> 2.11 网络通信层</h4><ul><li>Network IO：框架的网络通信层</li></ul><h4 id="212-网络通信层-sockets-api"><a class="markdownIt-Anchor" href="#212-网络通信层-sockets-api"></a> 2.12 网络通信层 — Sockets API</h4><ul><li><p>套接字（Socket）编程<strong>是一种编程模式</strong>。在这种模式中，使用和操作套接字来创建软件之间的连接。 套接字用于连接不同计算机之间或同一台计算机内的软件，以便程序可以共享数据。 套接字编程可用于即时消息、Internet浏览器，文件共享程序，以及强制计算机连接到系统的任何程序。</p></li><li><p>套接字编程中的客户端必须知道两个信息：服务器的 IP 地址，以及端口号。</p></li><li><p>socket 函数创建一个套接字，bind 将一个套接字绑定到一个地址上。listen 监听进来的连接。</p></li><li><p>backlog 的含义有点复杂，这里先简单的描述：指定挂起的连接队列的长度，当客户端连接的时候，服务器可能正在处理其他逻辑而未调用accept 接受连接，此时会导致这个连接被挂起，内核维护挂起的连接队列，backlog 则指定这个队列的长度。accept 函数从队列中取出连接请求并接收它，然后这个连接就从挂起队列移除。如果队列未满，客户端调用 connect 马上成功，如果满了可能会阻塞等待队列未满（实际上在Linux中测试并不是这样的结果）。Linux 的 backlog 默认是128，通常情况下，我们也指定为 128 即可。</p></li><li><p>connect 客户端向服务器发起连接，accept 接收一个连接请求，如果没有连接则会一直阻塞直到有连接进来。得到客户端的 fd 之后，就可以调用 read，write 函数和客户端通讯，读写方式和其他 I/O 类似。</p></li><li><p>read 从 fd 读数据，socket 默认是阻塞模式的，如果对方没有写数据，read 会一直阻塞着。</p></li><li><p>write 在 fd 写数据，socket 默认是阻塞模式的，如果对方没有写数据，write 会一直阻塞着。</p></li><li><p>socket 关闭套接字，当另一端 socket 关闭后，这一端读写的情况：</p><ul><li>尝试去读会得到一个 EOF，并返回 0。</li><li>尝试去写会触发一个SIGPIPE信号，并返回 -1 和 errno=EPIPE，SIGPIPE 的默认行为是终止程序，所以通常我们应该忽略这个信号，避免程序终止。 如果这一端不去读写，我们可能没有办法知道对端的 socket 是否关闭。</li></ul></li></ul><h4 id="213-网络通信层-网络库"><a class="markdownIt-Anchor" href="#213-网络通信层-网络库"></a> 2.13 网络通信层 — 网络库</h4><ul><li>提供易用 API<ul><li>封装底层 Socket API</li><li>连接管理和事件分发</li></ul></li><li>功能<ul><li>协议支持：tcp、udp 和 uds 等</li><li>优雅退出、异常处理等</li></ul></li><li>性能<ul><li>应用层 buffer 减少 copy</li><li>高性能定时器、对象池等</li></ul></li></ul><h4 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h4><ol><li>RPC 框架主要核心有三层：编解码层、协议层和网络通信层</li><li>二进制编解码的实现原理和选型要点</li><li>协议的一般构造，以及框架协议解析的基本流程</li><li>Socket API 的调用流程，以及选型网络库时要考虑的核心指标</li></ol><h3 id="3关键指标"><a class="markdownIt-Anchor" href="#3关键指标"></a> 3.关键指标</h3><h4 id="31-稳定性-保障策略"><a class="markdownIt-Anchor" href="#31-稳定性-保障策略"></a> 3.1 稳定性 — 保障策略</h4><ul><li><p>熔断：保护调用方，防止被调用的服务出现问题而影响到整个链路</p><blockquote><p>一个服务 A 调用服务 B 时，服务 B 的业务逻辑又调用了服务 C，而这时服务 C 响应超时了，由于服务 B 依赖服务 C，C 超时直接导致 B 的业务逻辑一直等待，而这个时候服务 A 继续频繁地调用服务 B，服务 B 就可能会因为堆积大量的请求而导致服务宕机，由此就导致了服务雪崩的问题</p></blockquote></li><li><p>限流：保护被调用方，防止大流量把服务压垮</p><blockquote><p>当调用端发送请求过来时，服务端在执行业务逻辑之前先执行检查限流逻辑，如果发现访问量过大并且超出了限流条件，就让服务端直接降级处理或者返回给调用方一个限流异常</p></blockquote></li><li><p>超时控制：避免资源浪费在不可用节点上</p><blockquote><p>当下游的服务因为某种原因响应过慢，下游服务主动停掉一些不太重要的业务，释放出服务器资源，避免浪费资源</p></blockquote></li></ul><p>从某种程度上讲超时、限流和熔断也是一种服务降级的手段</p><h4 id="32-稳定性-请求成功率"><a class="markdownIt-Anchor" href="#32-稳定性-请求成功率"></a> 3.2 稳定性 — 请求成功率</h4><ul><li>负载均衡</li><li>重试</li></ul><blockquote><p>注意，重试有放大故障的风险，重试会直接加大下游的负载。</p><p>假设 A 服务调用 B 服务，重试次数设置为 r（包括首次请求），当 B 高负载时很可能调用不成功，这时 A 调用失败重试 B ，B 服务的被调用量快速增大，最坏情况下可能放大到 r 倍，不仅不能请求成功，还可能导致 B 的负载继续升高，甚至直接打挂。</p><p>为了防止重试风暴，需要限制单点重试和限制链路重试</p></blockquote><h4 id="33-稳定性-长尾请求"><a class="markdownIt-Anchor" href="#33-稳定性-长尾请求"></a> 3.3 稳定性 — 长尾请求</h4><p>长尾请求一般是指明显高于均值的那部分占比较小的请求。</p><blockquote><p>业界关于延迟有一个常用的P99标准， P99 单个请求响应耗时从小到大排列，顺序处于99%位置的值即为P99 值，那后面这 1%就可以认为是长尾请求。</p></blockquote><p>在较复杂的系统中，长尾延时总是会存在。造成这个的原因非常多，常见的有网络抖动，GC，系统调度。可以使用 Backup Request 的机制来减少延时。</p><blockquote><p>我们预先设定一个阈值 t3（比超时时间小，通常建议是 RPC 请求延时的 pct99 ），当 Req1 发出去后超过 t3 时间都没有返回，那我们直接发起重试请求 Req2 ，这样相当于同时有两个请求运行。然后等待请求返回，只要 Resp1 或者 Resp2 任意一个返回成功的结果，就可以立即结束这次请求，这样整体的耗时就是 t4 ，它表示从第一个请求发出到第一个成功结果返回之间的时间，相比于等待超时后再发出请求，这种机制能大大减少整体延时。</p></blockquote><h4 id="34-稳定性-注册中间件"><a class="markdownIt-Anchor" href="#34-稳定性-注册中间件"></a> 3.4 稳定性 — 注册中间件</h4><p>Kitex 框架中的 Client 和 Server 创建接口均采用 Option 模式，提供了极大的灵活性，很方便就能注入这些稳定性策略。</p><h4 id="35-易用性"><a class="markdownIt-Anchor" href="#35-易用性"></a> 3.5 易用性</h4><ul><li>开箱即用：合理的默认参数选项、丰富的文档。</li><li>周边工具：生成代码工具、脚手架工具</li><li>简单易用的命令行工具<ul><li>生成服务代码脚手架</li><li>支持 protobuf 和 thrift</li><li>内置功能丰富的选项</li><li>支持自定义的生成代码插件</li></ul></li></ul><p>Kitex 使用 Suite 来打包自定义的功能，提供 ”一键配置基础依赖“ 的优势。</p><h4 id="36-扩展性"><a class="markdownIt-Anchor" href="#36-扩展性"></a> 3.6 扩展性</h4><ul><li>Middleware</li><li>Option</li><li>编解码层</li><li>协议层</li><li>网络传输层</li><li>代码生成工具插件扩展</li></ul><blockquote><p>一次请求发起首先会经过治理层面，治理相关的逻辑被封装在 middleware 中，这些 middleware 会被构造成一个有序调用链，逐个执行，比如服务发现、路由、负载均衡、超时控制等，mw 执行后就会进入到 remote 模块，完成与远端的通信</p></blockquote><h4 id="37-观测性"><a class="markdownIt-Anchor" href="#37-观测性"></a> 3.7 观测性</h4><ul><li>Log 日志、Metrics 指标、Trace 链路</li><li>内置观测性服务</li></ul><blockquote><p>除了传统的 Log、Metric、Trace 三件套之外，对于框架来说可能还不够，还有些框架自身状态需要暴露出来，例如当前的环境变量、配置、Client/Server初始化参数、缓存信息等</p></blockquote><h4 id="38-高性能"><a class="markdownIt-Anchor" href="#38-高性能"></a> 3.8 高性能</h4><p>场景</p><ul><li>单机、集群</li><li>单连接、多连接</li><li>单/多 client、单/多 server</li><li>不同大小的请求包</li><li>不同请求类型，例如 pingpong、streaming 等，参考<a class="link"   href="https://www.cloudwego.io/zh/docs/kitex/tutorials/basic-feature/message_type/" >消息类型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul><p>目标</p><ul><li>高吞吐</li><li>低延迟</li></ul><blockquote><p>这里分两个维度，高性能意味着高吞吐和低延迟，两者都很重要，甚至大部分场景下低延迟更重要。</p></blockquote><p>手段</p><ul><li>连接池</li><li>多路复用</li><li>高性能编解码协议</li><li>高性能网络库</li></ul><p>多路复用可以大大减少了连接带来的资源消耗，并且提升了服务端性能。</p><blockquote><p>连接多路复用和非连接多路复用</p><p>调用端向服务端的一个节点发送请求，并发场景下，如果是非连接多路复用，每个请求都会持有一个连接，直到请求结束连接才会被关闭或者放入连接池复用，并发量与连接数是对等的关系。 而使用连接多路复用，所有请求都可以在一个连接上完成，可以明显看到连接资源利用上的差异</p></blockquote><h4 id="小结-3"><a class="markdownIt-Anchor" href="#小结-3"></a> 小结</h4><ol><li>框架通过中间件来注入各种服务治理策略，保障服务的稳定性</li><li>通过合理的默认配置和方便的命令行工具可以提升框架的易用性</li><li>框架应当提供丰富的扩展点，例如核心的传输层和协议层</li><li>观测性除了传统的 Log、Metrics 和 Trace 之外，内置状态暴露服务也很有必要</li><li>性能可以从多个层面去优化，例如选择高性能的编解码协议和网络库</li></ol><p><font color='red'>以下是内部开发者的分享，也整理在了青训营活动学习笔记中，如有侵权请联系笔者删除</font></p><h3 id="4企业实践"><a class="markdownIt-Anchor" href="#4企业实践"></a> 4.企业实践</h3><h4 id="41-整体架构-kitex"><a class="markdownIt-Anchor" href="#41-整体架构-kitex"></a> 4.1 整体架构 — Kitex</h4><ul><li><p>Kitex Core：核心组件</p><blockquote><p>core 是 Kitex的的主干逻辑，定义了框架的层次结构、接口，还有接口的默认实现，client 和 server 是对用户暴露的，client/server option 的配置都是在这两个package中提供的。还有client/server 的初始化，在 kitex_gen 生成代码时，用到的 client.go 和 server.go，在初始化 client 时调用的是 kitex_gen 中的方法，其实观察 kitex_gen 下 service package 的代码就知道这是对  client/server 的封装。</p><p>client/server 下的是框架治理层面的功能模块和交互元信息，remote 是与对端交互的模块，包括编解码和网络通信。</p></blockquote></li><li><p>Kitex Byted：与企业内部基础设施基础</p><blockquote><p>byted 是对字节内部的扩展，集成了内部的二方库还有与字节相关的非通用的实现，byted 部分是在生成代码中初始化 client 和 server 时通过 suite 集成进来的，这样实现的好处是与字节的内部特性解耦，方便后续开源拆分。</p></blockquote></li><li><p>Kitex Tool：代码生成工具</p><blockquote><p>tool 则是与生成代码相关的实现，生成代码工具就是编译这个包得到的，里面包括 idl 解析、校验、代码生成、插件支持、自更新等，未来生成代码逻辑还会做一些拆分，便于给用户提供更友好的扩展</p></blockquote></li><li><p>Kitex 官方仓库<a class="link"   href="https://github.com/cloudwego/kitex" >https://github.com/cloudwego/kitex <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li></ul><h4 id="42-自研网络库-背景"><a class="markdownIt-Anchor" href="#42-自研网络库-背景"></a> 4.2 自研网络库 — 背景</h4><ul><li><p>原生库无法感知连接状态</p><p>在使用连接池时，池中存在失效连接，影响连接池的复用。</p></li><li><p>原生库存在 goroutine 暴涨的风险</p><p>一个连接一个 goroutine 的模式，由于连接利用率低下，存在大量 goroutine 占用调度开销，影响性能。</p><blockquote><ol><li>Go Net 使用 Epoll ET ，Netpoll 使用 LT。</li><li>Netpoll 在大包场景下会占用更多的内存。</li><li>Go Net 只有一个 Epoll 事件循环（因为 ET 模式被唤醒的少，且事件循环内无需负责读写，所以干的活少），而 Netpoll 允许有多个事件循环（循环内需要负责读写，干的活多，读写越重，越需要开更多 Loops）。</li><li>Go Net 一个连接一个 Goroutine，Netpoll 连接数和 Goroutine 数量没有关系，和请求数有一定关系，但是有 Gopool 重用。</li><li>Go Net 不支持 Zero Copy，甚至于如果用户想要实现 BufferdConnection 这类缓存读取，还会产生二次拷贝。Netpoll 支持管理一个 Buffer 池直接交给用户，且上层用户可以不使用 Read(p []byte) 接口而使用特定零拷贝读取接口对 Buffer 进行管理，实现零拷贝能力的传递。</li></ol></blockquote></li></ul><h4 id="43-自研网络库-netpoll"><a class="markdownIt-Anchor" href="#43-自研网络库-netpoll"></a> 4.3 自研网络库 — Netpoll</h4><ol><li><p>go net 无法检测连接对端关闭（无法感知连接状态）</p><ol><li>在使用长连接池时，池中存在失效连接，严重影响了连接池的使用和效率。</li><li>希望通过引入 epoll 主动监听机制，感知连接状态。</li></ol><p>解决无法感知连接问题</p></li><li><p>go net 缺乏对协程数量的管理</p><ol><li><p>Kitex 采取一个连接一个 goroutine 模式，由于连接利用率低，服务存在较多无用的 goroutine，占用调度开销，影响性能。</p></li><li><p>希望建立协程池，提升性能。</p><p>netpoll 基于 epoll，同时采用 Reactor 模型，对于服务端则是主从 Reactor 模型，服务端的 主reactor 用于接受调用端的连接，然后将建立好的连接注册到某个 从Reactor 上， 从Reactor 负责监听连接上的读写事件，然后将读写事件分发到协程池里进行处理。</p></li></ol><p>解决 goroutine 暴涨的风险</p></li><li><p>提升性能</p><p>为了提升性能，引入了 Nocopy Buffer，向上层提供 NoCopy 的调用接口，编解码层面零拷贝</p></li></ol><h4 id="44-扩展性设计"><a class="markdownIt-Anchor" href="#44-扩展性设计"></a> 4.4 扩展性设计</h4><p>支持多协议，也支持灵活的自定义协议扩展</p><blockquote><p>kitex 支持多协议的并且也是可扩展的，交互方式上前面已经说过支持ping-pong、streaming、oneway</p><p>编解码支持 thrift、Protobuf 应用层协议支持 TTHeader、Http2、也支持裸的 thrift 协议</p><p>传输层目前支持 TCP，未来考虑支持 UDP、kernel-bypass 的 RDMA</p><p>框架内部不强依赖任何协议和网络模块，可以基于接口扩展，在传输层上则可以集成其他库进行扩展。</p><p>目前集成的有自研的 Netpoll，基于 netpoll 实现的 http2 库，用于 mesh 场景通过共享内存高效通信的 shm-ipc，以后也可以增加对 RDMA 支持的扩展</p></blockquote><h4 id="45-性能优化-网络库优化"><a class="markdownIt-Anchor" href="#45-性能优化-网络库优化"></a> 4.5 性能优化 — 网络库优化</h4><ul><li>调度优化<ul><li>epoll_wait 在调度上的控制</li><li>gopool 重用 gorutine 降低同时运行协程数</li></ul></li><li>LinkBuffer<ul><li>读写并行无锁，支持 nocopy 的流式读写</li><li>高效扩缩容</li><li>Nocopy Buffer 池化，减少 GC</li></ul></li><li>Pool<ul><li>引入内存池和对象池，减少 GC 开销</li></ul></li></ul><h4 id="46-性能优化-编解码优化"><a class="markdownIt-Anchor" href="#46-性能优化-编解码优化"></a> 4.6 性能优化 — 编解码优化</h4><ul><li>Codegen<ul><li>预计算并预分配内存，减少内存操作次数，包括内存分配和拷贝</li><li>Inline 内联减少函数调用次数和避免不必要的反射操作等</li><li>自研 Go 语言实现的 Thrift IDL 解析和代码生成器，支持完善的 Thrift IDL 语法和语义检查，并支持插件机制 - Thriftgo</li><li>Thriftgo 官方仓库<a class="link"   href="https://github.com/cloudwego/thriftgo" >https://github.com/cloudwego/thriftgo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul></li><li>JIT<ul><li>使用 JIT 编译技术改善用户体验的同时带来更强的编解码性能，减轻用户维护生成代码的负担</li><li>基于 JIT 编译技术的高性能动态 Thrift 编解码器 - Frugal</li><li>Frugal 官方仓库<a class="link"   href="https://github.com/cloudwego/frugal" >https://github.com/cloudwego/frugal <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul></li></ul><blockquote><p>序列化和反序列的性能优化从大的方面来看可以从时间和空间两个维度进行优化。从兼容已有的 Binary 协议来看，空间上的优化似乎不太可行，只能从时间维度进行优化，包括下面的几点：</p><p>代码生成 code-gen 的优点是库开发者实现起来相对简单，缺点是增加业务代码的维护成本和局限性。</p><p>JIT编译（just-in-time compilation）狭义来说是当某段代码即将第一次被执行时进行编译，因而叫“即时编译”。</p><p>即时编译 JIT 则将编译过程移到了程序的加载（或首次解析）阶段，可以一次性编译生成对应的 codec 并高效执行，目前内部开发人员正在尝试，压测数据表明性能收益还是挺不错的，目的是不损失性能的前提下，减轻用户的维护负担生成代码的负担。</p></blockquote><h4 id="47-合并部署"><a class="markdownIt-Anchor" href="#47-合并部署"></a> 4.7 合并部署</h4><p>微服务过微，传输和序列化开销越来越大。可以将亲和性强的服务实例尽可能调度到同一个物理机，远程 RPC 调用优化为本地 IPC 调用。</p><ul><li>中心化的部署调度和流量控制</li><li>基于共享内存的通信协议</li><li>定制化的服务发现和连接池实现</li><li>定制化的服务启动和监听逻辑</li></ul><h4 id="小结-4"><a class="markdownIt-Anchor" href="#小结-4"></a> 小结</h4><ol><li>介绍了 Kitex 的整体架构</li><li>介绍了自研网络库 Netpoll 的背景和优势</li><li>从扩展性和性能优化两个方面分享相关实践</li><li>介绍了企业内部正在尝试的新的微服务形态：合并部署</li></ol><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><ol><li>从本地函数调用引出 RPC 的基本概念</li><li>重点说明了 RPC 框架核心的三层，编解码层、协议层和网络层</li><li>围绕 RPC 框架的核心指标，例如稳定性、可扩展性和高性能等，展开说明相关的知识</li><li>分享了字节跳动高性能 RPC 框架 Kitex 的相关实践</li></ol><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://juejin.cn/post/6844903622380093447" >Apache Thrift系列详解(一) - 概述与入门 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/84250836" >详解varint编码原理 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/566312289" >几款主流的压缩算法对比Zlib,snappy,lz4 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://blog.csdn.net/DataFlux/article/details/125259244" >可观测性的三大支柱：Metrics、Trace、Log <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.cloudwego.io/zh/docs/kitex/tutorials/basic-feature/message_type/" >消息类型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7198526201221660729&quot; &gt;深入浅出 RPC 框架 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对 RPC 框架的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="golang" scheme="https://www.entropy-tree.top/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>消息队列原理与实战</title>
    <link href="https://www.entropy-tree.top/2023/02/10/golang-day13/"/>
    <id>https://www.entropy-tree.top/2023/02/10/golang-day13/</id>
    <published>2023-02-10T10:17:22.000Z</published>
    <updated>2023-03-31T23:55:52.478Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7198168315080065083" >消息队列原理与实战 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了消息队列的学习<span id="more"></span></p><h2 id="消息队列原理与实战"><a class="markdownIt-Anchor" href="#消息队列原理与实战"></a> 消息队列原理与实战</h2><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>场景</p><ul><li><p>系统崩溃</p></li><li><p>服务能力有限</p></li><li><p>链路耗时长尾</p></li><li><p>日志存储</p></li></ul><p>解决方案</p><ul><li>针对存储行为服务崩溃时，使用消息队列进行解耦</li><li>针对高并发服务时，使用消息队列进行削峰</li><li>针对链路耗时，使用消息队列进行异步</li><li>针对日志存储，使用消息队列进行日志处理</li></ul><p>什么是消息队列</p><p>消息队列（MQ） ，指保存消息的一个容器，本质是个队列。但这个队列需要支持高吞吐，高并发，高可用。</p><h3 id="1前世今生"><a class="markdownIt-Anchor" href="#1前世今生"></a> 1.前世今生</h3><blockquote><p>消息中间件其实诞生的很早，早在1983年互联网应用还是一片荒芜的年代，有个在美国的印度小哥Vivek就设想了一种通用软件总线，世界上第一个现代消息队列软件The Information Bus(TIB)， TIB受到了企业的欢迎，这家公司的业务发展引起了当时最牛气的IT公司IBM的注意，于是他们一开始研发了自己消息队列软件，于是才有了后来的wesphere mq，再后来微软也加入了战团。接近2000年的时候，互联网时代已经初见曙光，全球的应用程序得到了极大地丰富，对于程序之间互联互通的需求越来越强烈，但是各大IT公司之间还是牢牢建立着各种技术壁垒，以此来保证自己的商业利益，所以消息中间件在那个时候是大型企业才能够用的起的高级玩意。 但是时代的洪流不可逆转，有壁垒就有打破壁垒的后来者，2001年sun发布了jms技术，试图在各大厂商的层面上再包装一层统一的java规范。java程序只需要针对jms api编程就可以了，不需要再关注使用了什么样的消息中间件，但是jms仅仅适用于java。2004年AMQP（高级消息队列协议）诞生了，才是真正促进了消息队列的繁荣发展，任何人都可以针对AMQP的标准进行编码。有好的协议指导，再加上互联网分布式应用的迅猛发展成为了消息中间件一飞冲天的最大动力，程序应用的互联互通，发布订阅，最大契合了消息中间件的最初的设计初衷。除了刚才介绍过的收费中间件，后来开源消息中间件开始层出不穷，常见比较流行的有ActiveMQ、RabbitMQ 、Kafak、阿里的RocketMQ，以及目前存算分离的Pulsar，在目前互联网应用中消息队列中间件基本上成为标配。</p></blockquote><h4 id="业界内消息队列对比"><a class="markdownIt-Anchor" href="#业界内消息队列对比"></a> 业界内消息队列对比</h4><p>目前比较流行的MQ</p><ul><li>Kafka：分布式的、分区的、多副本的日志提交服务，在高吞吐场景下发挥较为出色。</li><li>RocketMQ：低延迟、强一致、高性能、高可靠、万亿级容量和灵活的可扩展性，在一些实时场景中运用较广泛。</li><li>Pulsar：是下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体、采用存算分离的架构设计。</li><li>BMQ：和 Pulsar 架构类似，存算分离，初期定位是承接高吞吐的离线业务场景，逐步替换掉对应的 Kafka 集群。</li></ul><h3 id="2消息队列-kafka"><a class="markdownIt-Anchor" href="#2消息队列-kafka"></a> 2.消息队列 - Kafka</h3><h4 id="21-使用场景"><a class="markdownIt-Anchor" href="#21-使用场景"></a> 2.1 使用场景</h4><ul><li><p>日志信息</p></li><li><p>Metrics 数据：搜索服务、直播服务、订单服务、支付服务</p></li><li><p>用户行为：搜索、点赞、评论、收藏</p></li></ul><h4 id="22-如何使用-kafka"><a class="markdownIt-Anchor" href="#22-如何使用-kafka"></a> 2.2 如何使用 Kafka</h4><ul><li>第一步：创建一个 Kafka 集群</li><li>第二步：在这个集群中创建一个 Topic，并且设置好分片数量</li><li>第三步：引入对应语言的 SDK 编写生产者逻辑，配置好集群和 Topic 等参数，初始化一个生产者，调用 Send 方法，将信息发送出去</li><li>第四步：引入对应语言的 SDK 编写消费者逻辑，配置好集群和 Topic 等参数，初始化一个消费者，调用 Poll 方法，接受发送的信息</li></ul><h4 id="23-基本概念"><a class="markdownIt-Anchor" href="#23-基本概念"></a> 2.3 基本概念</h4><ul><li>Topic：Kafka 中的逻辑队列，可以理解为每一个不同的业务场景就是一个不同的 Topic，对于这个业务来说，所有的数据都存储在这个 Topic 中。</li><li>Cluster：Kafka 的物理集群，每个集群中可以新建多个不同的 Topic。</li><li>Producer：消息的生产者，负责将业务消息发送到 Topic 当中。</li><li>Consumer：消息的消费者，负责消费已经发送到 Topic 中的消息。</li><li>Consumer Group：消费者组，不同组 Consumer 消费进度互不干涉。</li><li>Partition：分区，通常 Topic 会有多个分片，不同分片直接消息是可以并发处理的，能够提高单个 Topic 的吞吐。</li></ul><p>Offset：对每一个 partition 来说，每一条消息都有一个唯一的 Offset，消息在 partition 内的相对位置信息，可以理解为唯一 ID，在 partition 内部严格递增。</p><p>Replica：分片的副本，分布在不同的机器上，可用来容灾，Leader 对外服务，Follower 异步去拉取 Leader 的数据进行同步，如果 Leader 挂掉了，可以将 Follower 提升成 Leader 再对外进行服务。</p><p>ISR：In-Sync Replicas。意思是同步中的副本，对于 Follower 来说，始终和 Leader 是有一定差距的，但是当这个 差距比较小的时候，就可以将这个 Follower 副本加入到 ISR 中，不在 ISR 中的副本是不允许提升成 Leader 的。</p><p>每个分片有多个 Replica、Leader，Replica 将会从 ISR 中选出。</p><h4 id="24-数据复制"><a class="markdownIt-Anchor" href="#24-数据复制"></a> 2.4 数据复制</h4><p>Broker 代表每一个 Kafka 的节点，所有的 Broker 节点最终组成了一个集群。多个 Broker 中有一个 Broker 同时扮演了 Controller 的角色，Controller 是整个集群的大脑，负责对副本和 Broker 进行分配。</p><h4 id="25-kafka-架构"><a class="markdownIt-Anchor" href="#25-kafka-架构"></a> 2.5 Kafka 架构</h4><p>在集群的基础上，还有一个模块是 ZooKeeper。这个模块存储了集群的元数据信息，比如副本或分区的分配信息等，Controller 计算好的方案都会存放到这个地方。</p><h4 id="26-一条消息的自述"><a class="markdownIt-Anchor" href="#26-一条消息的自述"></a> 2.6 一条消息的自述</h4><p>从一条消息的视角来看完整的处理流程，了解 Kafka 为什么能够支持如此高的吞吐。</p><p>思考：如果发送一条消息，等到其成功后再发一条会有什么问题？</p><h4 id="27-producer"><a class="markdownIt-Anchor" href="#27-producer"></a> 2.7 Producer</h4><h5 id="批量发送"><a class="markdownIt-Anchor" href="#批量发送"></a> 批量发送</h5><p>批量发送可以减少 IO 次数，从而加强发送能力。</p><p>思考：如果消息量很大，网络带宽不够用，如何解决？</p><h5 id="数据压缩"><a class="markdownIt-Anchor" href="#数据压缩"></a> 数据压缩</h5><p>通过压缩减小消息大小，目前支持 Snappy、Gzip、LZ4、ZSTD 压缩算法。</p><h4 id="28-broker"><a class="markdownIt-Anchor" href="#28-broker"></a> 2.8 Broker</h4><ul><li><p>数据的存储</p><p>了解数据的存储，可以先从消息文件结构入手，再了解磁盘结构的工作原理。</p></li><li><p>消息文件结构</p><p>在每一个 Broker 中都分布这不同 Topic 的不同分片。</p></li><li><p>磁盘结构</p><p>移动磁头找到对应磁道，磁盘转动，找到对应扇区，最后写入。寻道成本比较高，因此顺序写可以减少寻道所带来的时间成本。</p><p>在一个盘面里寻道，磁头 —&gt; 磁道 —&gt; 扇区。</p></li><li><p>顺序写</p><p>采用顺序写的方式进入写入，可以提高写入效率。</p></li><li><p>如何找到消息？</p><p>Consumer 通过发送 Fetch Request 请求消息数据，Broker 会指定 Offset 处的消息，按照时间窗口和消息大小窗口发送给 Consumer</p><p>思考：寻找数据这个细节是如何实现的？</p></li><li><p>偏移量索引文件，文件名是文件中第一条消息的 Offset</p><p>通过二分找到小于目标文件 Offset 的最大索引位置，再遍历找到目标 Offset。</p></li><li><p>时间戳索引文件</p><p>通过二分找到小于目标时间戳最大的索引位置，在通过寻找 Offset 的方式找到最终数据。和 Offset 相比只是多加了时间戳以及，即通过二分找到时间戳对应的 Offset，再找到相应的文件数据。</p></li><li><p>传统数据拷贝</p><p>从磁盘空间到内核空间，内核空间到应用空间，再从应用空间到内核空间，进入消费者进程。</p></li><li><p>零拷贝</p><p>从磁盘空间到内核空间，然后进入消费者进程。</p><blockquote><p>Consumer从Broker中读取数据，通过sendfile的方式，将磁盘读到os内核缓冲区后，直接转到socket buffer进行网络发送 Producer生产的数据持久化到broker，采用mmap文件映射，实现顺序的快速写入</p></blockquote></li></ul><h4 id="29-consumer"><a class="markdownIt-Anchor" href="#29-consumer"></a> 2.9 Consumer</h4><h5 id="消息的接收端"><a class="markdownIt-Anchor" href="#消息的接收端"></a> 消息的接收端</h5><p>如何解决 Partition 在 Consumer Group 中的分配问题？</p><blockquote><p>对于一个Consumer Group来说，多个分片可以并发消费，这样可以大大提高消费的效率，但需要解决 Consumer 和 Partition 的分配问题，也就是对于每一个 Partition 来讲，该由哪一个 Consumer 来消费的问题。对于这个问题，我们一般有两种解决方法，手动分配和自动分配</p></blockquote><h5 id="low-level"><a class="markdownIt-Anchor" href="#low-level"></a> Low Level</h5><p>通过手动分配，哪一个 Consumer 消费哪一个 Partition 完全由业务来决定</p><blockquote><p>第一，手动分配，也就是Kafka中所说的 Low Level 消费方式进行消费，这种分配方式的一个好处就是启动比较快，因为对于每一个 Consumer 来说，启动的时候就已经知道了自己应该去消费哪个消费方式。这些 Consumer 再启动的时候就已经知道分配方案了</p><p>但这样这种方式存在缺点，想象一下，如果某一个 Consumer 挂掉了可能会停止一部分分片的消费，或者新增了一台Consumer，那又需要停掉整个集群，重新修改配置再上线，保证新增的 Consumer 也可以消费数据，其实上面两个问题，有时候对于线上业务来说是致命的。</p><p>因此 Kafka 也提供了另外一种方式。</p></blockquote><h5 id="high-level"><a class="markdownIt-Anchor" href="#high-level"></a> High Level</h5><blockquote><p>Kafka 提供了自动分配的方式，这里也叫做 High Level 的消费方式，简单的来说，就是在 Broker 集群中，对于不同的 Consumer Group 来讲，都会选取一台 Broker 当做 Coordinator，而 Coordinator 的作用就是帮助 Consumer Group 进行分片的分配，也叫做分片的 Rebalance</p><p>使用这种方式，如果 Consumer Group 中有发生宕机，或者有新的 Consumer 加入，整个 partition 和 Consumer 都会重新进行分配来达到一个稳定的消费状态</p></blockquote><h4 id="210-consumer-rebalance"><a class="markdownIt-Anchor" href="#210-consumer-rebalance"></a> 2.10 Consumer Rebalance</h4><p>相关参考<a class="link"   href="https://www.cnblogs.com/listenfwind/p/12662968.html" >https://www.cnblogs.com/listenfwind/p/12662968.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="小结-提高-kafka-吞吐或者稳定性的功能"><a class="markdownIt-Anchor" href="#小结-提高-kafka-吞吐或者稳定性的功能"></a> 小结 - 提高 Kafka 吞吐或者稳定性的功能</h4><ul><li>Producer：批量发送、数据压缩</li><li>Broker：顺序写，消息索引，零拷贝</li><li>Consumer：Rebalance</li></ul><h4 id="211-kafka-数据复制问题"><a class="markdownIt-Anchor" href="#211-kafka-数据复制问题"></a> 2.11 Kafka - 数据复制问题</h4><p>对于 Kafka 来说，每一个 Broker 上都有不同 Topic 分区的不同副本，而每一个副本，会将其数据存储到该 Kafka 节点上面，对于不同的节点之间，通过副本直接的数据复制，来保证数据的最终一致性与集群的高可用。</p><h4 id="212-kafka-重启操作"><a class="markdownIt-Anchor" href="#212-kafka-重启操作"></a> 2.12 Kafka - 重启操作</h4><p>对一个机器进行重启</p><ul><li><p>首先会关闭一个 Broker，此时如果该 Broker 上存在副本的 Leader，那么该副本将发生 Leader 切换，切换到其他节点上并且在 ISR 中的 Follower 副本</p></li><li><p>而此时，因为数据在不断的写入，对于刚刚关闭重启的 Broker 来说，和新 Leader 之间一定会存在数据的滞后，此时这个 Broker 会追赶数据，重新加入到 ISR 当中</p></li><li><p>当数据追赶完成之后，需要回切 Leader，这一步叫做 prefer leader，目的是为了避免在一个集群长期运行后，所有的 Leader 都分布在少数节点上导致数据的不均衡</p></li><li><p>通过上面的一个流程分析，可以发现对于一个 Broker 的重启来说，需要进行数据复制，所以时间成本会比较大</p><blockquote><p>比如一个节点重启需要10分钟，一个集群有1000个节点，如果该集群需要重启升级，则需要10000分钟，那差不多就是一个星期，这样的时间成本是非常大的。 可能会问，能不能并发多台重启，答案是不能。因为在一个两副本的集群中，重启了两台机器，对某一分片来讲，可能两个分片都在这台机器上面，则会导致该集群处于不可用的状态。这是更不能接受的。</p></blockquote></li></ul><h4 id="213-kafka-替换-扩容-缩容"><a class="markdownIt-Anchor" href="#213-kafka-替换-扩容-缩容"></a> 2.13 Kafka - 替换、扩容、缩容</h4><ul><li>替换，本质上来讲就是一个需要追更多数据的重启操作，因为正常重启只需要追一小部分，而替换，则是需要复制整个leader的数据，时间会更长</li><li>扩容，当分片分配到新的机器上以后，也是相当于要从0开始复制一些新的副本</li><li>缩容，缩容节点上面的分片也会分片到集群中剩余节点上面，分配过去的副本也会从0开始去复制数据</li></ul><p>以上三个操作均有数据复制所带来的时间成本问题，所以对于 Kafka 来说，运维操作所带来的时间成本是不容忽视的</p><h4 id="214-kafka-负载不均衡"><a class="markdownIt-Anchor" href="#214-kafka-负载不均衡"></a> 2.14 Kafka - 负载不均衡</h4><p>场景：同一个 Topic 有4个分片，两副本，对于分片1来说，数据量明显比其他分片要大，当机器 IO 达到瓶颈的时候，可能就需要把第一台 Broker上面的其他的 Partition 迁移到其他负载小的 Broker上面</p><p>但数据复制又会引起 Broker 的 IO 升高，所以问题就变成了为了去解决 IO 升高，但解决问题的过程又会带来更高的IO。所以就需要权衡 IO 设计出一个极其复杂的负载均衡策略。</p><h4 id="kafka-问题总结"><a class="markdownIt-Anchor" href="#kafka-问题总结"></a> Kafka - 问题总结</h4><ol><li>运维成本高</li><li>对于负载不均衡的场景，解决方案复杂</li><li>没有自己的缓存，完全依赖 Page Cache</li><li>Controller 和 Coordinator 和 Broker 在同一进程中，大量 IO 会造成其性能下降</li></ol><h3 id="3消息队列-bmq"><a class="markdownIt-Anchor" href="#3消息队列-bmq"></a> 3.消息队列 - BMQ</h3><p>ByteMQ，简称 BMQ，由字节跳动团队自主研发。</p><h4 id="31-bmq-简介"><a class="markdownIt-Anchor" href="#31-bmq-简介"></a> 3.1 BMQ 简介</h4><p>BMQ 兼容 Kafka 协议，存算分离，云原生消息队列，初期定位是承接高吞吐的离线业务场景，逐步替换掉对应的 Kafka 集群。</p><p>Producer —&gt; Consumer —&gt; Proxy —&gt; Broker —&gt; HDFS —&gt; Controller —&gt; Coordinator —&gt; Meta</p><p>这里着重强调 Proxy 和 Broker 无状态，为与下面的运维进行比较，简单说明存算分离，适配 Kafka 协议以及不选择 Pulsar 的原因</p><h4 id="32-运维操作对比"><a class="markdownIt-Anchor" href="#32-运维操作对比"></a> 3.2 运维操作对比</h4><table><thead><tr><th style="text-align:center">具体操作</th><th style="text-align:center">Kafka</th><th style="text-align:center">BMQ</th></tr></thead><tbody><tr><td style="text-align:center">重启</td><td style="text-align:center">需要数据复制，分钟级重启</td><td style="text-align:center">重启后可直接对外服务，秒级完成</td></tr><tr><td style="text-align:center">替换</td><td style="text-align:center">需要数据复制，分钟级替换，甚至天级别</td><td style="text-align:center">替换后可直接对外服务，秒级完成</td></tr><tr><td style="text-align:center">扩容</td><td style="text-align:center">需要数据复制，分钟级扩容，甚至天级别</td><td style="text-align:center">扩容后可直接对外服务，秒级完成</td></tr><tr><td style="text-align:center">缩容</td><td style="text-align:center">需要数据复制，分钟级缩容，甚至天级别</td><td style="text-align:center">缩容后可直接对外服务，秒级完成</td></tr></tbody></table><p>实际上对于所有节点变更的操作，都仅仅只是集群元数据的变化，通常情况下都能秒级完成，而真正的数据已经移到下层分布式文件存储去了，所以运维操作不需要额外关心数据复制所带来的时间成本</p><h4 id="33-hdfs-写文件流程"><a class="markdownIt-Anchor" href="#33-hdfs-写文件流程"></a> 3.3 HDFS 写文件流程</h4><p>同一个副本是由多个 segment 组成，BMQ 对于单个文件写入的机制，首先客户端写入前会选择一定数量的 DataNode，这个数量是副本数，然后将一个文件写入到三个节点上，切换到下一个 segment 之后，又会重新选择三个节点进行写入。这样一来，对于单个副本的所有 segment 来讲，会随机地分配到分布式文件系统的整个集群中。</p><h4 id="34-bmq-文件结构"><a class="markdownIt-Anchor" href="#34-bmq-文件结构"></a> 3.4 BMQ 文件结构</h4><p>对于 Kafka 分片数据的写入，是先在 Leader 上面写好文件，然后同步到 Follower 上，所以同一个副本的所有 Segment 都在同一台机器上面。会存在之前说到的单分片过大导致负载不均衡的问题，但在 BMQ 集群中，因为对于单个副本来讲，是随机分配到不同的节点上面的，因此不会存在 Kafka 的负载不均问题。</p><h4 id="35-broker"><a class="markdownIt-Anchor" href="#35-broker"></a> 3.5 Broker</h4><h5 id="partition-状态机"><a class="markdownIt-Anchor" href="#partition-状态机"></a> Partition 状态机</h5><p>其实对于写入的逻辑来说，还有一个状态机的机制，用来保证不会出现同一个分片在两个 Broker 上同时启动的情况，另外也能够保证一个分片的正常运行。</p><p>首先 Controller 做好分片的分配之后，如果在该 Broker 分配到了 Broker，首先会 start 这个分片，然后进入 Recover 状态，这个状态主要有两个目的</p><ul><li><p>第一个目的是获取分片写入权利，即对于 hdfs 来讲，只会允许一个分片进行写入，只有拿到这个权利的分片才能写入。</p></li><li><p>第二个目的是如果上次分片是异常中断的，没有进行 save checkpoint，这里会重新进行一次 save checkpoint，然后就进入了正常的写流程状态，创建文件，写入数据，到一定大小之后又开始建立新的文件进行写入。</p></li></ul><h5 id="写文件流程"><a class="markdownIt-Anchor" href="#写文件流程"></a> 写文件流程</h5><ul><li><p>数据校验：CRC , 参数是否合法</p></li><li><p>校验完成后，会把数据放入Buffer中，通过一个异步的Write Thread线程将数据最终写入到底层的存储系统当中</p><blockquote><p>这里有一个地方需要注意一下，就是对于业务的写入来说，可以配置返回方式，可以在写完缓存之后直接返回，另外也可以数据真正写入存储系统后再返回，对于这两个来说前者损失了数据的可靠性，带来了吞吐性能的优势，因为只写入内存是比较快的，但如果在下一次 flush 前发生宕机了，这个时候数据就有可能丢失，后者的话，因为数据已经写入了存储系统，这个时候也不需要担心数据丢失，相应的来说吞吐就会小一些</p></blockquote></li></ul><p>Thread 的具体逻辑</p><ul><li><p>首先会将 Buffer 中的数据取出来，调用底层写入逻辑，在一定的时间周期上去 flush， flush 完成后开始建立 Index，也就是 offset 和 timestamp 对应消息具体位置的映射关系</p></li><li><p>Index建立好以后，会 save 一次 checkpoint，即表示 checkpoint 后的数据是可以被消费的，试想一下，如果没有 checkpoint 的情况下会发生什么问题，如果 flush 完成之后宕机，index 还没有建立，这个数据是不应该被消费的</p></li><li><p>最后当文件到达一定大小之后，需要建立一个新的 segment 文件来写入</p></li></ul><h5 id="写文件-failover"><a class="markdownIt-Anchor" href="#写文件-failover"></a> 写文件 Failover</h5><p>建立一个新的文件，会随机挑选与副本数量相当的数据节点进行写入，但如果此时挑选节点中有一个出现了问题，导致不能正常写入了，应该怎么处理？</p><p>可以重新找正常的节点创建新的文件进行写入，这样也就保证了写入的可用性。</p><h4 id="36-proxy"><a class="markdownIt-Anchor" href="#36-proxy"></a> 3.6 Proxy</h4><ul><li><p>首先 Consumer 发送一个 Fetch Request，然后会有一个 Wait 流程，那么他的作用是什么？</p><p>想象一个 Topic，如果一直没有数据写入，那么此时 consumer 就会一直发送 Fetch Request，如果 Consumer 数量过多，BMQ 的 server端 是扛不住这个请求的。</p><p>因此设置了一个等待机制，如果没有 fetch 到指定大小的数据，那么 proxy 会等待一定的时间，再返回给用户侧，这样也就降低了 fetch 请求的 IO 次数，经过 wait 流程后，会到 Cache 里面去寻找是否有存在想要的数据，如果有直接返回，如果没有，再开始去存储系统当中寻找，首先会 Open 这个文件，然后通过 Index 找到数据所在的具体位置，从这个位置开始读取数据</p></li></ul><h4 id="37-多机房部署"><a class="markdownIt-Anchor" href="#37-多机房部署"></a> 3.7 多机房部署</h4><p>为什么需要多机房部署？</p><p>其实对于一个高可用的服务，除了要防止单机故障所带来的的影响意外，也要防止机房级故障所带来的影响，比如机房断点，机房之间网络故障等等。</p><p>BMQ 的多机房部署：Proxy —&gt; Broker —&gt; Meta —&gt; HDFS</p><h4 id="38-bmq-高级特性"><a class="markdownIt-Anchor" href="#38-bmq-高级特性"></a> 3.8 BMQ - 高级特性</h4><p>泳道 —&gt; Databus —&gt; Mirror —&gt; Index —&gt; Parquet</p><h4 id="39-泳道消息"><a class="markdownIt-Anchor" href="#39-泳道消息"></a> 3.9 泳道消息</h4><p>开发流程：开发 —&gt; BOE —&gt; PPE —&gt; Prod</p><p>BOE：Bytedance Offline Environment，是一套完全独立的线下机房环境</p><p>PPE：Product Preview Environment，即产品预览环境</p><p>BOE 测试：多个人同时测试，需要等待上一个人测试完成。每多一个测试人员，都需要重新搭建一个相同配置的 Topic，造成人力和资源的浪费。</p><p>PPE 验证：对于 PPE 的消费者来说，资源没有生产环境多，所以无法承受生产环境的流量。解决主干泳道流量隔离问题以及泳道资源重复创建问题。</p><h4 id="310-databus"><a class="markdownIt-Anchor" href="#310-databus"></a> 3.10 Databus</h4><p>直接使用原生 SDK 的问题</p><ol><li>客户端配置较为复杂</li><li>不支持动态配置，更改配置需要停掉服务</li><li>对于 latency 不是很敏感的业务，batch 效果不佳</li></ol><p>使用Databus 的优点</p><ol><li>简化消息队列客户端复杂度</li><li>解耦业务与 Topic</li><li>缓解集群压力，提高吞吐</li></ol><h4 id="311-mirror"><a class="markdownIt-Anchor" href="#311-mirror"></a> 3.11 Mirror</h4><p>思考：是否可以通过多机房部署的方式，解决跨 Region 读写的问题？</p><p>使用 Mirror 通过最终一致的方式，解决跨 Region 读写问题。</p><h4 id="312-index"><a class="markdownIt-Anchor" href="#312-index"></a> 3.12 Index</h4><p>思考：如何通过写入的 LogId、UserId 或者其他的业务字段进行消息的查询？</p><p>直接在 BMQ 中将数据结构化，配置索引 DDL，异步构建索引后，通过 Index Query 服务读出数据。</p><h4 id="313-parquet"><a class="markdownIt-Anchor" href="#313-parquet"></a> 3.13 Parquet</h4><p>Apache Parquet 是 Hadoop 生态圈中一种新型列式存储格式，它可以兼容 Hadoop 生态圈中大多数计算框架（Hadoop、Spark等），被多种查询引擎支持（Hive、Impala、Drill 等）。</p><ul><li><p>有行式存储和列式存储</p></li><li><p>直接在 BMQ 中将数据结构化，通过 Parquet Engine，可以使用不同的方式构建 Parquet 格式文件</p></li></ul><h4 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h4><ol><li>BMQ 的框架模型（解决Kafka 存在的问题）</li><li>BMQ 的读写流程（Failover 机制，写入状态机）</li><li>BMQ 高级特性（泳道、Databus、Mirror、Index、Parquet）</li></ol><h3 id="4消息队列-rocketmq"><a class="markdownIt-Anchor" href="#4消息队列-rocketmq"></a> 4.消息队列 - RocketMQ</h3><p>使用场景：针对电商业务线，其业务涉及广泛，如注册、订单、库存、物流等；同时，也会涉及许多业务峰值时刻，如秒杀活动、周年庆、定期优惠等。</p><h4 id="41-rocketmq-基本概念"><a class="markdownIt-Anchor" href="#41-rocketmq-基本概念"></a> 4.1 RocketMQ 基本概念</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">Kafka</th><th style="text-align:center">RocketMQ</th></tr></thead><tbody><tr><td style="text-align:center">逻辑队列</td><td style="text-align:center">Topic</td><td style="text-align:center">Topic</td></tr><tr><td style="text-align:center">消息体</td><td style="text-align:center">Message</td><td style="text-align:center">Message</td></tr><tr><td style="text-align:center">标签</td><td style="text-align:center">无</td><td style="text-align:center">Tag</td></tr><tr><td style="text-align:center">分区</td><td style="text-align:center">Partition</td><td style="text-align:center">Consumer Queue</td></tr><tr><td style="text-align:center">生产者</td><td style="text-align:center">Producer</td><td style="text-align:center">Producer</td></tr><tr><td style="text-align:center">生产者集群</td><td style="text-align:center">无</td><td style="text-align:center">Producer Group</td></tr><tr><td style="text-align:center">消费者</td><td style="text-align:center">Consumer</td><td style="text-align:center">Consumer</td></tr><tr><td style="text-align:center">消费者集群</td><td style="text-align:center">Consumer Group</td><td style="text-align:center">Consumer Group</td></tr><tr><td style="text-align:center">集群控制器</td><td style="text-align:center">Controller</td><td style="text-align:center">Nameserver</td></tr></tbody></table><p>Producer，Consumer，Broker这三个部分，Kafka 和 RocketMQ 是一样的，而 Kafka 中的 Partition 概念在这里叫做 Consumer Queue。</p><h4 id="42-rocketmq-架构"><a class="markdownIt-Anchor" href="#42-rocketmq-架构"></a> 4.2 RocketMQ 架构</h4><ul><li><p>数据流也是通过 Producer 发送给 Broker 集群，再由 Consumer 进行消费</p></li><li><p>Broker 节点有 Master 和 Slave 的概念</p></li><li><p>NameServer 为集群提供轻量级服务发现和路由</p></li></ul><h4 id="43-存储模型"><a class="markdownIt-Anchor" href="#43-存储模型"></a> 4.3 存储模型</h4><p>对于一个 Broker 来说所有的消息的会 append 到一个 CommitLog 上面，然后按照不同的 Queue，重新 Dispatch 到不同的 Consumer 中，这样 Consumer 就可以按照 Queue 进行拉取消费</p><p>但需要注意的是，这里的 Consumer Queue 所存储的并不是真实的数据，真实的数据其实只存在 CommitLog 中，这里存的仅仅是这个 Queue 所有消息在 CommitLog 上面的位置，相当于是这个 Queue 的一个密集索引</p><h4 id="44-rocketmq-高级特性"><a class="markdownIt-Anchor" href="#44-rocketmq-高级特性"></a> 4.4 RocketMQ - 高级特性</h4><p>事务场景：事务消息</p><p>延迟发送：延迟消息</p><p>处理失败：消费重试和死信队列</p><p>具体参考<a class="link"   href="https://rocketmq.apache.org/zh/" >RocketMQ 中文官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h4><ol><li>RocketMQ 的基本概念（Queue、Tag）</li><li>RocketMQ 的底层原理（架构模型、存储模型）</li><li>RocketMQ 的高级特性（事务消息、重试和死信队列，延迟队列）</li></ol><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><ul><li>前世今生：消息队列的发展历程</li><li>Kafka：基本概念、架构设计、底层原理、架构缺点</li><li>BMQ：架构设计、底层原理、与 Kafka 比较、高级特性</li><li>RocketMQ：架构设计、底层原理、高级特性</li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/68052232" >再过半小时，你就能明白kafka的工作原理了 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.cnblogs.com/listenfwind/p/12662968.html" >详细解析kafka之 kafka消费者组与重平衡机制 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://rocketmq.apache.org/zh/" >RocketMQ 中文官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7198168315080065083&quot; &gt;消息队列原理与实战 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了消息队列的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>分布式定时任务</title>
    <link href="https://www.entropy-tree.top/2023/02/08/golang-day12/"/>
    <id>https://www.entropy-tree.top/2023/02/08/golang-day12/</id>
    <published>2023-02-08T04:23:22.000Z</published>
    <updated>2023-03-31T23:55:52.478Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7197711583131697189" >分布式定时任务 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对分布式定时任务的学习<span id="more"></span></p><h2 id="分布式定时任务"><a class="markdownIt-Anchor" href="#分布式定时任务"></a> 分布式定时任务</h2><h3 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h3><ul><li>知识面扩充<ul><li>对分布式定时任务建立起宏观的认知，并深入了解其实现原理</li><li>了解关联的单机定时任务、大数据处理引擎，通过了解不同实现方案的优劣来拓展知识面</li></ul></li><li>项目实践能力加强<ul><li>了解在哪些实际业务场景中使用分布式定时任务</li><li>对于实际业务场景中的中间件选型、技术方案做到胸有成竹</li></ul></li></ul><h3 id="1前言"><a class="markdownIt-Anchor" href="#1前言"></a> 1.前言</h3><p>作为后端开发者，面对亿级用户规模、亿级资金规模、百万级读写 QPS，如何设计一个最终开奖环节技术方案？</p><p>分布式定时任务 = 自动化 + 定时执行 + 海量数据 + 高效稳定</p><h3 id="2发展历程"><a class="markdownIt-Anchor" href="#2发展历程"></a> 2.发展历程</h3><h4 id="21-windows-批处理"><a class="markdownIt-Anchor" href="#21-windows-批处理"></a> 2.1 Windows 批处理</h4><ul><li>Case 1：10 分钟后 Windows 电脑自动关机<ol><li>桌面空白处右键单击-新建-文本文档</li><li>更改文件名和后缀名为“自动关机.bat”</li><li>修改文件内容为“shutdown -s -t 600”，表示 10 发展后自动关机</li><li>双击运行该批处理文件，电脑将在会在 10 分钟之后自动关机</li></ol></li></ul><h4 id="22-windows-任务计划程序"><a class="markdownIt-Anchor" href="#22-windows-任务计划程序"></a> 2.2 Windows 任务计划程序</h4><ul><li>Case 2：每天 12:00 自动疫情打卡</li><li>具体设置方法参考相关资料</li></ul><h4 id="23-linux-任务计划-cronjob"><a class="markdownIt-Anchor" href="#23-linux-任务计划-cronjob"></a> 2.3 Linux 任务计划-CronJob</h4><ul><li>Case 3：每天 02:30 定时清理机器日志</li><li>Linux 系统命令，使用简单，稳定可靠</li><li>但只能控制单机，且不适用于其他操作系统</li><li>参考<a class="link"   href="https://www.cnblogs.com/love-snow/articles/7364888.html" >linux CronJob 教程 定时任务 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul><h4 id="24-单机定时任务"><a class="markdownIt-Anchor" href="#24-单机定时任务"></a> 2.4 单机定时任务</h4><h5 id="timer-ticker"><a class="markdownIt-Anchor" href="#timer-ticker"></a> Timer、Ticker</h5><ul><li><p>Case 4：每隔 5 分钟定时刷新本地缓存数据</p></li><li><p>通过代码实现</p><p>Java</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">    <span class="type">Timer</span> <span class="variable">timer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timer</span>();</span><br><span class="line">    timer.schedule(<span class="keyword">new</span> <span class="title class_">TimerTask</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            SyncLocalCache();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">5000</span>, <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Go</p><div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ticker := time.NewTicker(<span class="number">5</span> * time.Minute)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> &lt;- ticker.C:</span><br><span class="line">            SyncLocalCache()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>跨平台可用</p></li><li><p>仅单机可用</p></li></ul><h5 id="scheduledexecutorservice"><a class="markdownIt-Anchor" href="#scheduledexecutorservice"></a> ScheduledExecutorService</h5><ul><li><p>Case 5：每隔 5 分钟定时执行多个任务</p><p>Java</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ScheduledExecutorService scheduler;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">    scheduler = Executors.newScheduledThreadPool(<span class="number">5</span>);</span><br><span class="line">    scheduler.scheduleAtFixedRate(</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                DoSomething();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">0</span>, <span class="number">300</span>, TimeUnit.SECONDS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>拥有线程池功能</p></li><li><p>仅单机可用</p></li></ul><h4 id="25-任务调度-quartz"><a class="markdownIt-Anchor" href="#25-任务调度-quartz"></a> 2.5 任务调度-Quartz</h4><ul><li>单任务极致控制</li><li>没有负载均衡机制</li><li>参考<a class="link"   href="https://zhuanlan.zhihu.com/p/306591082" >Quartz 是什么？一文带你入坑 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul><h4 id="26-分布式定时任务"><a class="markdownIt-Anchor" href="#26-分布式定时任务"></a> 2.6 分布式定时任务</h4><ul><li>平台化部署</li><li>分布式部署</li><li>支持海量数据</li></ul><h5 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h5><p>定时任务是指系统为了自动完成特定任务，实时、延时、周期性完成任务调度的过程。解决了自动化和准时化这两个问题。</p><p>分布式定时任务是把分散的、可靠性差的定时任务纳入统一的平台，并实现集群管理调度和分布式部署的一种定时任务的管理方式。解决了高性能、可靠性、分布式部署等问题。</p><p>按触发时机分类</p><ul><li>定时任务：特定时间触发，例如今天 16:00 执行</li><li>延时任务：延时触发，例如 10 分钟后执行</li><li>周期任务：固定周期时间或固定频率周期调度触发，例如每隔 5秒 或者每天 12:00 执行</li></ul><h5 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h5><ul><li>自动化：全自动完成定时任务的调度和执行</li><li>平台化：基于平台化的思维管控一系列的分布式定时任务</li><li>分布式：在分布式系统环境下运行任务调度，突破单机定时任务的性能瓶颈</li><li>伸缩性：采用集群方式部署，可以随时按需扩缩容</li><li>高可用：单点故障不影响最终任务结果，可以实现故障转移</li></ul><h5 id="执行方式"><a class="markdownIt-Anchor" href="#执行方式"></a> 执行方式</h5><ul><li>单机任务：随机触发一台机器执行任务，适用于计算量小、并发度低的任务</li><li>广播任务：广播到所有机器上执行同一个任务，例如所有机器一起清理日志</li><li>Map 任务：一个任务可以分出多个子任务，每个子任务负责一部分的计算。适用于计算量大，单机无法满足要求的任务</li><li>MapReduce 任务：在 Map 任务的基础上，对所有子任务的结果做汇总计算，适用于计算量大，并且需要对子任务结果做汇总的任务</li></ul><h4 id="27-业内定时任务框架"><a class="markdownIt-Anchor" href="#27-业内定时任务框架"></a> 2.7 业内定时任务框架</h4><table><thead><tr><th style="text-align:center">框架</th><th style="text-align:center">来源</th><th style="text-align:center">是否开源</th><th style="text-align:center">任务编排</th><th style="text-align:center">任务分片</th><th style="text-align:center">高可用</th><th style="text-align:center">故障转移</th><th style="text-align:center">可视化运维</th></tr></thead><tbody><tr><td style="text-align:center">Xxl-job</td><td style="text-align:center">美团点评</td><td style="text-align:center">是</td><td style="text-align:center">子任务依赖</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">SchedulerX</td><td style="text-align:center">阿里巴巴</td><td style="text-align:center">否</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">TCT</td><td style="text-align:center">腾讯</td><td style="text-align:center">否</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">Elastic-job</td><td style="text-align:center">当当网</td><td style="text-align:center">是</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">Saturn</td><td style="text-align:center">唯品会</td><td style="text-align:center">是</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr></tbody></table><h5 id="xxl-job"><a class="markdownIt-Anchor" href="#xxl-job"></a> Xxl-job</h5><p>Xxl-job 是一个轻量级分布式任务调度框架，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。Xxl-job 支持分片，简单支持任务依赖，支持子任务依赖，不是跨平台的。</p><p>Xxl-job 很大的一个优势在于开源且免费，并且轻量级，开箱即用，操作简单，上手快，企业维护成本不高，因而在中小型公司使用非常广泛。</p><h5 id="schedulerx"><a class="markdownIt-Anchor" href="#schedulerx"></a> SchedulerX</h5><p>分布式任务调度 ScheduleX 2.0 是阿里巴巴基于 Akka 架构自研的新一代分布式任务调度平台，提供定时调度、调度任务编排和分布式批量处理等功能。</p><p>SchedulerX 可在阿里云付费使用。它的功能非常强大，在阿里巴巴内部广泛使用并久经考验。</p><h5 id="tct"><a class="markdownIt-Anchor" href="#tct"></a> TCT</h5><p>分布式任务调度服务 Tencent Cloud Task 是腾讯自主研发的一款高性能、高可靠通用的分布式任务调度中间件，通过指定时间规则严格触发调度任务，保障任务的可靠有序执行。该服务支持国际通用的时间表达式、调度任务执行生命周期管理，解决传统定时调度任务单点及并发性能问题。同时，支持任务分片、流程编排复杂调度任务处理能力，覆盖广泛的任务调度应用场景。</p><p>TCT 仅在腾讯内部使用，未开源、未商用。</p><h4 id="28-知识面扩充"><a class="markdownIt-Anchor" href="#28-知识面扩充"></a> 2.8 知识面扩充</h4><h5 id="分布式定时任务和单机定时任务"><a class="markdownIt-Anchor" href="#分布式定时任务和单机定时任务"></a> 分布式定时任务和单机定时任务</h5><p>共同点</p><ul><li>都可以实现自动化的定时、延时、周期任务调度</li></ul><p>差异</p><ul><li>分布式定时任务可支撑更大的业务体量</li><li>分布式定时任务的性能、伸缩性、稳定性更高</li></ul><h5 id="分布式定时任务和大数据处理引擎"><a class="markdownIt-Anchor" href="#分布式定时任务和大数据处理引擎"></a> 分布式定时任务和大数据处理引擎</h5><p>共同点</p><ul><li>都可以对海量数据做处理</li><li>性能、伸缩性、稳定性都很高</li></ul><p>差异</p><ul><li>定时并不是大数据处理引擎要解决的核心问题</li><li>大数据引擎往往致力于将源数据处理成结果数据，分布式定时任务除了做这个之外，还能调用 HTTP 和 RPC 服务</li></ul><h4 id="29-小结"><a class="markdownIt-Anchor" href="#29-小结"></a> 2.9 小结</h4><ul><li>生活用途<ul><li>Windows 批处理</li><li>Windows 任务计划程序</li></ul></li><li>工作用途<ul><li>Linux 任务计划 — cronjob</li><li>单机定时任务 — Timer、Ticker</li><li>单机定时任务 — ScheduledExecutorService</li><li>任务调度 — Quartz</li><li>分布式定时任务</li></ul></li><li>分布式定时任务<ul><li>触发时机：定时、延时、周期</li><li>执行方式：单机、广播、Map、MapReduce</li><li>业内流行框架：Xxl-job、SchedulerX、TCT</li><li>关联技术：单机定时任务、大数据处理引擎</li></ul></li></ul><h3 id="3实现原理"><a class="markdownIt-Anchor" href="#3实现原理"></a> 3.实现原理</h3><h4 id="31-核心架构"><a class="markdownIt-Anchor" href="#31-核心架构"></a> 3.1 核心架构</h4><p>分布式定时任务核心要解决触发、调度、执行三个关键问题</p><ul><li><p>触发器：Trigger,解析任务，生成触发事件</p></li><li><p>调度器：Scheduler，获取执行任务单元，管理任务生命周期</p></li><li><p>执行器：Executor，获取执行任务单元，执行任务逻辑</p></li></ul><p>除此之外，还需要提供一个控制台（Admin），提供任务管理和干预的功能。</p><h5 id="数据流"><a class="markdownIt-Anchor" href="#数据流"></a> 数据流</h5><p>任务创建：用户 —&gt; 任务基础信息、触发规则、任务代码 —&gt; 控制台（Admin）—&gt; 任务 DB</p><p>任务执行：控制台（Admin）—&gt; 触发器 Trigger —&gt; 调度器 Scheduler —&gt; 执行器 Executor</p><h5 id="功能架构"><a class="markdownIt-Anchor" href="#功能架构"></a> 功能架构</h5><p>Admin：元数据存储、元数据状态流转、任务分片、任务依赖、规则引擎、任务暂停/恢复、日志管理、监控报警、指标统计、…</p><p>Trigger：解析引擎、Scanner、可靠投递、状态流转、补偿策略</p><p>Scheduler：调度、负载均衡、幂等控制、容错、故障转移、限流、计费、平滑启停、状态管控、…</p><p>Executor：注册、任务获取、任务执行、状态上报、日志处理、本地幂等、任务回调、…</p><h4 id="32-控制台"><a class="markdownIt-Anchor" href="#32-控制台"></a> 3.2 控制台</h4><h5 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h5><ul><li>任务：Job，任务元数据</li><li>任务实例：JobInstance，周期任务会生成多个任务实例</li><li>任务结果：JobResult，任务实例运行的结果</li><li>任务历史：JobHistory，用户可以修改任务信息，任务实例对应的任务元数据可以不同，因而使用任务历史存储</li></ul><h5 id="任务元数据"><a class="markdownIt-Anchor" href="#任务元数据"></a> 任务元数据</h5><p>任务元数据（Job）是用户对任务属性的定义，包括任务类型调度时机、执行行为等。</p><h5 id="任务实例"><a class="markdownIt-Anchor" href="#任务实例"></a> 任务实例</h5><p>任务实例（JobInstance）是一个确定的 Job 的一次运行实例。</p><h4 id="33-触发器"><a class="markdownIt-Anchor" href="#33-触发器"></a> 3.3 触发器</h4><h5 id="核心职责"><a class="markdownIt-Anchor" href="#核心职责"></a> 核心职责</h5><p>给定一系列任务，解析它们的触发规则，在规定的时间点触发任务的调度</p><h5 id="设计约束"><a class="markdownIt-Anchor" href="#设计约束"></a> 设计约束</h5><ul><li>需支持大量任务</li><li>需支持秒级的调度</li><li>周期任务需要多次执行</li><li>需保证秒级扫描的高性能，并避免资源浪费</li></ul><h5 id="方案-1"><a class="markdownIt-Anchor" href="#方案-1"></a> 方案 1</h5><p>定期扫描 + 延时消息</p><p>定时扫描的机器集群部署，通过分布式锁保证只有一台机器在调度。</p><h5 id="方案-2"><a class="markdownIt-Anchor" href="#方案-2"></a> 方案 2</h5><p>时间轮（Quartz 方案）</p><p>时间轮是一种高效利用线程资源进行批量化调度的一种调度模型。时间轮是一个存储环形队列，底层采用数组实现，数组中的每个元素可以存放一个定时任务列表。</p><p>目标：遍历任务列表，从中找出当前时间点需触发的任务列表</p><p>几种存储方式的比较</p><ol><li><p>使用链表存储任务，每个元素代表一个任务。查询复杂度 O(n)，修改复杂度 O(1)</p></li><li><p>使用最小堆存储任务，按执行时间排序，每个节点存储同执行时间任务列表。查询复杂度 O(1)，修改复杂度 O(log n)</p></li><li><p>使用时间轮存储任务，每个节点存储同执行时间任务列表。查询复杂度 O(1)，修改复杂度 O(1)</p><p>存在刻度容量问题。</p></li><li><p>使用多时间轮存储任务，上一级时间轮转过对应刻度后把任务塞入下级时间轮中。</p></li></ol><h5 id="高可用"><a class="markdownIt-Anchor" href="#高可用"></a> 高可用</h5><p>核心问题</p><ul><li>不同业务之间，任务的调度会相互影响</li><li>负责扫描和触发的机器出现故障</li></ul><p>解法思路</p><ul><li>存储上，不同级别、业务做资源隔离</li><li>运行时，不同级别、业务分开执行</li><li>部署时，采用多机房集群化部署，避免单点故障，通过数据库锁或分布式锁保证任务只能被触发一次</li></ul><p>问题</p><ul><li>单 Trigger 模式：会有单点故障，机器故障时平台崩溃。</li><li>Trigger 集群模式：可避免单点故障，但需要避免同一任务被多次触发，导致业务紊乱。</li></ul><h5 id="数据库行锁模式"><a class="markdownIt-Anchor" href="#数据库行锁模式"></a> 数据库行锁模式</h5><p>在触发调度之前，更新数据库中 JobInstance 的状态，成功抢锁的才会触发调度。但是多台机器频繁竞争数据库锁，节点越多性能越差。</p><h5 id="分布式锁模式"><a class="markdownIt-Anchor" href="#分布式锁模式"></a> 分布式锁模式</h5><p>在触发调度之前，尝试抢占分布式锁，可使用 Redis 锁或 Zookeeper 锁。性能较高，是比较广泛使用的方案。</p><h4 id="34-调度器"><a class="markdownIt-Anchor" href="#34-调度器"></a> 3.4 调度器</h4><h5 id="资源来源"><a class="markdownIt-Anchor" href="#资源来源"></a> 资源来源</h5><p>业务系统提供机器资源</p><p>优点</p><ul><li>任务执行逻辑与业务系统共用同一份资源，利用率更高</li></ul><p>缺点</p><ul><li>更容易发生定时任务脚本影响在线服务的事故</li><li>不能由定时任务平台控制扩缩容</li></ul><p>定时任务平台提供机器资源</p><p>优点</p><ul><li>任务执行逻辑与业务系统提供的在线服务隔离，避免相互影响</li><li>可以支持优雅地扩缩容</li></ul><p>缺点</p><ul><li>消耗更多的机器资源</li><li>需要额外为定时任务平台申请接口调用权限，而不能直接继承业务系统的权限</li></ul><h5 id="节点选择"><a class="markdownIt-Anchor" href="#节点选择"></a> 节点选择</h5><ul><li><p>随机节点执行：选择集群中一个可用的节点执行调度任务。</p><p>适用场景：定时对账。</p></li><li><p>广播执行：在集群中所有的执行节点分发调度任务并执行。</p><p>适用场景：批量运维。</p></li><li><p>分片执行：按照用户自定义分片逻辑进行拆分，分发到集群中不同节点并行执行，提升资源利用效率。</p><p>适用场景：海量日志统计。</p></li></ul><h5 id="任务分片"><a class="markdownIt-Anchor" href="#任务分片"></a> 任务分片</h5><p>通过任务分片来提高任务执行的效率和资源的利用率。N 个执行器 Executor，M 个业务数据区域段，最好 M &gt;= N，且 M 是 N 的整数倍。</p><h5 id="任务编排"><a class="markdownIt-Anchor" href="#任务编排"></a> 任务编排</h5><p>使用有向无环图 DAG（Directed Acyclic Graph）进行可视化任务编排。</p><h5 id="高级特性-故障转移"><a class="markdownIt-Anchor" href="#高级特性-故障转移"></a> 高级特性 - 故障转移</h5><p>故障转移：确保部分执行单元任务失败时，任务最终成功。</p><p>分片任务基于一致性 hash 策略分发任务，当某 Executor 异常时，调度器会将任务分发到其他 Executor。</p><h5 id="高可用-2"><a class="markdownIt-Anchor" href="#高可用-2"></a> 高可用</h5><p>调度器可以集群部署，做到完全的无状态，靠消息队列的重试机制保障任务一定会被调度。</p><h4 id="35-执行器"><a class="markdownIt-Anchor" href="#35-执行器"></a> 3.5 执行器</h4><p>基于注册中心，可以做到执行器的弹性扩缩容。</p><h4 id="36-小结"><a class="markdownIt-Anchor" href="#36-小结"></a> 3.6 小结</h4><ul><li>核心架构<ul><li>控制台 Admin、触发器 Trigger、调度器 Scheduler、执行器 Executor</li></ul></li><li>业务模型<ul><li>任务元数据 Job、任务实例 JobInstance、任务结果 JobResult、任务历史 JobHistory</li></ul></li><li>触发器<ul><li>定时扫描 + 延时消息</li><li>时间轮<ul><li>链表、最小堆、时间轮、多级时间轮</li></ul></li></ul></li><li>调度器<ul><li>资源来源</li><li>资源调度：节点选择、任务分片、任务编排、故障转移</li></ul></li><li>执行器<ul><li>注册、调度、回调、心跳检测</li></ul></li></ul><h3 id="4业务应用"><a class="markdownIt-Anchor" href="#4业务应用"></a> 4.业务应用</h3><p>所有需要定时、延时、周期性执行任务的业务场景，都可以考虑使用分布式定时任务。</p><p>电商</p><ul><li>订单 30 分钟未付款自动关闭订单</li><li>定时给商家、达人发送消息，给用户发放优惠券等</li></ul><p>互动</p><ul><li>支付宝集五福</li><li>集卡瓜分红包</li></ul><p>游戏</p><ul><li>活动结束后批量补发用户未领取的奖励</li><li>定期更新游戏内榜单</li></ul><h5 id="其他解决方案"><a class="markdownIt-Anchor" href="#其他解决方案"></a> 其他解决方案</h5><p>发货后超过 10 天未收货时系统自动确认收货</p><ul><li>使用分布式定时任务的延时任务</li><li>使用消息队列的延时消息或者定时消息</li></ul><p>春节集卡活动统计完成集卡的用户个数和总翻倍数</p><ul><li>使用分布式定时任务的 MapReduce 任务</li><li>使用大数据离线处理引擎 Hive 离线做统计</li><li>使用大数据实时处理引擎 Flink 实时做统计</li></ul><h5 id="对比"><a class="markdownIt-Anchor" href="#对比"></a> 对比</h5><table><thead><tr><th style="text-align:center">解决方案</th><th style="text-align:center">时效性</th><th style="text-align:center">可控性</th><th style="text-align:center">简洁性</th><th style="text-align:center">主要缺点</th></tr></thead><tbody><tr><td style="text-align:center">分布式定时任务</td><td style="text-align:center">秒级</td><td style="text-align:center">高</td><td style="text-align:center">高</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">单机定时任务</td><td style="text-align:center">秒级</td><td style="text-align:center">高</td><td style="text-align:center">高</td><td style="text-align:center">无法支撑很大业务体量</td></tr><tr><td style="text-align:center">延时消息</td><td style="text-align:center">实时</td><td style="text-align:center">低</td><td style="text-align:center">中</td><td style="text-align:center">在任务有变化时，已发送的延时消息不便于做变动</td></tr><tr><td style="text-align:center">离线计算</td><td style="text-align:center">小时级</td><td style="text-align:center">中</td><td style="text-align:center">高</td><td style="text-align:center">时延至少小时级</td></tr><tr><td style="text-align:center">实时计算</td><td style="text-align:center">秒级</td><td style="text-align:center">高</td><td style="text-align:center">中</td><td style="text-align:center">只能做数据处理，无法调用 HTTP/RPC 请求完成业务逻辑处理</td></tr></tbody></table><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://blog.51cto.com/xiaoyuanzheng/5662986" >Windows 任务计划程序（task scheduler）介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.cnblogs.com/love-snow/articles/7364888.html" >linux CronJob 教程 定时任务 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/306591082" >Quartz 是什么？一文带你入坑 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/36627346" >美团点评许雪里：分布式任务调度平台 XXL-JOB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://xie.infoq.cn/article/5dfcab3b430d549f006882635" >时间轮原理及其在框架中的应用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7197711583131697189&quot; &gt;分布式定时任务 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对分布式定时任务的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>黑灰产监控与防御</title>
    <link href="https://www.entropy-tree.top/2023/02/07/golang-day11/"/>
    <id>https://www.entropy-tree.top/2023/02/07/golang-day11/</id>
    <published>2023-02-07T13:12:07.000Z</published>
    <updated>2023-03-31T23:55:52.478Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7197404867802038330" >黑灰产监控与防御 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对黑灰产监控与防御的学习<span id="more"></span></p><h2 id="黑灰产监控与防御"><a class="markdownIt-Anchor" href="#黑灰产监控与防御"></a> 黑灰产监控与防御</h2><h3 id="1黑产介绍"><a class="markdownIt-Anchor" href="#1黑产介绍"></a> 1.黑产介绍</h3><h4 id="一些常见的黑产"><a class="markdownIt-Anchor" href="#一些常见的黑产"></a> 一些常见的黑产</h4><p>诈骗、木马、薅羊毛、钓鱼、黄牛、病毒、博彩、拖库、引流、盗号、跑分、勒索软件</p><h4 id="黑色产业规模"><a class="markdownIt-Anchor" href="#黑色产业规模"></a> 黑色产业规模</h4><ul><li><p>中国“网络黑产”从业人员已超过 150 万，市场规模已经达到千亿级别 - 中国法院网 2017 年</p></li><li><p>截止 2022 年 12 曰，haveibeenpwned 已收录了约 120 亿条账号密码数据</p><p>可访问 <a class="link"   href="https://haveibeenpwned.com/" >https://haveibeenpwned.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 查看一下自己的账号密码是否在其中</p></li><li><p>某互联网风控公司统计，2018 年各类黑产攻击（业务层）总数超过 300 亿次</p></li><li><p>据不完全统计，2019 年全网约有 5000 万左右的非实名手机卡被频繁用于各种欺诈活动</p></li><li><p>据不完全统计，仅中国境内每天约有 350-400 万个代理 IP 被用于各类欺诈活动</p></li><li><p>…</p></li></ul><h4 id="黑产发展趋势"><a class="markdownIt-Anchor" href="#黑产发展趋势"></a> 黑产发展趋势</h4><ul><li>规模化：借助脚本软件实现自动化、批量化攻击</li><li>组织化：以工作室甚至公司的形式运作，分工明确、合作紧密</li><li>平台化：<ul><li>出现很多平台级的爬虫、群控、钓鱼木马等，难以追查</li><li>通过各类平台将黑产手中零散的资源进行整合</li></ul></li></ul><h3 id="2常见的黑产技术分析"><a class="markdownIt-Anchor" href="#2常见的黑产技术分析"></a> 2.常见的黑产技术分析</h3><h4 id="开户流程"><a class="markdownIt-Anchor" href="#开户流程"></a> 开户流程</h4><p>实名认证 —&gt; 绑定银行卡 —&gt; 审核开户</p><h4 id="对抗攻击手段"><a class="markdownIt-Anchor" href="#对抗攻击手段"></a> 对抗攻击手段</h4><ul><li>人脸识别对抗<ul><li>伪造人脸数据</li></ul></li><li>地理位置对抗<ul><li>定位打卡</li><li>摇一摇、附近的人</li><li>出租车抢单</li><li>某些线下优惠</li><li>…</li></ul></li></ul><h3 id="3安全防护体系的建设"><a class="markdownIt-Anchor" href="#3安全防护体系的建设"></a> 3.安全防护体系的建设</h3><h4 id="事前"><a class="markdownIt-Anchor" href="#事前"></a> 事前</h4><ul><li>情报监控<ul><li>暗网</li><li>贴吧</li><li>TG</li><li>破解论坛</li></ul></li><li>SDLC：软件开发生命周期的阶段和模型</li><li>漏洞扫描</li></ul><h4 id="事中"><a class="markdownIt-Anchor" href="#事中"></a> 事中</h4><ul><li>渗透测试</li><li>威胁感知<ul><li>用户行为异常</li><li>接口数据异常</li><li>恶意流量检测</li></ul></li><li>风控/安全策略</li></ul><h4 id="事后"><a class="markdownIt-Anchor" href="#事后"></a> 事后</h4><ul><li>威胁建模</li><li>攻击溯源</li></ul><h4 id="关键要素"><a class="markdownIt-Anchor" href="#关键要素"></a> 关键要素</h4><p>验证码、安全 SDK、代理检测、人脸识别、黑产名单、…</p><p>WAF（WEB应用程序防火墙）、IDS（入侵检测系统）、DLP、终端安全防护、行为审计、…</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/450678659" >对抗攻击-人脸识别 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/575438524" >解密地理位置模拟攻防之道 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.jianshu.com/p/8e570d9049e0" >SDLC：软件开发生命周期的阶段和模型 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://juejin.cn/post/7196959046603227195" >黑灰产监控与防御 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7197404867802038330&quot; &gt;黑灰产监控与防御 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对黑灰产监控与防御的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>系统设计</title>
    <link href="https://www.entropy-tree.top/2023/02/06/golang-day10/"/>
    <id>https://www.entropy-tree.top/2023/02/06/golang-day10/</id>
    <published>2023-02-06T12:37:26.000Z</published>
    <updated>2023-03-31T23:55:52.478Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7197022389850439735" >系统设计 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对秒杀系统设计的学习<span id="more"></span></p><h2 id="系统设计之秒杀系统"><a class="markdownIt-Anchor" href="#系统设计之秒杀系统"></a> 系统设计之秒杀系统</h2><h3 id="1系统设计方法论"><a class="markdownIt-Anchor" href="#1系统设计方法论"></a> 1.系统设计方法论</h3><h4 id="系统设计的思考问题"><a class="markdownIt-Anchor" href="#系统设计的思考问题"></a> 系统设计的思考问题</h4><ul><li>为什么要做系统设计</li><li>系统设计的定义是什么</li><li>怎么做系统设计，如何落地一个系统</li><li>系统功能实现之后，如何分析瓶颈并优化</li><li>如何验证系统的可用性和稳定性</li></ul><h4 id="系统设计的目的"><a class="markdownIt-Anchor" href="#系统设计的目的"></a> 系统设计的目的</h4><p>对个人</p><ul><li>面试</li><li>个人能力提升</li><li>拓展技术视野</li></ul><p>对工作</p><ul><li>业务驱动</li><li>系统重构</li><li>突破和创新</li></ul><h4 id="系统评估角度"><a class="markdownIt-Anchor" href="#系统评估角度"></a> 系统评估角度</h4><p>可用性、易用性、可维护性、安全性、性能、扩展性、耦合性、伸缩性</p><h4 id="系统设计的定义"><a class="markdownIt-Anchor" href="#系统设计的定义"></a> 系统设计的定义</h4><p>系统</p><ul><li>关联的个体</li><li>规则运作</li><li>组成工作的整体</li></ul><p>设计</p><ul><li>设想和计划</li><li>目的</li><li>过程安排</li></ul><p>系统设计是为了达成某种目的，通过个体组成整体的过程</p><h4 id="系统设计的流程"><a class="markdownIt-Anchor" href="#系统设计的流程"></a> 系统设计的流程</h4><ul><li>场景：用什么系统，需要哪些功能，多大的并发量</li><li>存储：数据如何组织，SQL 存储，NoSQL 存储</li><li>服务：业务功能实现和逻辑整合</li><li>扩展：解决设计缺陷，提高鲁棒性、扩展性</li></ul><h4 id="系统瓶颈的发现"><a class="markdownIt-Anchor" href="#系统瓶颈的发现"></a> 系统瓶颈的发现</h4><p>方法角度</p><ul><li>火焰图分析</li><li>链路追踪</li><li>性能测试</li></ul><h4 id="如何保证系统的可用性和稳定性"><a class="markdownIt-Anchor" href="#如何保证系统的可用性和稳定性"></a> 如何保证系统的可用性和稳定性</h4><ul><li>链路梳理：核心链路、流量漏洞、强弱依赖</li><li>可观测性：链路追踪、核心监控、业务报警</li><li>全链路测试：压力测试、负载测试、容量测试</li><li>稳定性控制：系统限流、业务兜底、熔断降级</li><li>容灾演练：混沌工程、应急手册、容灾预案</li></ul><h3 id="2电商秒杀业务介绍"><a class="markdownIt-Anchor" href="#2电商秒杀业务介绍"></a> 2.电商秒杀业务介绍</h3><h4 id="电商介绍"><a class="markdownIt-Anchor" href="#电商介绍"></a> 电商介绍</h4><ul><li>供给侧：商品、商家、供应链</li><li>消费侧：消费者、用户、流量来源</li><li>交易环境：线下商城、线上电商</li></ul><p>进一步分析</p><ul><li><p>商品：具有交易价值和属性的信息载体。</p></li><li><p>关于电商涉及到两个概念：SPU 和 SKU</p><blockquote><p>SPU(Standard Product Unit)：标准化产品单元。是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个SPU</p><p>SKU(Stock Keeping Unit): 库存量单位。SKU即库存进出计量的单位， 可以是以件、盒、托盘等为单位</p></blockquote></li></ul><h4 id="秒杀业务的特点"><a class="markdownIt-Anchor" href="#秒杀业务的特点"></a> 秒杀业务的特点</h4><ul><li>瞬时流量高</li><li>读多写少</li><li>实时性要求高</li></ul><h4 id="秒杀业务的难点"><a class="markdownIt-Anchor" href="#秒杀业务的难点"></a> 秒杀业务的难点</h4><p>高性能、资源成本、扩展性、防止超卖、反欺诈、鲁棒性、流量管控</p><h4 id="设计秒杀系统"><a class="markdownIt-Anchor" href="#设计秒杀系统"></a> 设计秒杀系统</h4><h5 id="场景scenario"><a class="markdownIt-Anchor" href="#场景scenario"></a> 场景（Scenario）</h5><ul><li>功能：秒杀活动发布、秒杀商品详情、秒杀下单</li><li>并发：万人参与秒杀、QPS 1w+、TPS 1k+</li></ul><h5 id="存储storage"><a class="markdownIt-Anchor" href="#存储storage"></a> 存储（Storage）</h5><p>MySQL —&gt; Redis —&gt; Localcache</p><h5 id="服务service"><a class="markdownIt-Anchor" href="#服务service"></a> 服务（Service）</h5><ul><li><p>子服务：用户服务、风控服务、活动服务、订单服务</p></li><li><p>基础组件：ID 生成器、缓存组件、MQ 组件、限流组件</p></li></ul><h5 id="扩展scale"><a class="markdownIt-Anchor" href="#扩展scale"></a> 扩展（Scale）</h5><ul><li>流量隔离、CDN、缓存优化、流量管控（例如基于速率或信号控制、限流、拦截、过滤以及设置机房流量配比等）</li><li>数据库扩展、服务·水平扩展、MQ 扩展、Redis 扩展、服务垂直扩展</li></ul><h4 id="系统架构"><a class="markdownIt-Anchor" href="#系统架构"></a> 系统架构</h4><ul><li>用户层：WEB、IOS、Android</li><li>接入层：Nginx</li><li>应用层：发布活动、秒杀详情、秒杀下单、ID 生成器、限流组件、MQ 组件、Cache 组件</li><li>基础层：Redis、RocketMQ、MySQL</li></ul><h3 id="3实践"><a class="markdownIt-Anchor" href="#3实践"></a> 3.实践</h3><p>流程图</p><img                       lazyload                     src="/images/loading.svg"                     data-src="/2023/02/06/golang-day10/golang-day10.png"                      class="" title="golang-day10"                ><h3 id="4总结"><a class="markdownIt-Anchor" href="#4总结"></a> 4.总结</h3><ul><li><p>服务无状态</p></li><li><p>批量写入</p></li><li><p>最终一致性</p></li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/523479439" >鲁棒性的含义以及如何提高模型的鲁棒性 - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/150101068" >浅谈电商中的spu和sku - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7197022389850439735&quot; &gt;系统设计 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对秒杀系统设计的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微服务架构</title>
    <link href="https://www.entropy-tree.top/2023/02/04/golang-day9/"/>
    <id>https://www.entropy-tree.top/2023/02/04/golang-day9/</id>
    <published>2023-02-04T15:56:51.000Z</published>
    <updated>2023-03-31T23:55:52.499Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于第五届字节跳动青训营活动，已收录到<a class="link"   href="https://juejin.cn/post/7196678344573337656" >微服务架构 | 青训营笔记 - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，主要记录了对微服务架构原理与治理实践的学习<span id="more"></span></p><h2 id="微服务架构原理与治理实践"><a class="markdownIt-Anchor" href="#微服务架构原理与治理实践"></a> 微服务架构原理与治理实践</h2><h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3><p>微服务架构是当前大多数互联网公司的标准架构。</p><p>主要学习微服务架构的由来及原理、服务治理功能工作机制。</p><h3 id="1微服务架构介绍"><a class="markdownIt-Anchor" href="#1微服务架构介绍"></a> 1.微服务架构介绍</h3><h4 id="11-系统架构演变历史"><a class="markdownIt-Anchor" href="#11-系统架构演变历史"></a> 1.1 系统架构演变历史</h4><p>架构演变的原因</p><ul><li>互联网的爆炸性发展</li><li>硬件设施的快速发展</li><li>需求复杂性的多样化</li><li>开发人员的急剧增加</li><li>计算机理论及技术的发展</li></ul><p>单体架构 —&gt; 垂直应用架构 —&gt; 分布式架构 —&gt; SOA 架构 —&gt; 微服务架构</p><h5 id="单体架构"><a class="markdownIt-Anchor" href="#单体架构"></a> 单体架构</h5><ul><li><p>优势</p><ol><li><p>性能最高</p></li><li><p>冗余小</p></li></ol></li><li><p>劣势</p><ol><li><p>debug 困难</p></li><li><p>模块相互影响（非核心功能可能导致程序崩溃）</p></li><li><p>模块分工、依赖管理困难，开发流程几乎无法分工</p></li></ol></li></ul><h5 id="垂直应用架构"><a class="markdownIt-Anchor" href="#垂直应用架构"></a> 垂直应用架构</h5><p>安装业务线垂直划分</p><ul><li>优势：业务独立开发维护</li><li>劣势<ol><li>不同业务存在冗余，无法复用</li><li>每个业务还是单体</li></ol></li></ul><h5 id="分布式架构"><a class="markdownIt-Anchor" href="#分布式架构"></a> 分布式架构</h5><p>抽取出业务无关的公共模块</p><ul><li>优势：业务无关的独立服务</li><li>劣势<ol><li>服务模块 bug 可能导致全站瘫痪</li><li>调用关系复杂</li><li>不同服务冗余</li></ol></li></ul><h5 id="soa-架构service-oriented-architecture"><a class="markdownIt-Anchor" href="#soa-架构service-oriented-architecture"></a> SOA 架构（Service Oriented Architecture）</h5><p>面向服务的架构</p><ul><li>优势：服务注册</li><li>劣势<ol><li>整个系统设计是中心化的</li><li>需要从上至下设计</li><li>重构困难</li></ol></li></ul><h5 id="微服务架构"><a class="markdownIt-Anchor" href="#微服务架构"></a> 微服务架构</h5><p>彻底服务化的架构</p><ul><li>优势<ol><li>高效的开发迭代效率</li><li>业务独立设计</li><li>自下而上设计</li><li>故障隔离可控</li></ol></li><li>劣势<ol><li>治理、运维难度急剧增加</li><li>观测挑战</li><li>安全性问题</li><li>分布式系统本身的复杂性</li></ol></li></ul><h4 id="12-微服务架构概览"><a class="markdownIt-Anchor" href="#12-微服务架构概览"></a> 1.2 微服务架构概览</h4><p>从组件的维度去分析微服务架构的整体视角</p><ul><li>服务配置和治理：服务配置、服务治理</li><li>消息队列 MQ<ul><li>用户服务：用户数据库</li><li>商品服务：商品数据库</li><li>订单服务：订单数据库</li><li>广告服务：数据仓库、Redis</li></ul></li><li>链路追踪和监控：链路追踪、服务监控</li><li>网关</li></ul><h4 id="13-微服务架构核心要素"><a class="markdownIt-Anchor" href="#13-微服务架构核心要素"></a> 1.3 微服务架构核心要素</h4><ul><li>服务治理：服务注册、服务发现、负载均衡、扩缩容、流量治理、稳定性治理、…</li><li>可观测性：日志采集、日志分析、监控打点、监控大盘、异常报警、链路追踪、…</li><li>安全：身份验证、认证授权、访问令牌、审计、传输加密、黑产攻击、…</li></ul><h4 id="14-总结"><a class="markdownIt-Anchor" href="#14-总结"></a> 1.4 总结</h4><ul><li>系统架构的演变历史</li><li>微服务架构的整体概览</li><li>微服务架构的核心要素</li></ul><h3 id="2微服务架构原理及特征"><a class="markdownIt-Anchor" href="#2微服务架构原理及特征"></a> 2.微服务架构原理及特征</h3><h4 id="21-基本概念"><a class="markdownIt-Anchor" href="#21-基本概念"></a> 2.1 基本概念</h4><ul><li><p>服务（service）</p><p>一组具有相同逻辑的运行实体。</p></li><li><p>实例（instance）</p><p>一个服务中，每个运行实体即为一个实例。</p></li><li><p>实例与进程的关系</p><p>实例与进程之间没有必然对应关系，一个实例可以对应一个或多个进程（反过来不常见）。</p></li><li><p>集群（cluster）</p><p>通常指服务内部的逻辑划分，包含多个实例。</p></li><li><p>常见的实例承载形式</p><p>进程、VM、k8s pod、…</p></li><li><p>有状态/无状态服务</p><p>服务的实例是否存储了可持久化的数据，例如磁盘文件。</p></li><li><p>服务间通信</p><p>对于单体服务，不同模块通信只是简单的函数调用。</p><p>对于微服务，服务间通信意味着网络传输。</p></li></ul><h4 id="22-服务注册与发现"><a class="markdownIt-Anchor" href="#22-服务注册与发现"></a> 2.2 服务注册与发现</h4><p>问题：在代码层面，如何指定调用一个目标服务的地址（ip:port）？</p><h5 id="硬编码-hardcode"><a class="markdownIt-Anchor" href="#硬编码-hardcode"></a> 硬编码 hardcode</h5><div class="highlight-container" data-rel="Go"><figure class="iseeu highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Service A want to call Service B.</span></span><br><span class="line">client := grpc.NewClient(<span class="string">&quot;10.23.45.67:8080&quot;</span>)</span><br></pre></td></tr></table></figure></div><p>硬编码 hardcode 的问题：当服务存在多个实例时，hardcode 无法调用动态变化的服务地址。</p><h5 id="dns"><a class="markdownIt-Anchor" href="#dns"></a> DNS</h5><p>DNS 的思想就是中间层。</p><p>DNS 的问题</p><ul><li>本地 DNS 存在缓存，导致延时。</li><li>负载均衡问题。</li><li>不支持服务实例的探活检查。</li><li>域名无法配置端口。</li></ul><h5 id="服务注册中心-service-registry"><a class="markdownIt-Anchor" href="#服务注册中心-service-registry"></a> 服务注册中心 Service Registry</h5><p>解决思路：新增一个统一的服务注册中心，用于存储服务名到服务实例的映射。与 DNS 类似，也是一个中间层。</p><h5 id="服务实例上线及下线过程"><a class="markdownIt-Anchor" href="#服务实例上线及下线过程"></a> 服务实例上线及下线过程</h5><ul><li><p>当一个实例还有流量时，不能直接下线，当它没有流量时，可以下线。</p></li><li><p>当一个服务下线几个实例后访问压力过大，可以添加新的实例到服务中。</p></li><li><p>新启用的实例会先进行健康检查，检查无误后再注册到服务中心。</p></li><li><p>健康检查是在服务运作期间一直持续进行的。</p></li></ul><h4 id="23-流量特征"><a class="markdownIt-Anchor" href="#23-流量特征"></a> 2.3 流量特征</h4><ul><li>统一网关路口</li><li>内网通信多数采用 RPC</li><li>网状调用链路</li></ul><p>弱化连接的概念，强调“请求”，即同一个客户端长连接发出的请求，理论上可以到达服务中所有实例。网关 gateway 可以用于身份认证，进而将 token 附在请求上。</p><h4 id="24-总结"><a class="markdownIt-Anchor" href="#24-总结"></a> 2.4 总结</h4><ul><li>微服务架构中的基本组件及术语</li><li>服务注册及发现中间层</li><li>平滑无损的服务实例上下线流程</li><li>微服务架构中的基本流量特征</li></ul><h3 id="3核心服务治理功能"><a class="markdownIt-Anchor" href="#3核心服务治理功能"></a> 3.核心服务治理功能</h3><h4 id="31-服务发布"><a class="markdownIt-Anchor" href="#31-服务发布"></a> 3.1 服务发布</h4><p>服务发布（deployment），即让一个服务升级运行新的代码的过程。</p><p>服务发布的难点</p><ul><li><p>服务不可用</p></li><li><p>服务抖动</p></li><li><p>服务回滚</p></li><li><p>蓝绿部署问题</p></li><li><p>灰度发布（金丝雀发布）问题</p></li></ul><h4 id="32-流量治理"><a class="markdownIt-Anchor" href="#32-流量治理"></a> 3.2 流量治理</h4><p>在微服务架构下，可以基于地区、集群、实例、请求等维度，对端到端流量的路由路径进行精确控制（这里就是狭义的对流量进行控制）。</p><h4 id="33-负载均衡"><a class="markdownIt-Anchor" href="#33-负载均衡"></a> 3.3 负载均衡</h4><p>负载均衡（Load Balance）负责分配请求在每个下游实例上以控制分布情况。</p><p>常见的 LB 策略</p><ul><li>Round Robin</li><li>Random</li><li>Ring Hash</li><li>Least Request</li><li>…</li></ul><h4 id="34-稳定性治理"><a class="markdownIt-Anchor" href="#34-稳定性治理"></a> 3.4 稳定性治理</h4><p>线上服务难免会出现问题，这和程序本身正确性无关。</p><ul><li>网络攻击</li><li>流量突增</li><li>机房断电</li><li>光纤断开</li><li>机器故障</li><li>网络故障</li><li>机房空调故障</li><li>…</li></ul><p>微服务架构中典型的稳定性治理功能</p><ul><li>限流</li><li>熔断</li><li>过载保护</li><li>降级</li></ul><h4 id="35-总结"><a class="markdownIt-Anchor" href="#35-总结"></a> 3.5 总结</h4><ul><li>服务发布：蓝绿部署、灰度发布</li><li>基于地区、集群、实例、请求等维度的流量治理功能</li><li>几种常见的负载均衡策略</li><li>微服务架构中的稳定性治理功能</li></ul><h3 id="4服务治理实践"><a class="markdownIt-Anchor" href="#4服务治理实践"></a> 4.服务治理实践</h3><h4 id="41-重试的意义"><a class="markdownIt-Anchor" href="#41-重试的意义"></a> 4.1 重试的意义</h4><h5 id="本地函数调用可能引发的异常"><a class="markdownIt-Anchor" href="#本地函数调用可能引发的异常"></a> 本地函数调用可能引发的异常</h5><ul><li>参数非法</li><li>OOM（Out Of Memory）</li><li>NPE（Null Pointer Exception）</li><li>边界 case</li><li>系统崩溃</li><li>死循环</li><li>程序异常退出</li></ul><p>本地函数没有重试的意义</p><h5 id="远程函数调用可能引发的异常"><a class="markdownIt-Anchor" href="#远程函数调用可能引发的异常"></a> 远程函数调用可能引发的异常</h5><ul><li>网络抖动</li><li>下游负载高导致超时</li><li>下游机器宕机</li><li>本地机器负载高，调度超时</li><li>下游熔断、限流</li><li>…</li></ul><p>远程函数需要进行重试</p><p><strong>重试可以避免掉偶然发生的错误，提高 SLA（Service-Level Agreement）</strong></p><ul><li><p>降低错误率</p><p>假设单次请求的错误率为 0.01，那么连续两次的错误的概率为 0.0001。</p></li><li><p>降低长尾延时</p><p>对于偶尔耗时较长的请求，重试请求有机会提前返回。</p></li><li><p>容忍暂时性错误</p><p>某些时候系统会有暂时性异常，例如网络抖动，重试可以尽量规避。</p></li><li><p>避开下游故障实例</p><p>一个服务中可能会有少量实例故障，例如机器故障，重试其他实例可以成功。</p></li></ul><h4 id="42-重试的难点"><a class="markdownIt-Anchor" href="#42-重试的难点"></a> 4.2 重试的难点</h4><ul><li>幂等性：多次请求可能会造成数据不一致。</li><li>重试风暴：随着调用深度的增加，重试次数会指数级上涨。</li><li>超时设置：间隔多少时间后发起重试请求。例如，服务 A 向服务 B 重试 3 次，但服务 B 需要向服务 C 重试 9 次，服务 C 需要向服务 D 重试 27 次，以此类推。</li></ul><h4 id="43-重试策略"><a class="markdownIt-Anchor" href="#43-重试策略"></a> 4.3 重试策略</h4><p>重试只有在大部分请求都成功，只有少部分请求失败时，才有必要。如果大部分请求都失败，重试只会加剧问题严重性。</p><h5 id="限制重试比例"><a class="markdownIt-Anchor" href="#限制重试比例"></a> 限制重试比例</h5><p>设定一个重试比例阈值，例如 1%，重试次数占所有请求次数比例不能超过该阈值。</p><h5 id="防止链路重试"><a class="markdownIt-Anchor" href="#防止链路重试"></a> 防止链路重试</h5><p>链路层面的防重试风暴的核心是限制每层都发生重试，理想情况下是只有最下一层发生重试。可以返回特殊的 status 表明“请求失败，但不进行重试”。</p><p>缺点是需要侵入性修改业务代码。</p><h5 id="hedged-requests"><a class="markdownIt-Anchor" href="#hedged-requests"></a> Hedged requests</h5><p>对于可能超时或延时高的请求，重新向另一个下游实例发送一个相同的请求，并等待先到达的响应。</p><h4 id="44-重试效果验证"><a class="markdownIt-Anchor" href="#44-重试效果验证"></a> 4.4 重试效果验证</h4><p>实际验证经过上述重试策略后，在链路上发生的重试放大效应。</p><h4 id="45-总结"><a class="markdownIt-Anchor" href="#45-总结"></a> 4.5 总结</h4><ul><li>重试的意义及难点</li><li>应对重试风暴的策略</li></ul><h3 id="归纳总结"><a class="markdownIt-Anchor" href="#归纳总结"></a> 归纳总结</h3><ul><li>微服务架构介绍</li><li>微服务架构原理及特征</li><li>核心服务治理功能</li><li>服务治理实践</li></ul><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p><a class="link"   href="https://zhuanlan.zhihu.com/p/42671353" >什么是蓝绿部署、滚动发布和灰度发布？ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/141398230" >Motan系列6：负载均衡（LoadBalance） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://juejin.cn/post/7194381054797905981/#heading-0" >【后端专场 学习资料四】第五届字节跳动青训营 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文来源于第五届字节跳动青训营活动，已收录到&lt;a class=&quot;link&quot;   href=&quot;https://juejin.cn/post/7196678344573337656&quot; &gt;微服务架构 | 青训营笔记 - 掘金 (juejin.cn) &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;，主要记录了对微服务架构原理与治理实践的学习</summary>
    
    
    
    <category term="青训营记录" scheme="https://www.entropy-tree.top/categories/%E9%9D%92%E8%AE%AD%E8%90%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="学习笔记" scheme="https://www.entropy-tree.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
